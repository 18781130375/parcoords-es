{"version":3,"file":"parcoords.js","sources":["../src/util/renderQueue.js","../src/util/width.js","../src/brush/1d/brushExtents.js","../src/brush/1d/brushReset.js","../src/brush/1d/selected.js","../src/brush/1d/brushFor.js","../src/brush/1d/install.js","../src/brush/1d/uninstall.js","../src/brush/1d/index.js","../src/brush/strums/uninstall.js","../src/brush/strums/selected.js","../src/brush/strums/removeStrum.js","../src/brush/strums/onDragEnd.js","../src/brush/strums/onDrag.js","../src/util/height.js","../src/brush/dimensionsForPoint.js","../src/brush/strums/onDragStart.js","../src/brush/strums/brushReset.js","../src/brush/consecutive.js","../src/brush/strums/install.js","../src/brush/strums/index.js","../src/brush/angular/uninstall.js","../src/brush/angular/util/hypothenuse.js","../src/brush/angular/selected.js","../src/brush/angular/removeStrum.js","../src/brush/angular/onDragEnd.js","../src/brush/angular/onDrag.js","../src/brush/angular/onDragStart.js","../src/brush/angular/brushReset.js","../src/brush/angular/install.js","../src/brush/angular/index.js","../src/api/intersection.js","../src/api/mergeParcoords.js","../src/api/selected.js","../src/api/brushMode.js","../src/util/dimensionLabels.js","../src/util/flipAxisAndUpdatePCP.js","../src/util/rotateLabels.js","../src/api/updateAxes.js","../src/util/getRange.js","../src/api/autoscale.js","../src/api/brushable.js","../src/api/commonScale.js","../src/api/computeRealCentroids.js","../src/api/applyDimensionDefaults.js","../src/api/createAxes.js","../src/api/axisDots.js","../src/api/applyAxisConfig.js","../src/api/reorderable.js","../src/api/resize.js","../src/api/reorder.js","../src/api/sortDimensions.js","../src/api/sortDimensionsByRowData.js","../src/util/isBrushed.js","../src/api/clear.js","../src/util/computeCentroids.js","../src/util/computeControlPoints.js","../src/util/colorPath.js","../src/util/functor.js","../src/api/renderBrushed.js","../src/api/brushReset.js","../src/api/toType.js","../src/api/toString.js","../src/api/adjacentPairs.js","../src/api/highlight.js","../src/api/unhighlight.js","../src/api/removeAxes.js","../src/api/render.js","../src/api/renderDefault.js","../src/api/toTypeCoerceNumbers.js","../src/api/detectDimensionTypes.js","../src/api/getOrderedDimensionKeys.js","../src/api/interactive.js","../src/api/shadows.js","../src/api/init.js","../src/api/flip.js","../src/api/detectDimensions.js","../src/api/scale.js","../src/state/defaultConfig.js","../src/state/index.js","../src/util/computeClusterCentroids.js","../src/state/sideEffects.js","../src/util/getset.js","../src/bindEvents.js","../src/index.js"],"sourcesContent":["import 'requestanimationframe';\n\nconst renderQueue = function(func) {\n  let _queue = [], // data to be rendered\n    _rate = 1000, // number of calls per frame\n    _invalidate = function() {}, // invalidate last render queue\n    _clear = function() {}; // clearing function\n\n  let rq = function(data) {\n    if (data) rq.data(data);\n    _invalidate();\n    _clear();\n    rq.render();\n  };\n\n  rq.render = function() {\n    let valid = true;\n    _invalidate = rq.invalidate = function() {\n      valid = false;\n    };\n\n    function doFrame() {\n      if (!valid) return true;\n      let chunk = _queue.splice(0, _rate);\n      chunk.map(func);\n      requestAnimationFrame(doFrame);\n    }\n\n    doFrame();\n  };\n\n  rq.data = function(data) {\n    _invalidate();\n    _queue = data.slice(0); // creates a copy of the data\n    return rq;\n  };\n\n  rq.add = function(data) {\n    _queue = _queue.concat(data);\n  };\n\n  rq.rate = function(value) {\n    if (!arguments.length) return _rate;\n    _rate = value;\n    return rq;\n  };\n\n  rq.remaining = function() {\n    return _queue.length;\n  };\n\n  // clear the canvas\n  rq.clear = function(func) {\n    if (!arguments.length) {\n      _clear();\n      return rq;\n    }\n    _clear = func;\n    return rq;\n  };\n\n  rq.invalidate = _invalidate;\n\n  return rq;\n};\n\nexport default renderQueue;\n","const w = config => config.width - config.margin.right - config.margin.left;\n\nexport default w;\n","import { keys } from 'd3-collection';\nimport { select } from 'd3-selection';\nimport { brushSelection } from 'd3-brush';\n\nconst brushExtents = (state, config, pc) => extents => {\n  const { brushes, brushNodes } = state;\n\n  if (typeof extents === 'undefined') {\n    return keys(config.dimensions).reduce((acc, cur) => {\n      const brush = brushes[cur];\n      //todo: brush check\n      if (brush !== undefined && brushSelection(brushNodes[cur]) !== null) {\n        acc[d] = brush.extent();\n      }\n\n      return acc;\n    }, {});\n  } else {\n    //first get all the brush selections\n    const brushSelections = {};\n    pc\n      .g()\n      .selectAll('.brush')\n      .each(function(d) {\n        brushSelections[d] = select(this);\n      });\n\n    // loop over each dimension and update appropriately (if it was passed in through extents)\n    keys(config.dimensions).forEach(d => {\n      if (extents[d] === undefined) {\n        return;\n      }\n\n      const brush = brushes[d];\n      if (brush !== undefined) {\n        const dim = config.dimensions[d];\n        const yExtent = extents[d].map(dim.yscale);\n\n        //update the extent\n        //sets the brushable extent to the specified array of points [[x0, y0], [x1, y1]]\n        brush.extent([[-15, yExtent[1]], [15, yExtent[0]]]);\n\n        //redraw the brush\n        //https://github.com/d3/d3-brush#brush_move\n        // For an x-brush, it must be defined as [x0, x1]; for a y-brush, it must be defined as [y0, y1].\n        brushSelections[d].call(brush).call(brush.move, yExtent.reverse());\n\n        //fire some events\n        // brush.event(brushSelections[d]);\n      }\n    });\n\n    //redraw the chart\n    pc.renderBrushed();\n\n    return pc;\n  }\n};\n\nexport default brushExtents;\n","import { select } from 'd3-selection';\n\nconst brushReset = (state, config, pc) => dimension => {\n  const { brushes } = state;\n\n  if (dimension === undefined) {\n    config.brushed = false;\n    if (pc.g() !== undefined && pc.g() !== null) {\n      pc\n        .g()\n        .selectAll('.brush')\n        .each(function(d) {\n          select(this).call(brushes[d].move, null);\n        });\n      pc.renderBrushed();\n    }\n  } else {\n    if (pc.g() !== undefined && pc.g() !== null) {\n      pc\n        .g()\n        .selectAll('.brush')\n        .each(function(d) {\n          if (d != dimension) return;\n          select(this).call(brushes[d].move, null);\n          brushes[d].event(select(this));\n        });\n      pc.renderBrushed();\n    }\n  }\n  return this;\n};\n\nexport default brushReset;\n","import { brushSelection } from 'd3-brush';\n//https://github.com/d3/d3-brush/issues/10\nimport { keys } from 'd3-collection';\n\n// data within extents\nconst selected = (state, config, brushGroup) => () => {\n  const { brushNodes } = state;\n  const is_brushed = p => brushSelection(brushNodes[p]) !== null;\n\n  const actives = keys(config.dimensions).filter(is_brushed);\n  const extents = actives.map(p => {\n    const _brushRange = brushSelection(brushNodes[p]);\n\n    if (typeof config.dimensions[p].yscale.invert === 'function') {\n      return [\n        config.dimensions[p].yscale.invert(_brushRange[1]),\n        config.dimensions[p].yscale.invert(_brushRange[0]),\n      ];\n    } else {\n      return _brushRange;\n    }\n  });\n  // We don't want to return the full data set when there are no axes brushed.\n  // Actually, when there are no axes brushed, by definition, no items are\n  // selected. So, let's avoid the filtering and just return false.\n  //if (actives.length === 0) return false;\n\n  // Resolves broken examples for now. They expect to get the full dataset back from empty brushes\n  if (actives.length === 0) return config.data;\n\n  // test if within range\n  const within = {\n    date: (d, p, dimension) => {\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\n        // if it is ordinal\n        return (\n          extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\n          config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n        );\n      } else {\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\n      }\n    },\n    number: (d, p, dimension) => {\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\n        // if it is ordinal\n        return (\n          extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\n          config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n        );\n      } else {\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\n      }\n    },\n    string: (d, p, dimension) => {\n      return (\n        extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\n        config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n      );\n    },\n  };\n\n  return config.data.filter(d => {\n    switch (brushGroup.predicate) {\n      case 'AND':\n        return actives.every(function(p, dimension) {\n          return within[config.dimensions[p].type](d, p, dimension);\n        });\n      case 'OR':\n        return actives.some(function(p, dimension) {\n          return within[config.dimensions[p].type](d, p, dimension);\n        });\n      default:\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\n    }\n  });\n};\n\nexport default selected;\n","import { brushY } from 'd3-brush';\nimport { event } from 'd3-selection';\n\nimport selected from './selected';\n\nconst brushUpdated = (config, pc, events) => newSelection => {\n  config.brushed = newSelection;\n  events.call('brush', pc, config.brushed);\n  pc.renderBrushed();\n};\n\nconst brushFor = (state, config, pc, events, brushGroup) => (\n  axis,\n  _selector\n) => {\n  const brushRangeMax =\n    config.dimensions[axis].type === 'string'\n      ? config.dimensions[axis].yscale.range()[\n          config.dimensions[axis].yscale.range().length - 1\n        ]\n      : config.dimensions[axis].yscale.range()[0];\n\n  const _brush = brushY(_selector).extent([[-15, 0], [15, brushRangeMax]]);\n\n  _brush\n    .on('start', function() {\n      if (event.sourceEvent !== null) {\n        events.call('brushstart', pc, config.brushed);\n        event.sourceEvent.stopPropagation();\n      }\n    })\n    .on('brush', function() {\n      brushUpdated(config, pc, events)(selected(state, config, brushGroup)());\n    })\n    .on('end', function() {\n      brushUpdated(config, pc, events)(selected(state, config, brushGroup)());\n      events.call('brushend', pc, config.brushed);\n    });\n\n  state.brushes[axis] = _brush;\n  state.brushNodes[axis] = _selector.node();\n\n  return _brush;\n};\n\nexport default brushFor;\n","import { select } from 'd3-selection';\nimport brushExtents from './brushExtents';\nimport brushReset from './brushReset';\nimport brushFor from './brushFor';\n\nconst install = (state, config, pc, events, brushGroup) => () => {\n  if (!pc.g()) {\n    pc.createAxes();\n  }\n\n  // Add and store a brush for each axis.\n  const brush = pc\n    .g()\n    .append('svg:g')\n    .attr('class', 'brush')\n    .each(function(d) {\n      select(this).call(\n        brushFor(state, config, pc, events, brushGroup)(d, select(this))\n      );\n    });\n  brush\n    .selectAll('rect')\n    .style('visibility', null)\n    .attr('x', -15)\n    .attr('width', 30);\n\n  brush.selectAll('rect.background').style('fill', 'transparent');\n\n  brush\n    .selectAll('rect.extent')\n    .style('fill', 'rgba(255,255,255,0.25)')\n    .style('stroke', 'rgba(0,0,0,0.6)');\n\n  brush.selectAll('.resize rect').style('fill', 'rgba(0,0,0,0.1)');\n\n  pc.brushExtents = brushExtents(state, config, pc);\n  pc.brushReset = brushReset(state, config, pc);\n  return pc;\n};\n\nexport default install;\n","const uninstall = (state, pc) => () => {\n  if (pc.g() !== undefined && pc.g() !== null)\n    pc\n      .g()\n      .selectAll('.brush')\n      .remove();\n\n  state.brushes = {};\n  delete pc.brushExtents;\n  delete pc.brushReset;\n};\n\nexport default uninstall;\n","import brushExtents from './brushExtents';\nimport install from './install';\nimport selected from './selected';\nimport uninstall from './uninstall';\n\nconst BrushState = {\n  brushes: {},\n  brushNodes: {},\n};\n\nconst install1DAxes = (brushGroup, config, pc, events) => {\n  const state = Object.assign({}, BrushState);\n\n  brushGroup.modes['1D-axes'] = {\n    install: install(state, config, pc, events, brushGroup),\n    uninstall: uninstall(state, pc),\n    selected: selected(state, config, brushGroup),\n    brushState: brushExtents(state, config, pc),\n  };\n};\n\nexport default install1DAxes;\n","const uninstall = (state, pc) => () => {\n  pc.selection\n    .select('svg')\n    .select('g#strums')\n    .remove();\n  pc.selection\n    .select('svg')\n    .select('rect#strum-events')\n    .remove();\n  pc.on('axesreorder.strums', undefined);\n  delete pc.brushReset;\n\n  state.strumRect = undefined;\n};\n\nexport default uninstall;\n","// test if point falls between lines\nconst containmentTest = (strum, width) => p => {\n  const p1 = [strum.p1[0] - strum.minX, strum.p1[1] - strum.minX],\n    p2 = [strum.p2[0] - strum.minX, strum.p2[1] - strum.minX],\n    m1 = 1 - width / p1[0],\n    b1 = p1[1] * (1 - m1),\n    m2 = 1 - width / p2[0],\n    b2 = p2[1] * (1 - m2);\n\n  const x = p[0],\n    y = p[1],\n    y1 = m1 * x + b1,\n    y2 = m2 * x + b2;\n\n  return y > Math.min(y1, y2) && y < Math.max(y1, y2);\n};\n\nconst crossesStrum = (state, config) => (d, id) => {\n  let strum = state.strums[id],\n    test = containmentTest(strum, state.strums.width(id)),\n    d1 = strum.dims.left,\n    d2 = strum.dims.right,\n    y1 = config.dimensions[d1].yscale,\n    y2 = config.dimensions[d2].yscale,\n    point = [y1(d[d1]) - strum.minX, y2(d[d2]) - strum.minX];\n  return test(point);\n};\n\nconst selected = (brushGroup, state, config) => {\n  // Get the ids of the currently active strums.\n  const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d)),\n    brushed = config.data;\n\n  if (ids.length === 0) {\n    return brushed;\n  }\n\n  const crossTest = crossesStrum(state, config);\n\n  return brushed.filter(d => {\n    switch (brushGroup.predicate) {\n      case 'AND':\n        return ids.every(id => crossTest(d, id));\n      case 'OR':\n        return ids.some(id => crossTest(d, id));\n      default:\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\n    }\n  });\n};\n\nexport default selected;\n","const removeStrum = (state, pc) => {\n  const strum = state.strums[state.strums.active],\n    svg = pc.selection.select('svg').select('g#strums');\n\n  delete state.strums[state.strums.active];\n  svg.selectAll('line#strum-' + strum.dims.i).remove();\n  svg.selectAll('circle#strum-' + strum.dims.i).remove();\n};\n\nexport default removeStrum;\n","import selected from './selected';\nimport removeStrum from './removeStrum';\n\nconst onDragEnd = (brushGroup, state, config, pc, events) => () => {\n  const strum = state.strums[state.strums.active];\n\n  // Okay, somewhat unexpected, but not totally unsurprising, a mousclick is\n  // considered a drag without move. So we have to deal with that case\n  if (strum && strum.p1[0] === strum.p2[0] && strum.p1[1] === strum.p2[1]) {\n    removeStrum(state, pc);\n  }\n\n  const brushed = selected(brushGroup, state, config);\n  state.strums.active = undefined;\n  config.brushed = brushed;\n  pc.renderBrushed();\n  events.call('brushend', pc, config.brushed);\n};\n\nexport default onDragEnd;\n","import { event, select } from 'd3-selection';\nimport { drag } from 'd3-drag';\nimport onDragEnd from './onDragEnd';\n\nconst drawStrum = (\n  brushGroup,\n  state,\n  config,\n  pc,\n  events,\n  strum,\n  activePoint\n) => {\n  let _svg = pc.selection.select('svg').select('g#strums'),\n    id = strum.dims.i,\n    points = [strum.p1, strum.p2],\n    _line = _svg.selectAll('line#strum-' + id).data([strum]),\n    circles = _svg.selectAll('circle#strum-' + id).data(points),\n    _drag = drag();\n\n  _line\n    .enter()\n    .append('line')\n    .attr('id', 'strum-' + id)\n    .attr('class', 'strum');\n\n  _line\n    .attr('x1', d => d.p1[0])\n    .attr('y1', d => d.p1[1])\n    .attr('x2', d => d.p2[0])\n    .attr('y2', d => d.p2[1])\n    .attr('stroke', 'black')\n    .attr('stroke-width', 2);\n\n  _drag\n    .on('drag', function(d, i) {\n      const ev = event;\n      i = i + 1;\n      strum['p' + i][0] = Math.min(Math.max(strum.minX + 1, ev.x), strum.maxX);\n      strum['p' + i][1] = Math.min(Math.max(strum.minY, ev.y), strum.maxY);\n      drawStrum(brushGroup, state, config, pc, events, strum, i - 1);\n    })\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\n\n  circles\n    .enter()\n    .append('circle')\n    .attr('id', 'strum-' + id)\n    .attr('class', 'strum');\n\n  circles\n    .attr('cx', d => d[0])\n    .attr('cy', d => d[1])\n    .attr('r', 5)\n    .style(\n      'opacity',\n      (d, i) => (activePoint !== undefined && i === activePoint ? 0.8 : 0)\n    )\n    .on('mouseover', function() {\n      select(this).style('opacity', 0.8);\n    })\n    .on('mouseout', function() {\n      select(this).style('opacity', 0);\n    })\n    .call(_drag);\n};\n\nconst onDrag = (brushGroup, state, config, pc, events) => () => {\n  const ev = event,\n    strum = state.strums[state.strums.active];\n\n  // Make sure that the point is within the bounds\n  strum.p2[0] = Math.min(\n    Math.max(strum.minX + 1, ev.x - config.margin.left),\n    strum.maxX\n  );\n  strum.p2[1] = Math.min(\n    Math.max(strum.minY, ev.y - config.margin.top),\n    strum.maxY\n  );\n\n  drawStrum(brushGroup, state, config, pc, events, strum, 1);\n};\n\nexport default onDrag;\n","const h = config => config.height - config.margin.top - config.margin.bottom;\n\nexport default h;\n","import { keys } from 'd3-collection';\n\nconst dimensionsForPoint = (config, pc, xscale, p) => {\n  const dims = { i: -1, left: undefined, right: undefined };\n  keys(config.dimensions).some((dim, i) => {\n    if (xscale(dim) < p[0]) {\n      dims.i = i;\n      dims.left = dim;\n      dims.right = keys(config.dimensions)[\n        pc.getOrderedDimensionKeys().indexOf(dim) + 1\n      ];\n      return false;\n    }\n    return true;\n  });\n\n  if (dims.left === undefined) {\n    // Event on the left side of the first axis.\n    dims.i = 0;\n    dims.left = pc.getOrderedDimensionKeys()[0];\n    dims.right = pc.getOrderedDimensionKeys()[1];\n  } else if (dims.right === undefined) {\n    // Event on the right side of the last axis\n    dims.i = keys(config.dimensions).length - 1;\n    dims.right = dims.left;\n    dims.left = pc.getOrderedDimensionKeys()[\n      keys(config.dimensions).length - 2\n    ];\n  }\n\n  return dims;\n};\n\nexport default dimensionsForPoint;\n","import { mouse } from 'd3-selection';\nimport h from '../../util/height';\nimport dimensionsForPoint from '../dimensionsForPoint';\n\n// First we need to determine between which two axes the sturm was started.\n// This will determine the freedom of movement, because a strum can\n// logically only happen between two axes, so no movement outside these axes\n// should be allowed.\nconst onDragStart = (state, config, pc, xscale) => () => {\n  let p = mouse(state.strumRect.node());\n\n  p[0] = p[0] - config.margin.left;\n  p[1] = p[1] - config.margin.top;\n\n  const dims = dimensionsForPoint(config, pc, xscale, p);\n  const strum = {\n    p1: p,\n    dims: dims,\n    minX: xscale(dims.left),\n    maxX: xscale(dims.right),\n    minY: 0,\n    maxY: h(config),\n  };\n\n  // Make sure that the point is within the bounds\n  strum.p1[0] = Math.min(Math.max(strum.minX, p[0]), strum.maxX);\n  strum.p2 = strum.p1.slice();\n\n  state.strums[dims.i] = strum;\n  state.strums.active = dims.i;\n};\n\nexport default onDragStart;\n","import onDragEnd from './onDragEnd';\nimport removeStrum from './removeStrum';\n\nconst brushReset = (brushGroup, state, config, pc, events) => () => {\n  const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d));\n\n  ids.forEach(d => {\n    state.strums.active = d;\n    removeStrum(state, pc);\n  });\n  onDragEnd(brushGroup, state, config, pc, events)();\n};\n\nexport default brushReset;\n","// Checks if the first dimension is directly left of the second dimension.\nimport { keys } from 'd3-collection';\n\nconst consecutive = dimensions => (first, second) => {\n  const keys = keys(dimensions);\n\n  return keys.some(\n    (d, i) =>\n      d === first ? i + i < keys.length && dimensions[i + 1] === second : false\n  );\n};\n\nexport default consecutive;\n","import { drag } from 'd3-drag';\nimport onDragEnd from './onDragEnd';\nimport onDrag from './onDrag';\nimport onDragStart from './onDragStart';\nimport removeStrum from './removeStrum';\nimport brushReset from './brushReset';\nimport w from '../../util/width';\nimport h from '../../util/height';\nimport consecutive from '../consecutive';\n\nconst install = (brushGroup, state, config, pc, events, xscale) => () => {\n  if (pc.g() === undefined || pc.g() === null) {\n    pc.createAxes();\n  }\n\n  const _drag = drag();\n\n  // Map of current strums. Strums are stored per segment of the PC. A segment,\n  // being the area between two axes. The left most area is indexed at 0.\n  state.strums.active = undefined;\n  // Returns the width of the PC segment where currently a strum is being\n  // placed. NOTE: even though they are evenly spaced in our current\n  // implementation, we keep for when non-even spaced segments are supported as\n  // well.\n  state.strums.width = id =>\n    state.strums[id] === undefined\n      ? undefined\n      : state.strums[id].maxX - state.strums[id].minX;\n\n  pc.on('axesreorder.strums', () => {\n    const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d));\n\n    if (ids.length > 0) {\n      // We have some strums, which might need to be removed.\n      ids.forEach(d => {\n        const dims = state.strums[d].dims;\n        state.strums.active = d;\n        // If the two dimensions of the current strum are not next to each other\n        // any more, than we'll need to remove the strum. Otherwise we keep it.\n        if (!consecutive(config.dimensions)(dims.left, dims.right)) {\n          removeStrum(state, pc);\n        }\n      });\n      onDragEnd(brushGroup, state, config, pc, events)();\n    }\n  });\n\n  // Add a new svg group in which we draw the strums.\n  pc.selection\n    .select('svg')\n    .append('g')\n    .attr('id', 'strums')\n    .attr(\n      'transform',\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\n    );\n\n  // Install the required brushReset function\n  pc.brushReset = brushReset(brushGroup, state, config, pc, events);\n\n  _drag\n    .on('start', onDragStart(state, config, pc, xscale))\n    .on('drag', onDrag(brushGroup, state, config, pc, events))\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\n\n  // NOTE: The styling needs to be done here and not in the css. This is because\n  //       for 1D brushing, the canvas layers should not listen to\n  //       pointer-events._.\n  state.strumRect = pc.selection\n    .select('svg')\n    .insert('rect', 'g#strums')\n    .attr('id', 'strum-events')\n    .attr('x', config.margin.left)\n    .attr('y', config.margin.top)\n    .attr('width', w(config))\n    .attr('height', h(config) + 2)\n    .style('opacity', 0)\n    .call(_drag);\n};\n\nexport default install;\n","import uninstall from './uninstall';\nimport install from './install';\nimport selected from './selected';\n\nconst BrushState = {\n  strums: {},\n  strumRect: {},\n};\n\nconst install2DStrums = (brushGroup, config, pc, events, xscale) => {\n  const state = Object.assign({}, BrushState);\n\n  brushGroup.modes['2D-strums'] = {\n    install: install(brushGroup, state, config, pc, events, xscale),\n    uninstall: uninstall(state, pc),\n    selected: selected(brushGroup, state, config),\n    brushState: () => state.strums,\n  };\n};\n\nexport default install2DStrums;\n","const uninstall = (state, pc) => () => {\n  pc.selection\n    .select('svg')\n    .select('g#arcs')\n    .remove();\n  pc.selection\n    .select('svg')\n    .select('rect#arc-events')\n    .remove();\n  pc.on('axesreorder.arcs', undefined);\n\n  delete pc.brushReset;\n\n  state.strumRect = undefined;\n};\n\nexport default uninstall;\n","const hypothenuse = (a, b) => Math.sqrt(a * a + b * b);\n\nexport default hypothenuse;\n","import hypothenuse from './util/hypothenuse';\n\n// [0, 2*PI] -> [-PI/2, PI/2]\nconst signedAngle = angle =>\n  angle > Math.PI ? 1.5 * Math.PI - angle : 0.5 * Math.PI - angle;\n\n/**\n * angles are stored in radians from in [0, 2*PI], where 0 in 12 o'clock.\n * However, one can only select lines from 0 to PI, so we compute the\n * 'signed' angle, where 0 is the horizontal line (3 o'clock), and +/- PI/2\n * are 12 and 6 o'clock respectively.\n */\nconst containmentTest = arc => a => {\n  let startAngle = signedAngle(arc.startAngle);\n  let endAngle = signedAngle(arc.endAngle);\n\n  if (startAngle > endAngle) {\n    const tmp = startAngle;\n    startAngle = endAngle;\n    endAngle = tmp;\n  }\n\n  // test if segment angle is contained in angle interval\n  return a >= startAngle && a <= endAngle;\n};\n\nconst crossesStrum = (state, config) => (d, id) => {\n  const arc = state.arcs[id],\n    test = containmentTest(arc),\n    d1 = arc.dims.left,\n    d2 = arc.dims.right,\n    y1 = config.dimensions[d1].yscale,\n    y2 = config.dimensions[d2].yscale,\n    a = state.arcs.width(id),\n    b = y1(d[d1]) - y2(d[d2]),\n    c = hypothenuse(a, b),\n    angle = Math.asin(b / c); // rad in [-PI/2, PI/2]\n  return test(angle);\n};\n\nconst selected = (brushGroup, state, config) => {\n  const ids = Object.getOwnPropertyNames(state.arcs).filter(d => !isNaN(d));\n  const brushed = config.data;\n\n  if (ids.length === 0) {\n    return brushed;\n  }\n\n  const crossTest = crossesStrum(state, config);\n\n  return brushed.filter(d => {\n    switch (brushGroup.predicate) {\n      case 'AND':\n        return ids.every(id => crossTest(d, id));\n      case 'OR':\n        return ids.some(id => crossTest(d, id));\n      default:\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\n    }\n  });\n};\n\nexport default selected;\n","const removeStrum = (state, pc) => {\n  const arc = state.arcs[state.arcs.active],\n    svg = pc.selection.select('svg').select('g#arcs');\n\n  delete state.arcs[state.arcs.active];\n  state.arcs.active = undefined;\n  svg.selectAll('line#arc-' + arc.dims.i).remove();\n  svg.selectAll('circle#arc-' + arc.dims.i).remove();\n  svg.selectAll('path#arc-' + arc.dims.i).remove();\n};\n\nexport default removeStrum;\n","import selected from './selected';\nimport removeStrum from './removeStrum';\n\nconst onDragEnd = (brushGroup, state, config, pc, events) => () => {\n  const arc = state.arcs[state.arcs.active];\n\n  // Okay, somewhat unexpected, but not totally unsurprising, a mousclick is\n  // considered a drag without move. So we have to deal with that case\n  if (arc && arc.p1[0] === arc.p2[0] && arc.p1[1] === arc.p2[1]) {\n    removeStrum(state, pc);\n  }\n\n  if (arc) {\n    const angle = state.arcs.startAngle(state.arcs.active);\n\n    arc.startAngle = angle;\n    arc.endAngle = angle;\n    arc.arc\n      .outerRadius(state.arcs.length(state.arcs.active))\n      .startAngle(angle)\n      .endAngle(angle);\n  }\n\n  state.arcs.active = undefined;\n  config.brushed = selected(brushGroup, state, config);\n  pc.renderBrushed();\n  events.call('brushend', pc, config.brushed);\n};\n\nexport default onDragEnd;\n","import { event, select } from 'd3-selection';\nimport { drag } from 'd3-drag';\nimport onDragEnd from './onDragEnd';\n\nconst drawStrum = (brushGroup, state, config, pc, events, arc, activePoint) => {\n  const svg = pc.selection.select('svg').select('g#arcs'),\n    id = arc.dims.i,\n    points = [arc.p2, arc.p3],\n    _line = svg\n      .selectAll('line#arc-' + id)\n      .data([{ p1: arc.p1, p2: arc.p2 }, { p1: arc.p1, p2: arc.p3 }]),\n    circles = svg.selectAll('circle#arc-' + id).data(points),\n    _drag = drag(),\n    _path = svg.selectAll('path#arc-' + id).data([arc]);\n\n  _path\n    .enter()\n    .append('path')\n    .attr('id', 'arc-' + id)\n    .attr('class', 'arc')\n    .style('fill', 'orange')\n    .style('opacity', 0.5);\n\n  _path\n    .attr('d', arc.arc)\n    .attr('transform', 'translate(' + arc.p1[0] + ',' + arc.p1[1] + ')');\n\n  _line\n    .enter()\n    .append('line')\n    .attr('id', 'arc-' + id)\n    .attr('class', 'arc');\n\n  _line\n    .attr('x1', d => d.p1[0])\n    .attr('y1', d => d.p1[1])\n    .attr('x2', d => d.p2[0])\n    .attr('y2', d => d.p2[1])\n    .attr('stroke', 'black')\n    .attr('stroke-width', 2);\n\n  _drag\n    .on('drag', (d, i) => {\n      const ev = event;\n      i = i + 2;\n\n      arc['p' + i][0] = Math.min(Math.max(arc.minX + 1, ev.x), arc.maxX);\n      arc['p' + i][1] = Math.min(Math.max(arc.minY, ev.y), arc.maxY);\n\n      const angle =\n        i === 3 ? state.arcs.startAngle(id) : state.arcs.endAngle(id);\n\n      if (\n        (arc.startAngle < Math.PI &&\n          arc.endAngle < Math.PI &&\n          angle < Math.PI) ||\n        (arc.startAngle >= Math.PI &&\n          arc.endAngle >= Math.PI &&\n          angle >= Math.PI)\n      ) {\n        if (i === 2) {\n          arc.endAngle = angle;\n          arc.arc.endAngle(angle);\n        } else if (i === 3) {\n          arc.startAngle = angle;\n          arc.arc.startAngle(angle);\n        }\n      }\n\n      drawStrum(brushGroup, state, config, pc, events, arc, i - 2);\n    })\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\n\n  circles\n    .enter()\n    .append('circle')\n    .attr('id', 'arc-' + id)\n    .attr('class', 'arc');\n\n  circles\n    .attr('cx', d => d[0])\n    .attr('cy', d => d[1])\n    .attr('r', 5)\n    .style(\n      'opacity',\n      (d, i) => (activePoint !== undefined && i === activePoint ? 0.8 : 0)\n    )\n    .on('mouseover', function() {\n      select(this).style('opacity', 0.8);\n    })\n    .on('mouseout', function() {\n      select(this).style('opacity', 0);\n    })\n    .call(_drag);\n};\n\nconst onDrag = (brushGroup, state, config, pc, events) => () => {\n  const ev = event,\n    arc = state.arcs[state.arcs.active];\n\n  // Make sure that the point is within the bounds\n  arc.p2[0] = Math.min(\n    Math.max(arc.minX + 1, ev.x - config.margin.left),\n    arc.maxX\n  );\n  arc.p2[1] = Math.min(Math.max(arc.minY, ev.y - config.margin.top), arc.maxY);\n  arc.p3 = arc.p2.slice();\n  drawStrum(brushGroup, state, config, pc, events, arc, 1);\n};\n\nexport default onDrag;\n","import { mouse } from 'd3-selection';\nimport h from '../../util/height';\nimport { arc as d3Arc } from 'd3-shape';\nimport dimensionsForPoint from '../dimensionsForPoint';\n\n// First we need to determine between which two axes the arc was started.\n// This will determine the freedom of movement, because a arc can\n// logically only happen between two axes, so no movement outside these axes\n// should be allowed.\nconst onDragStart = (state, config, pc, xscale) => () => {\n  const p = mouse(state.strumRect.node());\n\n  p[0] = p[0] - config.margin.left;\n  p[1] = p[1] - config.margin.top;\n\n  const dims = dimensionsForPoint(config, pc, xscale, p);\n  const arc = {\n    p1: p,\n    dims: dims,\n    minX: xscale(dims.left),\n    maxX: xscale(dims.right),\n    minY: 0,\n    maxY: h(config),\n    startAngle: undefined,\n    endAngle: undefined,\n    arc: d3Arc().innerRadius(0),\n  };\n\n  // Make sure that the point is within the bounds\n  arc.p1[0] = Math.min(Math.max(arc.minX, p[0]), arc.maxX);\n  arc.p2 = arc.p1.slice();\n  arc.p3 = arc.p1.slice();\n\n  state.arcs[dims.i] = arc;\n  state.arcs.active = dims.i;\n};\n\nexport default onDragStart;\n","import onDragEnd from './onDragEnd';\nimport removeStrum from './removeStrum';\n\nconst brushReset = (brushGroup, state, config, pc, events) => () => {\n  const ids = Object.getOwnPropertyNames(state.arcs).filter(d => !isNaN(d));\n\n  ids.forEach(d => {\n    state.arcs.active = d;\n    removeStrum(state, pc);\n  });\n  onDragEnd(brushGroup, state, config, pc, events)();\n};\n\nexport default brushReset;\n","import { drag } from 'd3-drag';\nimport onDragEnd from './onDragEnd';\nimport onDrag from './onDrag';\nimport onDragStart from './onDragStart';\nimport removeStrum from './removeStrum';\nimport brushReset from './brushReset';\nimport w from '../../util/width';\nimport h from '../../util/height';\n\nimport hypothenuse from './util/hypothenuse';\nimport consecutive from '../consecutive';\n\n// returns angles in [-PI/2, PI/2]\nconst angle = (p1, p2) => {\n  const a = p1[0] - p2[0],\n    b = p1[1] - p2[1],\n    c = hypothenuse(a, b);\n\n  return Math.asin(b / c);\n};\n\nconst endAngle = state => id => {\n  const arc = state.arcs[id];\n  if (arc === undefined) {\n    return undefined;\n  }\n  let sAngle = angle(arc.p1, arc.p2),\n    uAngle = -sAngle + Math.PI / 2;\n\n  if (arc.p1[0] > arc.p2[0]) {\n    uAngle = 2 * Math.PI - uAngle;\n  }\n\n  return uAngle;\n};\n\nconst startAngle = state => id => {\n  const arc = state.arcs[id];\n  if (arc === undefined) {\n    return undefined;\n  }\n\n  let sAngle = angle(arc.p1, arc.p3),\n    uAngle = -sAngle + Math.PI / 2;\n\n  if (arc.p1[0] > arc.p3[0]) {\n    uAngle = 2 * Math.PI - uAngle;\n  }\n\n  return uAngle;\n};\n\nconst length = state => id => {\n  const arc = state.arcs[id];\n\n  if (arc === undefined) {\n    return undefined;\n  }\n\n  const a = arc.p1[0] - arc.p2[0],\n    b = arc.p1[1] - arc.p2[1];\n\n  return hypothenuse(a, b);\n};\n\nconst install = (brushGroup, state, config, pc, events, xscale) => () => {\n  if (!pc.g()) {\n    pc.createAxes();\n  }\n\n  const _drag = drag();\n\n  // Map of current arcs. arcs are stored per segment of the PC. A segment,\n  // being the area between two axes. The left most area is indexed at 0.\n  state.arcs.active = undefined;\n  // Returns the width of the PC segment where currently a arc is being\n  // placed. NOTE: even though they are evenly spaced in our current\n  // implementation, we keep for when non-even spaced segments are supported as\n  // well.\n  state.arcs.width = id => {\n    const arc = state.arcs[id];\n    return arc === undefined ? undefined : arc.maxX - arc.minX;\n  };\n\n  // returns angles in [0, 2 * PI]\n  state.arcs.endAngle = endAngle(state);\n  state.arcs.startAngle = startAngle(state);\n  state.arcs.length = length(state);\n\n  pc.on('axesreorder.arcs', () => {\n    const ids = Object.getOwnPropertyNames(arcs).filter(d => !isNaN(d));\n\n    if (ids.length > 0) {\n      // We have some arcs, which might need to be removed.\n      ids.forEach(d => {\n        const dims = arcs[d].dims;\n        state.arcs.active = d;\n        // If the two dimensions of the current arc are not next to each other\n        // any more, than we'll need to remove the arc. Otherwise we keep it.\n        if (!consecutive(dims)(dims.left, dims.right)) {\n          removeStrum(state, pc);\n        }\n      });\n      onDragEnd(brushGroup, state, config, pc, events)();\n    }\n  });\n\n  // Add a new svg group in which we draw the arcs.\n  pc.selection\n    .select('svg')\n    .append('g')\n    .attr('id', 'arcs')\n    .attr(\n      'transform',\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\n    );\n\n  // Install the required brushReset function\n  pc.brushReset = brushReset(brushGroup, state, config, pc, events);\n\n  _drag\n    .on('start', onDragStart(state, config, pc, xscale))\n    .on('drag', onDrag(brushGroup, state, config, pc, events))\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\n\n  // NOTE: The styling needs to be done here and not in the css. This is because\n  //       for 1D brushing, the canvas layers should not listen to\n  //       pointer-events._.\n  state.strumRect = pc.selection\n    .select('svg')\n    .insert('rect', 'g#arcs')\n    .attr('id', 'arc-events')\n    .attr('x', config.margin.left)\n    .attr('y', config.margin.top)\n    .attr('width', w(config))\n    .attr('height', h(config) + 2)\n    .style('opacity', 0)\n    .call(_drag);\n};\n\nexport default install;\n","import uninstall from './uninstall';\nimport install from './install';\nimport selected from './selected';\n\nconst BrushState = {\n  arcs: {},\n  strumRect: {},\n};\n\nconst installAngularBrush = (brushGroup, config, pc, events, xscale) => {\n  const state = Object.assign({}, BrushState);\n\n  brushGroup.modes['angular'] = {\n    install: install(brushGroup, state, config, pc, events, xscale),\n    uninstall: uninstall(state, pc),\n    selected: selected(brushGroup, state, config),\n    brushState: () => state.arcs,\n  };\n};\n\nexport default installAngularBrush;\n","// calculate 2d intersection of line a->b with line c->d\n// points are objects with x and y properties\nconst intersection = (a, b, c, d) => {\n  return {\n    x:\n      ((a.x * b.y - a.y * b.x) * (c.x - d.x) -\n        (a.x - b.x) * (c.x * d.y - c.y * d.x)) /\n      ((a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x)),\n    y:\n      ((a.x * b.y - a.y * b.x) * (c.y - d.y) -\n        (a.y - b.y) * (c.x * d.y - c.y * d.x)) /\n      ((a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x)),\n  };\n};\n\nexport default intersection;\n","// Merges the canvases and SVG elements into one canvas element which is then passed into the callback\n// (so you can choose to save it to disk, etc.)\nconst mergeParcoords = pc => callback => {\n  // Retina display, etc.\n  const devicePixelRatio = window.devicePixelRatio || 1;\n\n  // Create a canvas element to store the merged canvases\n  const mergedCanvas = document.createElement('canvas');\n  mergedCanvas.width = pc.canvas.foreground.clientWidth * devicePixelRatio;\n  mergedCanvas.height =\n    (pc.canvas.foreground.clientHeight + 30) * devicePixelRatio;\n  mergedCanvas.style.width = mergedCanvas.width / devicePixelRatio + 'px';\n  mergedCanvas.style.height = mergedCanvas.height / devicePixelRatio + 'px';\n\n  // Give the canvas a white background\n  const context = mergedCanvas.getContext('2d');\n  context.fillStyle = '#ffffff';\n  context.fillRect(0, 0, mergedCanvas.width, mergedCanvas.height);\n\n  // Merge all the canvases\n  for (const key in pc.canvas) {\n    context.drawImage(\n      pc.canvas[key],\n      0,\n      24 * devicePixelRatio,\n      mergedCanvas.width,\n      mergedCanvas.height - 30 * devicePixelRatio\n    );\n  }\n\n  // Add SVG elements to canvas\n  const DOMURL = window.URL || window.webkitURL || window;\n  const serializer = new XMLSerializer();\n  const svgStr = serializer.serializeToString(\n    pc.selection.select('svg').node()\n  );\n\n  // Create a Data URI.\n  const src = 'data:image/svg+xml;base64,' + window.btoa(svgStr);\n  const img = new Image();\n  img.onload = () => {\n    context.drawImage(\n      img,\n      0,\n      0,\n      img.width * devicePixelRatio,\n      img.height * devicePixelRatio\n    );\n    if (typeof callback === 'function') {\n      callback(mergedCanvas);\n    }\n  };\n  img.src = src;\n};\n\nexport default mergeParcoords;\n","import { brushSelection } from 'd3-brush';\nimport { selectAll } from 'd3-selection';\n\nconst selected = config => {\n  let actives = [];\n  let extents = [];\n  let ranges = {};\n  //get brush selections from each node, convert to actual values\n  //invert order of values in array to comply with the parcoords architecture\n  if (config.brushes.length === 0) {\n    let nodes = selectAll('.brush').nodes();\n    for (let k = 0; k < nodes.length; k++) {\n      if (brushSelection(nodes[k]) !== null) {\n        actives.push(nodes[k].__data__);\n        let values = [];\n        let ranger = brushSelection(nodes[k]);\n        if (\n          typeof config.dimensions[nodes[k].__data__].yscale.domain()[0] ===\n          'number'\n        ) {\n          for (let i = 0; i < ranger.length; i++) {\n            if (\n              actives.includes(nodes[k].__data__) &&\n              config.flipAxes.includes(nodes[k].__data__)\n            ) {\n              values.push(\n                config.dimensions[nodes[k].__data__].yscale.invert(ranger[i])\n              );\n            } else if (config.dimensions[nodes[k].__data__].yscale() !== 1) {\n              values.unshift(\n                config.dimensions[nodes[k].__data__].yscale.invert(ranger[i])\n              );\n            }\n          }\n          extents.push(values);\n          for (let ii = 0; ii < extents.length; ii++) {\n            if (extents[ii].length === 0) {\n              extents[ii] = [1, 1];\n            }\n          }\n        } else {\n          ranges[nodes[k].__data__] = brushSelection(nodes[k]);\n          let dimRange = config.dimensions[nodes[k].__data__].yscale.range();\n          let dimDomain = config.dimensions[nodes[k].__data__].yscale.domain();\n          for (let j = 0; j < dimRange.length; j++) {\n            if (\n              dimRange[j] >= ranger[0] &&\n              dimRange[j] <= ranger[1] &&\n              actives.includes(nodes[k].__data__) &&\n              config.flipAxes.includes(nodes[k].__data__)\n            ) {\n              values.push(dimRange[j]);\n            } else if (dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) {\n              values.unshift(dimRange[j]);\n            }\n          }\n          extents.push(values);\n          for (let ii = 0; ii < extents.length; ii++) {\n            if (extents[ii].length === 0) {\n              extents[ii] = [1, 1];\n            }\n          }\n        }\n      }\n    }\n    // test if within range\n    const within = {\n      date: function(d, p, dimension) {\n        let category = d[p];\n        let categoryIndex = config.dimensions[p].yscale\n          .domain()\n          .indexOf(category);\n        let categoryRangeValue = config.dimensions[p].yscale.range()[\n          categoryIndex\n        ];\n        return (\n          categoryRangeValue >= ranges[p][0] &&\n          categoryRangeValue <= ranges[p][1]\n        );\n      },\n      number: function(d, p, dimension) {\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\n      },\n      string: function(d, p, dimension) {\n        let category = d[p];\n        let categoryIndex = config.dimensions[p].yscale\n          .domain()\n          .indexOf(category);\n        let categoryRangeValue = config.dimensions[p].yscale.range()[\n          categoryIndex\n        ];\n        return (\n          categoryRangeValue >= ranges[p][0] &&\n          categoryRangeValue <= ranges[p][1]\n        );\n      },\n    };\n    return config.data.filter(d =>\n      actives.every((p, dimension) =>\n        within[config.dimensions[p].type](d, p, dimension)\n      )\n    );\n  } else {\n    // need to get data from each brush instead of each axis\n    // first must find active axes by iterating through all brushes\n    // then go through similiar process as above.\n    let multiBrushData = [];\n    for (let idx = 0; idx < config.brushes.length; idx++) {\n      let brush = config.brushes[idx];\n      let values = [];\n      let ranger = brush.extent;\n      let actives = [brush.data];\n      if (\n        typeof config.dimensions[brush.data].yscale.domain()[0] === 'number'\n      ) {\n        for (let i = 0; i < ranger.length; i++) {\n          if (\n            actives.includes(brush.data) &&\n            config.flipAxes.includes(brush.data)\n          ) {\n            values.push(config.dimensions[brush.data].yscale.invert(ranger[i]));\n          } else if (config.dimensions[brush.data].yscale() !== 1) {\n            values.unshift(\n              config.dimensions[brush.data].yscale.invert(ranger[i])\n            );\n          }\n        }\n        extents.push(values);\n        for (let ii = 0; ii < extents.length; ii++) {\n          if (extents[ii].length === 0) {\n            extents[ii] = [1, 1];\n          }\n        }\n      } else {\n        ranges[brush.data] = brush.extent;\n        let dimRange = config.dimensions[brush.data].yscale.range();\n        let dimDomain = config.dimensions[brush.data].yscale.domain();\n        for (let j = 0; j < dimRange.length; j++) {\n          if (\n            dimRange[j] >= ranger[0] &&\n            dimRange[j] <= ranger[1] &&\n            actives.includes(brush.data) &&\n            config.flipAxes.includes(brush.data)\n          ) {\n            values.push(dimRange[j]);\n          } else if (dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) {\n            values.unshift(dimRange[j]);\n          }\n        }\n        extents.push(values);\n        for (let ii = 0; ii < extents.length; ii++) {\n          if (extents[ii].length === 0) {\n            extents[ii] = [1, 1];\n          }\n        }\n      }\n      let within = {\n        date: function(d, p, dimension) {\n          let category = d[p];\n          let categoryIndex = config.dimensions[p].yscale\n            .domain()\n            .indexOf(category);\n          let categoryRangeValue = config.dimensions[p].yscale.range()[\n            categoryIndex\n          ];\n          return (\n            categoryRangeValue >= ranges[p][0] &&\n            categoryRangeValue <= ranges[p][1]\n          );\n        },\n        number: function(d, p, dimension) {\n          return extents[idx][0] <= d[p] && d[p] <= extents[idx][1];\n        },\n        string: function(d, p, dimension) {\n          let category = d[p];\n          let categoryIndex = config.dimensions[p].yscale\n            .domain()\n            .indexOf(category);\n          let categoryRangeValue = config.dimensions[p].yscale.range()[\n            categoryIndex\n          ];\n          return (\n            categoryRangeValue >= ranges[p][0] &&\n            categoryRangeValue <= ranges[p][1]\n          );\n        },\n      };\n\n      // filter data, but instead of returning it now,\n      // put it into multiBrush data which is returned after\n      // all brushes are iterated through.\n      let filtered = config.data.filter(d =>\n        actives.every((p, dimension) =>\n          within[config.dimensions[p].type](d, p, dimension)\n        )\n      );\n      for (let z = 0; z < filtered.length; z++) {\n        multiBrushData.push(filtered[z]);\n      }\n      actives = [];\n      ranges = {};\n    }\n    return multiBrushData;\n  }\n};\n\nexport default selected;\n","const brushPredicate = (brushGroup, config, pc) => (predicate = null) => {\n  if (predicate === null) {\n    return brushGroup.predicate;\n  }\n\n  predicate = String(predicate).toUpperCase();\n  if (predicate !== 'AND' && predicate !== 'OR') {\n    throw new Error('Invalid predicate ' + predicate);\n  }\n\n  brushGroup.predicate = predicate;\n  config.brushed = brushGroup.currentMode().selected();\n  pc.renderBrushed();\n  return pc;\n};\n\nconst brushMode = (brushGroup, config, pc) => (mode = null) => {\n  if (mode === null) {\n    return brushGroup.mode;\n  }\n\n  if (pc.brushModes().indexOf(mode) === -1) {\n    throw new Error('pc.brushmode: Unsupported brush mode: ' + mode);\n  }\n\n  // Make sure that we don't trigger unnecessary events by checking if the mode\n  // actually changes.\n  if (mode !== brushGroup.mode) {\n    // When changing brush modes, the first thing we need to do is clearing any\n    // brushes from the current mode, if any.\n    if (brushGroup.mode !== 'None') {\n      pc.brushReset();\n    }\n\n    // Next, we need to 'uninstall' the current brushMode.\n    brushGroup.modes[brushGroup.mode].uninstall(pc);\n    // Finally, we can install the requested one.\n    brushGroup.mode = mode;\n    brushGroup.modes[brushGroup.mode].install();\n    if (mode === 'None') {\n      delete pc.brushPredicate;\n    } else {\n      pc.brushPredicate = brushPredicate(brushGroup, config, pc);\n    }\n  }\n\n  return pc;\n};\n\nexport default brushMode;\n","/**\n * dimension display names\n *\n * @param config\n * @param d\n * @returns {*}\n */\nconst dimensionLabels = config => d =>\n  config.dimensions[d].title ? config.dimensions[d].title : d;\n\nexport default dimensionLabels;\n","import { select } from 'd3-selection';\n\nconst flipAxisAndUpdatePCP = (config, pc, axis) =>\n  function(dimension) {\n    pc.flip(dimension);\n    pc.brushReset(dimension);\n    select(this.parentElement)\n      .transition()\n      .duration(config.animationTime)\n      .call(axis.scale(config.dimensions[dimension].yscale));\n    pc.render();\n  };\n\nexport default flipAxisAndUpdatePCP;\n","import { event } from 'd3-selection';\n\nconst rotateLabels = (config, pc) => {\n  if (!config.rotateLabels) return;\n\n  let delta = event.deltaY;\n  delta = delta < 0 ? -5 : delta;\n  delta = delta > 0 ? 5 : delta;\n\n  config.dimensionTitleRotation += delta;\n  pc.svg\n    .selectAll('text.label')\n    .attr(\n      'transform',\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\n    );\n  event.preventDefault();\n};\n\nexport default rotateLabels;\n","import { select } from 'd3-selection';\n\nimport dimensionLabels from '../util/dimensionLabels';\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\nimport rotateLabels from '../util/rotateLabels';\n\nconst updateAxes = (config, pc, position, axis, flags) => (\n  animationTime = null\n) => {\n  if (animationTime === null) {\n    animationTime = config.animationTime;\n  }\n\n  const g_data = pc.svg\n    .selectAll('.dimension')\n    .data(pc.getOrderedDimensionKeys());\n  // Enter\n  g_data\n    .enter()\n    .append('svg:g')\n    .attr('class', 'dimension')\n    .attr('transform', p => 'translate(' + position(p) + ')')\n    .style('opacity', 0)\n    .append('svg:g')\n    .attr('class', 'axis')\n    .attr('transform', 'translate(0,0)')\n    .each(function(d) {\n      const axisElement = select(this).call(\n        pc.applyAxisConfig(axis, config.dimensions[d])\n      );\n\n      axisElement\n        .selectAll('path')\n        .style('fill', 'none')\n        .style('stroke', '#222')\n        .style('shape-rendering', 'crispEdges');\n\n      axisElement\n        .selectAll('line')\n        .style('fill', 'none')\n        .style('stroke', '#222')\n        .style('shape-rendering', 'crispEdges');\n    })\n    .append('svg:text')\n    .attr({\n      'text-anchor': 'middle',\n      y: 0,\n      transform:\n        'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')',\n      x: 0,\n      class: 'label',\n    })\n    .text(dimensionLabels(config))\n    .on('dblclick', flipAxisAndUpdatePCP(config, pc, axis))\n    .on('wheel', rotateLabels(config, pc));\n\n  // Update\n  g_data.attr('opacity', 0);\n  g_data\n    .select('.axis')\n    .transition()\n    .duration(animationTime)\n    .each(function(d) {\n      select(this).call(pc.applyAxisConfig(axis, config.dimensions[d]));\n    });\n  g_data\n    .select('.label')\n    .transition()\n    .duration(animationTime)\n    .text(dimensionLabels(config))\n    .attr(\n      'transform',\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\n    );\n\n  // Exit\n  g_data.exit().remove();\n\n  g = pc.svg.selectAll('.dimension');\n  g\n    .transition()\n    .duration(animationTime)\n    .attr('transform', p => 'translate(' + position(p) + ')')\n    .style('opacity', 1);\n\n  pc.svg\n    .selectAll('.axis')\n    .transition()\n    .duration(animationTime)\n    .each(function(d) {\n      select(this).call(pc.applyAxisConfig(axis, config.dimensions[d]));\n    });\n\n  if (flags.brushable) pc.brushable();\n  if (flags.reorderable) pc.reorderable();\n  if (pc.brushMode() !== 'None') {\n    let mode = pc.brushMode();\n    pc.brushMode('None');\n    pc.brushMode(mode);\n  }\n  return this;\n};\n\nexport default updateAxes;\n","/** adjusts an axis' default range [h()+1, 1] if a NullValueSeparator is set */\nconst getRange = config => {\n  const h = config.height - config.margin.top - config.margin.bottom;\n\n  if (config.nullValueSeparator == 'bottom') {\n    return [\n      h +\n        1 -\n        config.nullValueSeparatorPadding.bottom -\n        config.nullValueSeparatorPadding.top,\n      1,\n    ];\n  } else if (config.nullValueSeparator == 'top') {\n    return [\n      h + 1,\n      1 +\n        config.nullValueSeparatorPadding.bottom +\n        config.nullValueSeparatorPadding.top,\n    ];\n  }\n  return [h + 1, 1];\n};\n\nexport default getRange;\n","import { scaleLinear, scaleOrdinal, scalePoint, scaleTime } from 'd3-scale';\nimport { keys } from 'd3-collection';\nimport { extent } from 'd3-array';\n\nimport getRange from '../util/getRange';\nimport w from '../util/width';\nimport h from '../util/height';\n\nconst autoscale = (config, pc, xscale, ctx) =>\n  function() {\n    // yscale\n    const defaultScales = {\n      date: function(k) {\n        let _extent = extent(config.data, d => (d[k] ? d[k].getTime() : null));\n        // special case if single value\n        if (_extent[0] === _extent[1]) {\n          return scalePoint()\n            .domain(_extent)\n            .range(getRange(config));\n        }\n        if (config.flipAxes.includes(k)) {\n          _extent = _extent.map(val => tempDate.unshift(val));\n        }\n        return scaleTime()\n          .domain(_extent)\n          .range(getRange(config));\n      },\n      number: function(k) {\n        let _extent = extent(config.data, d => +d[k]);\n        // special case if single value\n        if (_extent[0] === _extent[1]) {\n          return scalePoint()\n            .domain(_extent)\n            .range(getRange(config));\n        }\n        if (config.flipAxes.includes(k)) {\n          _extent = _extent.map(val => tempDate.unshift(val));\n        }\n        return scaleLinear()\n          .domain(_extent)\n          .range(getRange(config));\n      },\n      string: function(k) {\n        let counts = {},\n          domain = [];\n        // Let's get the count for each value so that we can sort the domain based\n        // on the number of items for each value.\n        config.data.map(p => {\n          if (p[k] === undefined && config.nullValueSeparator !== 'undefined') {\n            return null; // null values will be drawn beyond the horizontal null value separator!\n          }\n          if (counts[p[k]] === undefined) {\n            counts[p[k]] = 1;\n          } else {\n            counts[p[k]] = counts[p[k]] + 1;\n          }\n        });\n        if (config.flipAxes.includes(k)) {\n          domain = Object.getOwnPropertyNames(counts).sort();\n        } else {\n          let tempArr = Object.getOwnPropertyNames(counts).sort();\n          for (let i = 0; i < Object.getOwnPropertyNames(counts).length; i++) {\n            domain.push(tempArr.pop());\n          }\n        }\n\n        //need to create an ordinal scale for categorical data\n        let categoricalRange = [];\n        if (domain.length === 1) {\n          //edge case\n          domain = [' ', domain[0], ' '];\n        }\n        let addBy = getRange(config)[0] / (domain.length - 1);\n        for (let j = 0; j < domain.length; j++) {\n          if (categoricalRange.length === 0) {\n            categoricalRange.push(0);\n            continue;\n          }\n          categoricalRange.push(categoricalRange[j - 1] + addBy);\n        }\n        return scaleOrdinal()\n          .domain(domain)\n          .range(categoricalRange);\n      },\n    };\n    keys(config.dimensions).forEach(function(k) {\n      config.dimensions[k].yscale = defaultScales[config.dimensions[k].type](k);\n    });\n\n    // xscale\n    xscale.range([0, w(config)], 1);\n    // Retina display, etc.\n    const devicePixelRatio = window.devicePixelRatio || 1;\n\n    // canvas sizes\n    pc.selection\n      .selectAll('canvas')\n      .style('margin-top', config.margin.top + 'px')\n      .style('margin-left', config.margin.left + 'px')\n      .style('width', w(config) + 2 + 'px')\n      .style('height', h(config) + 2 + 'px')\n      .attr('width', (w(config) + 2) * devicePixelRatio)\n      .attr('height', (h(config) + 2) * devicePixelRatio);\n    // default styles, needs to be set when canvas width changes\n    ctx.foreground.strokeStyle = config.color;\n    ctx.foreground.lineWidth = 1.4;\n    ctx.foreground.globalCompositeOperation = config.composite;\n    ctx.foreground.globalAlpha = config.alpha;\n    ctx.foreground.scale(devicePixelRatio, devicePixelRatio);\n    ctx.brushed.strokeStyle = config.brushedColor;\n    ctx.brushed.lineWidth = 1.4;\n    ctx.brushed.globalCompositeOperation = config.composite;\n    ctx.brushed.globalAlpha = config.alpha;\n    ctx.brushed.scale(devicePixelRatio, devicePixelRatio);\n    ctx.highlight.lineWidth = 3;\n    ctx.highlight.scale(devicePixelRatio, devicePixelRatio);\n\n    return this;\n  };\n\nexport default autoscale;\n","import { brushSelection, brushY } from 'd3-brush';\nimport { event, select } from 'd3-selection';\n\nconst brushable = (config, pc, flags) =>\n  function() {\n    if (!pc.g()) {\n      pc.createAxes();\n    }\n\n    const g = pc.g();\n\n    // Add and store a brush for each axis.\n    g\n      .append('svg:g')\n      .attr('class', 'brush')\n      .each(function(d) {\n        if (config.dimensions[d] !== undefined) {\n          config.dimensions[d]['brush'] = brushY(select(this)).extent([\n            [-15, 0],\n            [15, config.dimensions[d].yscale.range()[0]],\n          ]);\n          select(this).call(\n            config.dimensions[d]['brush']\n              .on('start', function() {\n                if (event.sourceEvent !== null && !event.sourceEvent.ctrlKey) {\n                  pc.brushReset();\n                }\n              })\n              .on('brush', function() {\n                if (!event.sourceEvent.ctrlKey) {\n                  pc.brush();\n                }\n              })\n              .on('end', function() {\n                // save brush selection is ctrl key is held\n                // store important brush information and\n                // the html element of the selection,\n                // to make a dummy selection element\n                if (event.sourceEvent.ctrlKey) {\n                  let html = select(this)\n                    .select('.selection')\n                    .nodes()[0].outerHTML;\n                  html = html.replace(\n                    'class=\"selection\"',\n                    'class=\"selection dummy' +\n                      ' selection-' +\n                      config.brushes.length +\n                      '\"'\n                  );\n                  let dat = select(this).nodes()[0].__data__;\n                  let brush = {\n                    id: config.brushes.length,\n                    extent: brushSelection(this),\n                    html: html,\n                    data: dat,\n                  };\n                  config.brushes.push(brush);\n                  select(select(this).nodes()[0].parentNode)\n                    .select('.axis')\n                    .nodes()[0].outerHTML += html;\n                  pc.brush();\n                  config.dimensions[d].brush.move(select(this, null));\n                  select(this)\n                    .select('.selection')\n                    .attr('style', 'display:none');\n                  pc.brushable();\n                } else {\n                  pc.brush();\n                }\n              })\n          );\n          select(this).on('dblclick', function() {\n            pc.brushReset(d);\n          });\n        }\n      });\n\n    flags.brushable = true;\n    return this;\n  };\n\nexport default brushable;\n","import { keys } from 'd3-collection';\nimport { extent } from 'd3-array';\n\nconst commonScale = (config, pc) =>\n  function(global, type) {\n    const t = type || 'number';\n    if (typeof global === 'undefined') {\n      global = true;\n    }\n\n    // try to autodetect dimensions and create scales\n    if (!keys(config.dimensions).length) {\n      pc.detectDimensions();\n    }\n    pc.autoscale();\n\n    // scales of the same type\n    const scales = keys(config.dimensions).filter(\n      p => config.dimensions[p].type == t\n    );\n\n    if (global) {\n      let _extent = extent(\n        scales\n          .map(d => config.dimensions[d].yscale.domain())\n          .reduce((cur, acc) => cur.concat(acc))\n      );\n\n      scales.forEach(d => {\n        config.dimensions[d].yscale.domain(_extent);\n      });\n    } else {\n      scales.forEach(d => {\n        config.dimensions[d].yscale.domain(extent(config.data, d => +d[k]));\n      });\n    }\n\n    // update centroids\n    if (config.bundleDimension !== null) {\n      pc.bundleDimension(config.bundleDimension);\n    }\n\n    return this;\n  };\n\nexport default commonScale;\n","import { keys } from 'd3-collection';\n\nconst computeRealCentroids = (dimensions, position) => row =>\n  keys(dimensions).map(d => {\n    const x = position(d);\n    const y = dimensions[d].yscale(row[d]);\n    return [x, y];\n  });\n\nexport default computeRealCentroids;\n","import { keys } from 'd3-collection';\n\nconst applyDimensionDefaults = (config, pc) =>\n  function(dims) {\n    const types = pc.detectDimensionTypes(config.data);\n    dims = dims ? dims : keys(types);\n\n    return dims.reduce((acc, cur, i) => {\n      const k = config.dimensions[cur] ? config.dimensions[cur] : {};\n\n      acc[cur] = {\n        ...k,\n        orient: k.orient ? k.orient : 'left',\n        ticks: k.ticks != null ? k.ticks : 5,\n        innerTickSize: k.innerTickSize != null ? k.innerTickSize : 6,\n        outerTickSize: k.outerTickSize != null ? k.outerTickSize : 0,\n        tickPadding: k.tickPadding != null ? k.tickPadding : 3,\n        type: k.type ? k.type : types[cur],\n        index: k.index != null ? k.index : i,\n      };\n\n      return acc;\n    }, {});\n  };\n\nexport default applyDimensionDefaults;\n","import { select } from 'd3-selection';\n\nimport dimensionLabels from '../util/dimensionLabels';\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\nimport rotateLabels from '../util/rotateLabels';\n\nimport w from '../util/width';\nimport h from '../util/height';\n\n/**\n * Create static SVG axes with dimension names, ticks, and labels.\n *\n * @param config\n * @param pc\n * @param xscale\n * @param flags\n * @param axis\n * @returns {Function}\n */\nconst createAxes = (config, pc, xscale, flags, axis) =>\n  function() {\n    if (pc.g() !== undefined) {\n      pc.removeAxes();\n    }\n    // Add a group element for each dimension.\n    pc._g = pc.svg\n      .selectAll('.dimension')\n      .data(pc.getOrderedDimensionKeys(), function(d) {\n        return d;\n      })\n      .enter()\n      .append('svg:g')\n      .attr('class', 'dimension')\n      .attr('transform', function(d) {\n        return 'translate(' + xscale(d) + ')';\n      });\n    // Add an axis and title.\n    pc._g\n      .append('svg:g')\n      .attr('class', 'axis')\n      .attr('transform', 'translate(0,0)')\n      .each(function(d) {\n        let axisElement = select(this).call(\n          pc.applyAxisConfig(axis, config.dimensions[d])\n        );\n\n        axisElement\n          .selectAll('path')\n          .style('fill', 'none')\n          .style('stroke', '#222')\n          .style('shape-rendering', 'crispEdges');\n\n        axisElement\n          .selectAll('line')\n          .style('fill', 'none')\n          .style('stroke', '#222')\n          .style('shape-rendering', 'crispEdges');\n      })\n\n      .append('svg:text')\n      .attr('text-anchor', 'middle')\n      .attr('y', 0)\n      .attr(\n        'transform',\n        'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\n      )\n      .attr('x', 0)\n      .attr('class', 'label')\n      .text(dimensionLabels(config))\n      .on('dblclick', flipAxisAndUpdatePCP(config, pc, axis))\n      .on('wheel', rotateLabels(config, pc));\n\n    if (config.nullValueSeparator == 'top') {\n      pc.svg\n        .append('line')\n        .attr('x1', 0)\n        .attr('y1', 1 + config.nullValueSeparatorPadding.top)\n        .attr('x2', w(config))\n        .attr('y2', 1 + config.nullValueSeparatorPadding.top)\n        .attr('stroke-width', 1)\n        .attr('stroke', '#777')\n        .attr('fill', 'none')\n        .attr('shape-rendering', 'crispEdges');\n    } else if (config.nullValueSeparator == 'bottom') {\n      pc.svg\n        .append('line')\n        .attr('x1', 0)\n        .attr('y1', h(config) + 1 - config.nullValueSeparatorPadding.bottom)\n        .attr('x2', w(config))\n        .attr('y2', h(config) + 1 - config.nullValueSeparatorPadding.bottom)\n        .attr('stroke-width', 1)\n        .attr('stroke', '#777')\n        .attr('fill', 'none')\n        .attr('shape-rendering', 'crispEdges');\n    }\n\n    flags.axes = true;\n    return this;\n  };\n\nexport default createAxes;\n","import { entries } from 'd3-collection';\nimport { min } from 'd3-array';\n\n//draw dots with radius r on the axis line where data intersects\nconst axisDots = (config, pc, position) => _r => {\n  const r = _r || 0.1;\n  const ctx = pc.ctx.marks;\n  const startAngle = 0;\n  const endAngle = 2 * Math.PI;\n  ctx.globalAlpha = min([1 / Math.pow(config.data.length, 1 / 2), 1]);\n  config.data.forEach(d => {\n    entries(config.dimensions).forEach((p, i) => {\n      ctx.beginPath();\n      ctx.arc(\n        position(p),\n        config.dimensions[p.key].yscale(d[p]),\n        r,\n        startAngle,\n        endAngle\n      );\n      ctx.stroke();\n      ctx.fill();\n    });\n  });\n  return this;\n};\n\nexport default axisDots;\n","import { axisBottom, axisLeft, axisRight, axisTop } from 'd3-axis';\n\nconst applyAxisConfig = (axis, dimension) => {\n  let axisCfg;\n\n  switch (dimension.orient) {\n    case 'left':\n      axisCfg = axisLeft(dimension.yscale);\n      break;\n    case 'right':\n      axisCfg = axisRight(dimension.yscale);\n      break;\n    case 'top':\n      axisCfg = axisTop(dimension.yscale);\n      break;\n    case 'bottom':\n      axisCfg = axisBottom(dimension.yscale);\n      break;\n    default:\n      axisCfg = axisLeft(dimension.yscale);\n      break;\n  }\n\n  axisCfg\n    .ticks(dimension.ticks)\n    .tickValues(dimension.tickValues)\n    .tickSizeInner(dimension.innerTickSize)\n    .tickSizeOuter(dimension.outerTickSize)\n    .tickPadding(dimension.tickPadding)\n    .tickFormat(dimension.tickFormat);\n\n  return axisCfg;\n};\n\nexport default applyAxisConfig;\n","import { drag } from 'd3-drag';\nimport { event, select } from 'd3-selection';\n\nimport w from '../util/width';\n\n// Jason Davies, http://bl.ocks.org/1341281\nconst reorderable = (config, pc, xscale, position, dragging, flags) =>\n  function() {\n    if (pc.g() === undefined) pc.createAxes();\n    const g = pc.g();\n\n    g.style('cursor', 'move').call(\n      drag()\n        .on('start', function(d) {\n          dragging[d] = this.__origin__ = xscale(d);\n        })\n        .on('drag', function(d) {\n          dragging[d] = Math.min(\n            w(__),\n            Math.max(0, (this.__origin__ += event.dx))\n          );\n          pc.sortDimensions();\n          xscale.domain(pc.getOrderedDimensionKeys());\n          pc.render();\n          g.attr('transform', d => 'translate(' + position(d) + ')');\n        })\n        .on('end', function(d) {\n          delete this.__origin__;\n          delete dragging[d];\n          select(this)\n            .transition()\n            .attr('transform', 'translate(' + xscale(d) + ')');\n          pc.render();\n        })\n    );\n    flags.reorderable = true;\n    return this;\n  };\n\nexport default reorderable;\n","// rescale for height, width and margins\n// TODO currently assumes chart is brushable, and destroys old brushes\nconst resize = (config, pc, flags, events) => {\n  return function() {\n    // selection size\n    pc.selection\n      .select('svg')\n      .attr('width', config.width)\n      .attr('height', config.height);\n    pc.svg.attr(\n      'transform',\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\n    );\n\n    // FIXME: the current brush state should pass through\n    if (flags.brushable) pc.brushReset();\n\n    // scales\n    pc.autoscale();\n\n    // axes, destroys old brushes.\n    if (pc.g()) pc.createAxes();\n    if (flags.brushable) pc.brushable();\n    if (flags.reorderable) pc.reorderable();\n\n    events.call('resize', this, {\n      width: config.width,\n      height: config.height,\n      margin: config.margin,\n    });\n\n    return this;\n  };\n};\n\nexport default resize;\n","// Reorder dimensions, such that the highest value (visually) is on the left and\n// the lowest on the right. Visual values are determined by the data values in\n// the given row.\nconst reorder = (config, pc, xscale) => rowdata => {\n  const firstDim = pc.getOrderedDimensionKeys()[0];\n\n  pc.sortDimensionsByRowData(rowdata);\n  // NOTE: this is relatively cheap given that:\n  // number of dimensions < number of data items\n  // Thus we check equality of order to prevent rerendering when this is the case.\n  const reordered = firstDim !== pc.getOrderedDimensionKeys()[0];\n\n  if (reordered) {\n    xscale.domain(pc.getOrderedDimensionKeys());\n    const highlighted = config.highlighted.slice(0);\n    pc.unhighlight();\n\n    const g = pc.g();\n    g\n      .transition()\n      .duration(1500)\n      .attr('transform', d => 'translate(' + xscale(d) + ')');\n    pc.render();\n\n    // pc.highlight() does not check whether highlighted is length zero, so we do that here.\n    if (highlighted.length !== 0) {\n      pc.highlight(highlighted);\n    }\n  }\n};\n\nexport default reorder;\n","import { keys } from 'd3-collection';\n\nconst sortDimensions = (config, position) => () => {\n  const copy = Object.assign({}, config.dimensions);\n  const positionSortedKeys = keys(config.dimensions).sort(\n    (a, b) => (position(a) - position(b) === 0 ? 1 : position(a) - position(b))\n  );\n  config.dimensions = {};\n  positionSortedKeys.forEach((p, i) => {\n    config.dimensions[p] = copy[p];\n    config.dimensions[p].index = i;\n  });\n};\n\nexport default sortDimensions;\n","import { keys } from 'd3-collection';\n\nconst sortDimensionsByRowData = config => rowdata => {\n  const copy = Object.assign({}, config.dimensions);\n  const positionSortedKeys = keys(config.dimensions).sort((a, b) => {\n    const pixelDifference =\n      config.dimensions[a].yscale(rowdata[a]) -\n      config.dimensions[b].yscale(rowdata[b]);\n\n    // Array.sort is not necessarily stable, this means that if pixelDifference is zero\n    // the ordering of dimensions might change unexpectedly. This is solved by sorting on\n    // variable name in that case.\n    return pixelDifference === 0 ? a.localeCompare(b) : pixelDifference;\n  });\n  config.dimensions = {};\n  positionSortedKeys.forEach((p, i) => {\n    config.dimensions[p] = copy[p];\n    config.dimensions[p].index = i;\n  });\n};\n\nexport default sortDimensionsByRowData;\n","const isBrushed = (config, brushGroup) => {\n  if (config.brushed && config.brushed.length !== config.data.length)\n    return true;\n\n  const object = brushGroup.currentMode().brushState();\n\n  for (let key in object) {\n    if (object.hasOwnProperty(key)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport default isBrushed;\n","import h from '../util/height';\nimport w from '../util/width';\nimport isBrushed from '../util/isBrushed';\n\nconst clear = (config, pc, ctx, brushGroup) =>\n  function(layer) {\n    ctx[layer].clearRect(0, 0, w(config) + 2, h(config) + 2);\n\n    // This will make sure that the foreground items are transparent\n    // without the need for changing the opacity style of the foreground canvas\n    // as this would stop the css styling from working\n    if (layer === 'brushed' && isBrushed(config, brushGroup)) {\n      ctx.brushed.fillStyle = pc.selection.style('background-color');\n      ctx.brushed.globalAlpha = 1 - config.alphaOnBrushed;\n      ctx.brushed.fillRect(0, 0, w(config) + 2, h(config) + 2);\n      ctx.brushed.globalAlpha = config.alpha;\n    }\n    return this;\n  };\n\nexport default clear;\n","import { keys } from 'd3-collection';\n\nconst computeCentroids = (config, position, row) => {\n  const centroids = [];\n\n  const p = keys(config.dimensions);\n  const cols = p.length;\n  const a = 0.5; // center between axes\n  for (let i = 0; i < cols; ++i) {\n    // centroids on 'real' axes\n    const x = position(p[i]);\n    const y = config.dimensions[p[i]].yscale(row[p[i]]);\n    centroids.push($V([x, y]));\n\n    // centroids on 'virtual' axes\n    if (i < cols - 1) {\n      const cx = x + a * (position(p[i + 1]) - x);\n      let cy = y + a * (config.dimensions[p[i + 1]].yscale(row[p[i + 1]]) - y);\n      if (config.bundleDimension !== null) {\n        const leftCentroid = config.clusterCentroids\n          .get(\n            config.dimensions[config.bundleDimension].yscale(\n              row[config.bundleDimension]\n            )\n          )\n          .get(p[i]);\n        const rightCentroid = config.clusterCentroids\n          .get(\n            config.dimensions[config.bundleDimension].yscale(\n              row[config.bundleDimension]\n            )\n          )\n          .get(p[i + 1]);\n        let centroid = 0.5 * (leftCentroid + rightCentroid);\n        cy = centroid + (1 - config.bundlingStrength) * (cy - centroid);\n      }\n      centroids.push($V([cx, cy]));\n    }\n  }\n\n  return centroids;\n};\n\nexport default computeCentroids;\n","const computeControlPoints = (smoothness, centroids) => {\n  const cols = centroids.length;\n  const a = smoothness;\n  const cps = [];\n\n  cps.push(centroids[0]);\n  cps.push(\n    $V([\n      centroids[0].e(1) + a * 2 * (centroids[1].e(1) - centroids[0].e(1)),\n      centroids[0].e(2),\n    ])\n  );\n  for (let col = 1; col < cols - 1; ++col) {\n    let mid = centroids[col];\n    let left = centroids[col - 1];\n    let right = centroids[col + 1];\n\n    let diff = left.subtract(right);\n    cps.push(mid.add(diff.x(a)));\n    cps.push(mid);\n    cps.push(mid.subtract(diff.x(a)));\n  }\n  cps.push(\n    $V([\n      centroids[cols - 1].e(1) +\n        a * 2 * (centroids[cols - 2].e(1) - centroids[cols - 1].e(1)),\n      centroids[cols - 1].e(2),\n    ])\n  );\n  cps.push(centroids[cols - 1]);\n\n  return cps;\n};\n\nexport default computeControlPoints;\n","// draw single cubic bezier curve\nimport { entries } from 'd3-collection';\nimport computeCentroids from './computeCentroids';\nimport computeControlPoints from './computeControlPoints';\nimport h from './height';\n\nconst singleCurve = (config, position, d, ctx) => {\n  const centroids = computeCentroids(config, position, d);\n  const cps = computeControlPoints(config.smoothness, centroids);\n\n  ctx.moveTo(cps[0].e(1), cps[0].e(2));\n\n  for (let i = 1; i < cps.length; i += 3) {\n    if (config.showControlPoints) {\n      for (let j = 0; j < 3; j++) {\n        ctx.fillRect(cps[i + j].e(1), cps[i + j].e(2), 2, 2);\n      }\n    }\n    ctx.bezierCurveTo(\n      cps[i].e(1),\n      cps[i].e(2),\n      cps[i + 1].e(1),\n      cps[i + 1].e(2),\n      cps[i + 2].e(1),\n      cps[i + 2].e(2)\n    );\n  }\n};\n\n// returns the y-position just beyond the separating null value line\nconst getNullPosition = config => {\n  if (config.nullValueSeparator == 'bottom') {\n    return h(config) + 1;\n  } else if (config.nullValueSeparator == 'top') {\n    return 1;\n  } else {\n    console.log(\n      \"A value is NULL, but nullValueSeparator is not set; set it to 'bottom' or 'top'.\"\n    );\n  }\n  return h(config) + 1;\n};\n\nconst singlePath = (config, position, d, ctx) => {\n  entries(config.dimensions).forEach((p, i) => {\n    //p isn't really p\n    if (i == 0) {\n      ctx.moveTo(\n        position(p.key),\n        typeof d[p.key] == 'undefined'\n          ? getNullPosition(config)\n          : config.dimensions[p.key].yscale(d[p.key])\n      );\n    } else {\n      ctx.lineTo(\n        position(p.key),\n        typeof d[p.key] == 'undefined'\n          ? getNullPosition(config)\n          : config.dimensions[p.key].yscale(d[p.key])\n      );\n    }\n  });\n};\n\n// draw single polyline\nconst colorPath = (config, position, d, ctx) => {\n  ctx.beginPath();\n  if (\n    (config.bundleDimension !== null && config.bundlingStrength > 0) ||\n    config.smoothness > 0\n  ) {\n    singleCurve(config, position, d, ctx);\n  } else {\n    singlePath(config, position, d, ctx);\n  }\n  ctx.stroke();\n};\n\nexport default colorPath;\n","const _functor = v => (typeof v === 'function' ? v : () => v);\n\nexport default _functor;\n","import { keys } from 'd3-collection';\n\nimport isBrushed from '../util/isBrushed';\nimport colorPath from '../util/colorPath';\nimport functor from '../util/functor';\n\nconst pathBrushed = (config, ctx, position) => (d, i) => {\n  if (config.brushedColor !== null) {\n    ctx.brushed.strokeStyle = functor(config.brushedColor)(d, i);\n  } else {\n    ctx.brushed.strokeStyle = functor(config.color)(d, i);\n  }\n  return colorPath(config, position, d, ctx.brushed);\n};\n\nconst renderBrushedDefault = (config, ctx, position, pc, brushGroup) => () => {\n  pc.clear('brushed');\n\n  if (isBrushed(config, brushGroup)) {\n    config.brushed.forEach(pathBrushed(config, ctx, position));\n  }\n};\n\nconst renderBrushedQueue = (config, brushGroup, brushedQueue) => () => {\n  if (isBrushed(config, brushGroup)) {\n    brushedQueue(config.brushed);\n  } else {\n    brushedQueue([]); // This is needed to clear the currently brushed items\n  }\n};\n\nconst renderBrushed = (config, pc, events) =>\n  function() {\n    if (!keys(config.dimensions).length) pc.detectDimensions();\n\n    pc.renderBrushed[config.mode]();\n    events.call('render', this);\n    return this;\n  };\n\nexport { pathBrushed, renderBrushed, renderBrushedDefault, renderBrushedQueue };\n","import { select, selectAll } from 'd3-selection';\n\nconst brushReset = config =>\n  function(dimension) {\n    const brushesToKeep = [];\n    for (let j = 0; j < config.brushes.length; j++) {\n      if (config.brushes[j].data !== dimension) {\n        brushesToKeep.push(config.brushes[j]);\n      }\n    }\n\n    config.brushes = brushesToKeep;\n    config.brushed = false;\n\n    if (pc.g() !== undefined) {\n      const nodes = selectAll('.brush').nodes();\n      for (let i = 0; i < nodes.length; i++) {\n        if (nodes[i].__data__ === dimension) {\n          // remove all dummy brushes for this axis or the real brush\n          select(select(nodes[i]).nodes()[0].parentNode)\n            .selectAll('.dummy')\n            .remove();\n          config.dimensions[dimension].brush.move(select(nodes[i], null));\n        }\n      }\n    }\n\n    return this;\n  };\n\nexport default brushReset;\n","// a better \"typeof\" from this post: http://stackoverflow.com/questions/7390426/better-way-to-get-type-of-a-javascript-variable\nconst toType = v => {\n  return {}.toString\n    .call(v)\n    .match(/\\s([a-zA-Z]+)/)[1]\n    .toLowerCase();\n};\n\nexport default toType;\n","import { keys } from 'd3-collection';\n\n// this descriptive text should live with other introspective methods\nconst toString = config => () => {\n  return (\n    'Parallel Coordinates: ' +\n    keys(config.dimensions).length +\n    ' dimensions (' +\n    keys(config.data[0]).length +\n    ' total) , ' +\n    config.data.length +\n    ' rows'\n  );\n};\n\nexport default toString;\n","// pairs of adjacent dimensions\nconst adjacentPairs = arr => {\n  let ret = [];\n  for (let i = 0; i < arr.length - 1; i++) {\n    ret.push([arr[i], arr[i + 1]]);\n  }\n  return ret;\n};\n\nexport default adjacentPairs;\n","import { selectAll } from 'd3-selection';\n\nimport colorPath from '../util/colorPath';\nimport functor from '../util/functor';\n\nconst pathHighlight = (config, ctx, position) => (d, i) => {\n  ctx.highlight.strokeStyle = functor(config.color)(d, i);\n  return colorPath(config, position, d, ctx.highlight);\n};\n\n// highlight an array of data\nconst highlight = (config, pc, canvas, events, ctx, position) =>\n  function(data = null) {\n    if (data === null) {\n      return config.highlighted;\n    }\n\n    config.highlighted = data;\n    pc.clear('highlight');\n    selectAll([canvas.foreground, canvas.brushed]).classed('faded', true);\n    data.forEach(pathHighlight(config, ctx, position));\n    events.call('highlight', this, data);\n    return this;\n  };\n\nexport default highlight;\n","import { selectAll } from 'd3-selection';\n\n// clear highlighting\nconst unhighlight = (config, pc, canvas) =>\n  function() {\n    config.highlighted = [];\n    pc.clear('highlight');\n    selectAll([canvas.foreground, canvas.brushed]).classed('faded', false);\n    return this;\n  };\n\nexport default unhighlight;\n","const removeAxes = pc =>\n  function() {\n    pc._g.remove();\n\n    delete pc._g;\n    return this;\n  };\n\nexport default removeAxes;\n","import { keys } from 'd3-collection';\n\n/**\n * Renders the polylines.\n * If no dimensions have been specified, it will attempt to detect quantitative\n * dimensions based on the first data entry. If scales haven't been set, it will\n * autoscale based on the extent for each dimension.\n *\n * @param config\n * @param pc\n * @param events\n * @returns {Function}\n */\nconst render = (config, pc, events) =>\n  function() {\n    // try to autodetect dimensions and create scales\n    if (!keys(config.dimensions).length) {\n      pc.detectDimensions();\n    }\n    pc.autoscale();\n\n    pc.render[config.mode]();\n\n    events.call('render', this);\n    return this;\n  };\n\nexport default render;\n","import colorPath from '../util/colorPath';\nimport functor from '../util/functor';\n\nconst pathForeground = (config, ctx, position) => (d, i) => {\n  ctx.foreground.strokeStyle = functor(config.color)(d, i);\n  return colorPath(config, position, d, ctx.foreground);\n};\n\nconst renderDefault = (config, pc, ctx, position) => () => {\n  pc.clear('foreground');\n  pc.clear('highlight');\n\n  pc.renderBrushed.default();\n\n  config.data.forEach(pathForeground(config, ctx, position));\n};\n\nconst renderDefaultQueue = (config, pc, foregroundQueue) => () => {\n  pc.renderBrushed.queue();\n  foregroundQueue(config.data);\n};\n\nexport default renderDefault;\n\nexport { pathForeground, renderDefaultQueue };\n","import toType from './toType';\n\n// try to coerce to number before returning type\nconst toTypeCoerceNumbers = v =>\n  parseFloat(v) == v && v != null ? 'number' : toType(v);\n\nexport default toTypeCoerceNumbers;\n","import { keys } from 'd3-collection';\n\nimport toTypeCoerceNumbers from './toTypeCoerceNumbers';\n\n// attempt to determine types of each dimension based on first row of data\nconst detectDimensionTypes = data =>\n  keys(data[0]).reduce((acc, cur) => {\n    const key = isNaN(Number(cur)) ? cur : parseInt(cur);\n    acc[key] = toTypeCoerceNumbers(data[0][cur]);\n\n    return acc;\n  }, {});\n\nexport default detectDimensionTypes;\n","import { ascending } from 'd3-array';\nimport { keys } from 'd3-collection';\n\nconst getOrderedDimensionKeys = config => () =>\n  keys(config.dimensions).sort((x, y) =>\n    ascending(config.dimensions[x].index, config.dimensions[y].index)\n  );\n\nexport default getOrderedDimensionKeys;\n","const interactive = flags =>\n  function() {\n    flags.interactive = true;\n    return this;\n  };\n\nexport default interactive;\n","const shadows = (flags, pc) =>\n  function() {\n    flags.shadows = true;\n    pc.alphaOnBrushed(0.1);\n    pc.render();\n    return this;\n  };\n\nexport default shadows;\n","import { select } from 'd3-selection';\n\n/**\n * Setup a new parallel coordinates chart.\n *\n * @param config\n * @param canvas\n * @param ctx\n * @returns {pc} a parcoords closure\n */\nconst init = (config, canvas, ctx) => {\n  /**\n   * Create the chart within a container. The selector can also be a d3 selection.\n   *\n   * @param selection a d3 selection\n   * @returns {pc} instance for chained api\n   */\n  const pc = function(selection) {\n    selection = pc.selection = select(selection);\n\n    config.width = selection.node().clientWidth;\n    config.height = selection.node().clientHeight;\n    // canvas data layers\n    ['marks', 'foreground', 'brushed', 'highlight'].forEach(layer => {\n      canvas[layer] = selection\n        .append('canvas')\n        .attr('class', layer)\n        .node();\n      ctx[layer] = canvas[layer].getContext('2d');\n    });\n\n    // svg tick and brush layers\n    pc.svg = selection\n      .append('svg')\n      .attr('width', config.width)\n      .attr('height', config.height)\n      .style('font', '14px sans-serif')\n      .style('position', 'absolute')\n\n      .append('svg:g')\n      .attr(\n        'transform',\n        'translate(' + config.margin.left + ',' + config.margin.top + ')'\n      );\n    // for chained api\n    return pc;\n  };\n\n  // for partial-application style programming\n  return pc;\n};\n\nexport default init;\n","const flip = config =>\n  function(d) {\n    //__.dimensions[d].yscale.domain().reverse();                               // does not work\n    config.dimensions[d].yscale.domain(\n      config.dimensions[d].yscale.domain().reverse()\n    ); // works\n\n    return this;\n  };\n\nexport default flip;\n","const detectDimensions = pc =>\n  function() {\n    pc.dimensions(pc.applyDimensionDefaults());\n    return this;\n  };\n\nexport default detectDimensions;\n","const scale = config =>\n  function(d, domain) {\n    config.dimensions[d].yscale.domain(domain);\n\n    return this;\n  };\n\nexport default scale;\n","const DefaultConfig = {\n  data: [],\n  highlighted: [],\n  dimensions: {},\n  dimensionTitleRotation: 0,\n  brushes: [],\n  brushed: false,\n  brushedColor: null,\n  alphaOnBrushed: 0.0,\n  mode: 'default',\n  rate: 20,\n  width: 600,\n  height: 300,\n  margin: { top: 24, right: 20, bottom: 12, left: 20 },\n  nullValueSeparator: 'undefined', // set to \"top\" or \"bottom\"\n  nullValueSeparatorPadding: { top: 8, right: 0, bottom: 8, left: 0 },\n  color: '#069',\n  composite: 'source-over',\n  alpha: 0.7,\n  bundlingStrength: 0.5,\n  bundleDimension: null,\n  smoothness: 0.0,\n  showControlPoints: false,\n  hideAxis: [],\n  flipAxes: [],\n  animationTime: 1100, // How long it takes to flip the axis when you double click\n  rotateLabels: false,\n};\n\nexport default DefaultConfig;\n","import { entries, keys } from 'd3-collection';\nimport { axisLeft } from 'd3-axis';\nimport { dispatch } from 'd3-dispatch';\nimport { scalePoint } from 'd3-scale';\n\nimport DefaultConfig from './defaultConfig';\n\nconst initState = userConfig => {\n  const config = Object.assign({}, DefaultConfig, userConfig);\n\n  if (userConfig && userConfig.dimensionTitles) {\n    console.warn(\n      'dimensionTitles passed in userConfig is deprecated. Add title to dimension object.'\n    );\n    entries(userConfig.dimensionTitles).forEach(d => {\n      if (config.dimensions[d.key]) {\n        config.dimensions[d.key].title = config.dimensions[d.key].title\n          ? config.dimensions[d.key].title\n          : d.value;\n      } else {\n        config.dimensions[d.key] = {\n          title: d.value,\n        };\n      }\n    });\n  }\n\n  const eventTypes = [\n    'render',\n    'resize',\n    'highlight',\n    'brush',\n    'brushend',\n    'brushstart',\n    'axesreorder',\n  ].concat(keys(config));\n\n  const events = dispatch.apply(this, eventTypes),\n    flags = {\n      brushable: false,\n      reorderable: false,\n      axes: false,\n      interactive: false,\n      debug: false,\n    },\n    xscale = scalePoint(),\n    dragging = {},\n    axis = axisLeft().ticks(5),\n    ctx = {},\n    canvas = {};\n\n  const brush = {\n    modes: {\n      None: {\n        install: function(pc) {}, // Nothing to be done.\n        uninstall: function(pc) {}, // Nothing to be done.\n        selected: function() {\n          return [];\n        }, // Nothing to return\n        brushState: function() {\n          return {};\n        },\n      },\n    },\n    mode: 'None',\n    predicate: 'AND',\n    currentMode: function() {\n      return this.modes[this.mode];\n    },\n  };\n\n  return {\n    config,\n    events,\n    eventTypes,\n    flags,\n    xscale,\n    dragging,\n    axis,\n    ctx,\n    canvas,\n    brush,\n  };\n};\n\nexport default initState;\n","import { keys, map } from 'd3-collection';\n\nconst computeClusterCentroids = (config, d) => {\n  const clusterCentroids = map();\n  const clusterCounts = map();\n  // determine clusterCounts\n  config.data.forEach(function(row) {\n    let scaled = config.dimensions[d].yscale(row[d]);\n    if (!clusterCounts.has(scaled)) {\n      clusterCounts.set(scaled, 0);\n    }\n    let count = clusterCounts.get(scaled);\n    clusterCounts.set(scaled, count + 1);\n  });\n\n  config.data.forEach(function(row) {\n    keys(config.dimensions).map(p => {\n      let scaled = config.dimensions[d].yscale(row[d]);\n      if (!clusterCentroids.has(scaled)) {\n        let _map = map();\n        clusterCentroids.set(scaled, _map);\n      }\n      if (!clusterCentroids.get(scaled).has(p)) {\n        clusterCentroids.get(scaled).set(p, 0);\n      }\n      let value = clusterCentroids.get(scaled).get(p);\n      value += config.dimensions[p].yscale(row[p]) / clusterCounts.get(scaled);\n      clusterCentroids.get(scaled).set(p, value);\n    });\n  });\n\n  return clusterCentroids;\n};\n\nexport default computeClusterCentroids;\n","// side effects for setters\nimport { keys } from 'd3-collection';\nimport { dispatch } from 'd3-dispatch';\nimport computeClusterCentroids from '../util/computeClusterCentroids';\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\n\nconst without = (arr, items) => {\n  items.forEach(el => {\n    delete arr[el];\n  });\n  return arr;\n};\n\nconst sideEffects = (\n  config,\n  ctx,\n  pc,\n  xscale,\n  flags,\n  brushedQueue,\n  foregroundQueue\n) =>\n  dispatch\n    .apply(this, keys(config))\n    .on('composite', d => {\n      ctx.foreground.globalCompositeOperation = d.value;\n      ctx.brushed.globalCompositeOperation = d.value;\n    })\n    .on('alpha', d => {\n      ctx.foreground.globalAlpha = d.value;\n      ctx.brushed.globalAlpha = d.value;\n    })\n    .on('brushedColor', d => {\n      ctx.brushed.strokeStyle = d.value;\n    })\n    .on('width', d => pc.resize())\n    .on('height', d => pc.resize())\n    .on('margin', d => pc.resize())\n    .on('rate', d => {\n      brushedQueue.rate(d.value);\n      foregroundQueue.rate(d.value);\n    })\n    .on('dimensions', d => {\n      config.dimensions = pc.applyDimensionDefaults(keys(d.value));\n      xscale.domain(pc.getOrderedDimensionKeys());\n      pc.sortDimensions();\n      if (flags.interactive) {\n        pc.render().updateAxes();\n      }\n    })\n    .on('bundleDimension', d => {\n      if (!keys(config.dimensions).length) pc.detectDimensions();\n      pc.autoscale();\n      if (typeof d.value === 'number') {\n        if (d.value < keys(config.dimensions).length) {\n          config.bundleDimension = config.dimensions[d.value];\n        } else if (d.value < config.hideAxis.length) {\n          config.bundleDimension = config.hideAxis[d.value];\n        }\n      } else {\n        config.bundleDimension = d.value;\n      }\n\n      config.clusterCentroids = computeClusterCentroids(\n        config,\n        config.bundleDimension\n      );\n      if (flags.interactive) {\n        pc.render();\n      }\n    })\n    .on('hideAxis', d => {\n      pc.dimensions(pc.applyDimensionDefaults());\n      pc.dimensions(without(config.dimensions, d.value));\n    })\n    .on('flipAxes', d => {\n      if (d.value && d.value.length) {\n        d.value.forEach(function(axis) {\n          flipAxisAndUpdatePCP(config, pc, axis);\n        });\n        pc.updateAxes(0);\n      }\n    });\n\nexport default sideEffects;\n","import { keys } from 'd3-collection';\n\nconst getset = (obj, state, events, side_effects, pc) => {\n  keys(state).forEach(function(key) {\n    obj[key] = function(x) {\n      if (!arguments.length) {\n        return state[key];\n      }\n      if (\n        key === 'dimensions' &&\n        Object.prototype.toString.call(x) === '[object Array]'\n      ) {\n        console.warn('pc.dimensions([]) is deprecated, use pc.dimensions({})');\n        x = obj.applyDimensionDefaults(x);\n      }\n      let old = state[key];\n      state[key] = x;\n      side_effects.call(key, obj, { value: x, previous: old });\n      events.call(key, obj, { value: x, previous: old });\n      return obj;\n    };\n  });\n};\n\nexport default getset;\n","// side effects for setters\nimport sideEffects from './state/sideEffects';\nimport getset from './util/getset';\n\nconst d3_rebind = (target, source, method) =>\n  function() {\n    const value = method.apply(source, arguments);\n    return value === source ? target : value;\n  };\n\nconst _rebind = (target, source, method) => {\n  target[method] = d3_rebind(target, source, source[method]);\n  return target;\n};\n\nconst bindEvents = (\n  __,\n  ctx,\n  pc,\n  xscale,\n  flags,\n  brushedQueue,\n  foregroundQueue,\n  events,\n  axis\n) => {\n  const side_effects = sideEffects(\n    __,\n    ctx,\n    pc,\n    xscale,\n    flags,\n    brushedQueue,\n    foregroundQueue\n  );\n\n  // create getter/setters\n  getset(pc, __, events, side_effects, pc);\n\n  // expose events\n  // getter/setter with event firing\n  _rebind(pc, events, 'on');\n\n  _rebind(\n    pc,\n    axis,\n    'ticks',\n    'orient',\n    'tickValues',\n    'tickSubdivide',\n    'tickSize',\n    'tickPadding',\n    'tickFormat'\n  );\n};\n\nexport default bindEvents;\n","// misc\nimport renderQueue from './util/renderQueue';\nimport w from './util/width';\n\n// brush\nimport install1DAxes from './brush/1d';\nimport install2DStrums from './brush/strums';\nimport installAngularBrush from './brush/angular';\n\n// api\nimport intersection from './api/intersection';\nimport mergeParcoords from './api/mergeParcoords';\nimport selected from './api/selected';\nimport brushMode from './api/brushMode';\nimport updateAxes from './api/updateAxes';\nimport autoscale from './api/autoscale';\nimport brushable from './api/brushable';\nimport commonScale from './api/commonScale';\nimport computeRealCentroids from './api/computeRealCentroids';\nimport applyDimensionDefaults from './api/applyDimensionDefaults';\nimport createAxes from './api/createAxes';\nimport axisDots from './api/axisDots';\nimport applyAxisConfig from './api/applyAxisConfig';\nimport reorderable from './api/reorderable';\nimport resize from './api/resize';\nimport reorder from './api/reorder';\nimport sortDimensions from './api/sortDimensions';\nimport sortDimensionsByRowData from './api/sortDimensionsByRowData';\nimport clear from './api/clear';\nimport {\n  pathBrushed,\n  renderBrushed,\n  renderBrushedDefault,\n  renderBrushedQueue,\n} from './api/renderBrushed';\nimport brushReset from './api/brushReset';\nimport toType from './api/toType';\nimport toString from './api/toString';\nimport adjacentPairs from './api/adjacentPairs';\nimport highlight from './api/highlight';\nimport unhighlight from './api/unhighlight';\nimport removeAxes from './api/removeAxes';\nimport render from './api/render';\nimport renderDefault, {\n  pathForeground,\n  renderDefaultQueue,\n} from './api/renderDefault';\nimport toTypeCoerceNumbers from './api/toTypeCoerceNumbers';\nimport detectDimensionTypes from './api/detectDimensionTypes';\nimport getOrderedDimensionKeys from './api/getOrderedDimensionKeys';\nimport interactive from './api/interactive';\nimport shadows from './api/shadows';\nimport init from './api/init';\nimport flip from './api/flip';\nimport detectDimensions from './api/detectDimensions';\nimport scale from './api/scale';\n\nimport { version } from '../package.json';\nimport initState from './state';\nimport bindEvents from './bindEvents';\n\n//css\nimport './parallel-coordinates.css';\n\nconst ParCoords = userConfig => {\n  const state = initState(userConfig);\n  const {\n    config,\n    events,\n    flags,\n    xscale,\n    dragging,\n    axis,\n    ctx,\n    canvas,\n    brush,\n  } = state;\n\n  const pc = init(config, canvas, ctx);\n\n  const position = d => {\n    if (xscale.range().length === 0) {\n      xscale.range([0, w(config)], 1);\n    }\n    return dragging[d] == null ? xscale(d) : dragging[d];\n  };\n\n  const brushedQueue = renderQueue(pathBrushed(config, ctx, position))\n    .rate(50)\n    .clear(() => pc.clear('brushed'));\n\n  const foregroundQueue = renderQueue(pathForeground(config, ctx, position))\n    .rate(50)\n    .clear(function() {\n      pc.clear('foreground');\n      pc.clear('highlight');\n    });\n\n  bindEvents(\n    config,\n    ctx,\n    pc,\n    xscale,\n    flags,\n    brushedQueue,\n    foregroundQueue,\n    events,\n    axis\n  );\n\n  // expose the state of the chart\n  pc.state = config;\n  pc.flags = flags;\n\n  pc.autoscale = autoscale(config, pc, xscale, ctx);\n  pc.scale = scale(config);\n  pc.flip = flip(config);\n  pc.commonScale = commonScale(config, pc);\n  pc.detectDimensions = detectDimensions(pc);\n  // attempt to determine types of each dimension based on first row of data\n  pc.detectDimensionTypes = detectDimensionTypes;\n  pc.applyDimensionDefaults = applyDimensionDefaults(config, pc);\n  pc.getOrderedDimensionKeys = getOrderedDimensionKeys(config);\n\n  //Renders the polylines.\n  pc.render = render(config, pc, events);\n  pc.renderBrushed = renderBrushed(config, pc, events);\n  pc.render.default = renderDefault(config, pc, ctx, position);\n  pc.render.queue = renderDefaultQueue(config, pc, foregroundQueue);\n  pc.renderBrushed.default = renderBrushedDefault(\n    config,\n    ctx,\n    position,\n    pc,\n    brush\n  );\n  pc.renderBrushed.queue = renderBrushedQueue(config, brush, brushedQueue);\n\n  pc.compute_real_centroids = computeRealCentroids(config.dimensions, position);\n  pc.shadows = shadows(flags, pc);\n  pc.axisDots = axisDots(config, pc, position);\n  pc.clear = clear(config, pc, ctx, brush);\n  pc.createAxes = createAxes(config, pc, xscale, flags, axis);\n  pc.removeAxes = removeAxes(pc);\n  pc.updateAxes = updateAxes(config, pc, position, axis, flags);\n  pc.applyAxisConfig = applyAxisConfig;\n  pc.brushable = brushable(config, pc, flags);\n  pc.brushReset = brushReset(config);\n  pc.selected = selected(config);\n  pc.reorderable = reorderable(config, pc, xscale, position, dragging, flags);\n\n  // Reorder dimensions, such that the highest value (visually) is on the left and\n  // the lowest on the right. Visual values are determined by the data values in\n  // the given row.\n  pc.reorder = reorder(config, pc, xscale);\n  pc.sortDimensionsByRowData = sortDimensionsByRowData(config);\n  pc.sortDimensions = sortDimensions(config, position);\n\n  // pairs of adjacent dimensions\n  pc.adjacent_pairs = adjacentPairs;\n  pc.interactive = interactive(flags);\n\n  // expose internal state\n  pc.xscale = xscale;\n  pc.ctx = ctx;\n  pc.canvas = canvas;\n  pc.g = () => pc._g;\n\n  // rescale for height, width and margins\n  // TODO currently assumes chart is brushable, and destroys old brushes\n  pc.resize = resize(config, pc, flags, events);\n\n  // highlight an array of data\n  pc.highlight = highlight(config, pc, canvas, events, ctx, position);\n  // clear highlighting\n  pc.unhighlight = unhighlight(config, pc, canvas);\n\n  // calculate 2d intersection of line a->b with line c->d\n  // points are objects with x and y properties\n  pc.intersection = intersection;\n\n  // Merges the canvases and SVG elements into one canvas element which is then passed into the callback\n  // (so you can choose to save it to disk, etc.)\n  pc.mergeParcoords = mergeParcoords(pc);\n  pc.brushModes = () => Object.getOwnPropertyNames(brush.modes);\n  pc.brushMode = brushMode(brush, config, pc);\n\n  // install brushes\n  install1DAxes(brush, config, pc, events);\n  install2DStrums(brush, config, pc, events, xscale);\n  installAngularBrush(brush, config, pc, events, xscale);\n\n  pc.version = version;\n  // this descriptive text should live with other introspective methods\n  pc.toString = toString(config);\n  pc.toType = toType;\n  // try to coerce to number before returning type\n  pc.toTypeCoerceNumbers = toTypeCoerceNumbers;\n\n  return pc;\n};\n\nexport default ParCoords;\n"],"names":["renderQueue","func","_queue","_rate","_invalidate","_clear","rq","data","render","valid","invalidate","doFrame","chunk","splice","map","requestAnimationFrame","slice","add","concat","rate","value","arguments","length","remaining","clear","w","config","width","margin","right","left","brushExtents","state","pc","brushes","brushNodes","extents","keys","dimensions","reduce","acc","cur","brush","undefined","brushSelection","d","extent","brushSelections","g","selectAll","each","select","forEach","dim","yExtent","yscale","call","move","reverse","renderBrushed","brushReset","dimension","brushed","event","selected","brushGroup","is_brushed","p","actives","filter","_brushRange","invert","within","date","bandwidth","number","string","predicate","every","type","some","Error","brushPredicate","brushUpdated","events","newSelection","brushFor","axis","_selector","brushRangeMax","range","_brush","brushY","on","sourceEvent","stopPropagation","node","install","createAxes","append","attr","style","uninstall","remove","BrushState","install1DAxes","Object","assign","modes","brushState","selection","strumRect","containmentTest","strum","p1","minX","p2","m1","b1","m2","b2","x","y","y1","y2","Math","min","max","crossesStrum","id","strums","test","d1","dims","d2","point","ids","getOwnPropertyNames","isNaN","crossTest","removeStrum","active","svg","i","onDragEnd","drawStrum","activePoint","_svg","points","_line","circles","_drag","drag","enter","ev","maxX","minY","maxY","onDrag","top","h","height","bottom","dimensionsForPoint","xscale","getOrderedDimensionKeys","indexOf","onDragStart","mouse","consecutive","first","second","insert","install2DStrums","hypothenuse","a","b","sqrt","signedAngle","angle","PI","startAngle","arc","endAngle","tmp","arcs","c","asin","outerRadius","p3","_path","d3Arc","innerRadius","sAngle","uAngle","installAngularBrush","intersection","mergeParcoords","devicePixelRatio","window","mergedCanvas","document","createElement","canvas","foreground","clientWidth","clientHeight","context","getContext","fillStyle","fillRect","key","drawImage","DOMURL","URL","webkitURL","serializer","XMLSerializer","svgStr","serializeToString","src","btoa","img","Image","onload","callback","ranges","nodes","k","push","__data__","values","ranger","domain","includes","flipAxes","unshift","ii","dimRange","dimDomain","j","category","categoryIndex","categoryRangeValue","multiBrushData","idx","filtered","z","String","toUpperCase","currentMode","brushMode","mode","brushModes","dimensionLabels","title","flipAxisAndUpdatePCP","flip","parentElement","transition","duration","animationTime","scale","rotateLabels","delta","deltaY","dimensionTitleRotation","preventDefault","updateAxes","position","flags","g_data","axisElement","applyAxisConfig","transform","class","text","exit","brushable","reorderable","getRange","nullValueSeparator","nullValueSeparatorPadding","autoscale","ctx","defaultScales","_extent","getTime","scalePoint","tempDate","val","scaleTime","scaleLinear","counts","sort","tempArr","pop","categoricalRange","addBy","scaleOrdinal","strokeStyle","color","lineWidth","globalCompositeOperation","composite","globalAlpha","alpha","brushedColor","highlight","ctrlKey","html","outerHTML","replace","dat","parentNode","commonScale","global","t","detectDimensions","scales","bundleDimension","computeRealCentroids","row","applyDimensionDefaults","types","detectDimensionTypes","orient","ticks","innerTickSize","outerTickSize","tickPadding","index","removeAxes","_g","axes","axisDots","r","_r","marks","pow","entries","beginPath","stroke","fill","axisCfg","axisLeft","axisRight","axisTop","axisBottom","tickValues","tickSizeInner","tickSizeOuter","tickFormat","dragging","__origin__","__","dx","sortDimensions","resize","reorder","firstDim","sortDimensionsByRowData","rowdata","reordered","highlighted","unhighlight","copy","positionSortedKeys","pixelDifference","localeCompare","isBrushed","object","hasOwnProperty","layer","clearRect","alphaOnBrushed","computeCentroids","centroids","cols","$V","cx","cy","leftCentroid","clusterCentroids","get","rightCentroid","centroid","bundlingStrength","computeControlPoints","smoothness","cps","e","col","mid","diff","subtract","singleCurve","moveTo","showControlPoints","bezierCurveTo","getNullPosition","console","log","singlePath","lineTo","colorPath","_functor","v","pathBrushed","functor","renderBrushedDefault","renderBrushedQueue","brushedQueue","brushesToKeep","toType","toString","match","toLowerCase","adjacentPairs","ret","arr","pathHighlight","classed","pathForeground","renderDefault","default","renderDefaultQueue","foregroundQueue","queue","toTypeCoerceNumbers","parseFloat","Number","parseInt","ascending","interactive","shadows","init","DefaultConfig","hideAxis","initState","userConfig","dimensionTitles","warn","eventTypes","dispatch","apply","debug","None","computeClusterCentroids","clusterCounts","scaled","has","set","count","_map","without","items","el","sideEffects","getset","obj","side_effects","prototype","old","previous","d3_rebind","target","source","method","_rebind","bindEvents","ParCoords","compute_real_centroids","adjacent_pairs","version"],"mappings":"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"}