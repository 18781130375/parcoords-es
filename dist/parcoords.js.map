{"version":3,"file":"parcoords.js","sources":["../src/util/renderQueue.js","../src/util/width.js","../src/brush/1d/brushExtents.js","../src/brush/1d/brushReset.js","../src/brush/1d/selected.js","../src/brush/1d/brushFor.js","../src/brush/1d/install.js","../src/brush/1d/uninstall.js","../src/brush/1d/index.js","../src/brush/strums/uninstall.js","../src/brush/strums/selected.js","../src/brush/strums/removeStrum.js","../src/brush/strums/onDragEnd.js","../src/brush/strums/onDrag.js","../src/util/height.js","../src/brush/dimensionsForPoint.js","../src/brush/strums/onDragStart.js","../src/brush/strums/brushReset.js","../src/brush/strums/install.js","../src/brush/strums/index.js","../src/brush/angular/uninstall.js","../src/brush/angular/util/hypothenuse.js","../src/brush/angular/selected.js","../src/brush/angular/removeStrum.js","../src/brush/angular/onDragEnd.js","../src/brush/angular/onDrag.js","../src/brush/angular/onDragStart.js","../src/brush/angular/brushReset.js","../src/brush/angular/install.js","../src/brush/angular/index.js","../src/api/intersection.js","../src/api/mergeParcoords.js","../src/api/selected.js","../src/api/brushMode.js","../src/util/dimensionLabels.js","../src/util/flipAxisAndUpdatePCP.js","../src/util/rotateLabels.js","../src/api/updateAxes.js","../src/util/getRange.js","../src/api/autoscale.js","../src/api/brushable.js","../src/api/commonScale.js","../src/api/computeRealCentroids.js","../src/api/applyDimensionDefaults.js","../src/api/createAxes.js","../src/api/axisDots.js","../src/api/applyAxisConfig.js","../src/api/reorderable.js","../src/api/resize.js","../src/api/reorder.js","../src/api/sortDimensions.js","../src/api/sortDimensionsByRowData.js","../src/util/isBrushed.js","../src/api/clear.js","../src/util/computeCentroids.js","../src/util/computeControlPoints.js","../src/util/colorPath.js","../src/util/functor.js","../src/api/renderBrushed.js","../src/api/brushReset.js","../src/api/toType.js","../src/api/toString.js","../src/api/adjacentPairs.js","../src/api/highlight.js","../src/api/unhighlight.js","../src/api/removeAxes.js","../src/api/render.js","../src/api/renderDefault.js","../src/api/toTypeCoerceNumbers.js","../src/api/detectDimensionTypes.js","../src/api/getOrderedDimensionKeys.js","../src/api/interactive.js","../src/api/shadows.js","../src/api/init.js","../src/api/flip.js","../src/api/detectDimensions.js","../src/api/scale.js","../node_modules/lodash-es/_freeGlobal.js","../node_modules/lodash-es/_root.js","../node_modules/lodash-es/_Symbol.js","../node_modules/lodash-es/_getRawTag.js","../node_modules/lodash-es/_objectToString.js","../node_modules/lodash-es/_baseGetTag.js","../node_modules/lodash-es/isObject.js","../src/state/defaultConfig.js","../src/state/index.js","../src/util/computeClusterCentroids.js","../src/state/sideEffects.js","../src/util/getset.js","../src/bindEvents.js","../src/index.js"],"sourcesContent":["import 'requestanimationframe';\n\nconst renderQueue = function(func) {\n  let _queue = [], // data to be rendered\n    _rate = 1000, // number of calls per frame\n    _invalidate = function() {}, // invalidate last render queue\n    _clear = function() {}; // clearing function\n\n  let rq = function(data) {\n    if (data) rq.data(data);\n    _invalidate();\n    _clear();\n    rq.render();\n  };\n\n  rq.render = function() {\n    let valid = true;\n    _invalidate = rq.invalidate = function() {\n      valid = false;\n    };\n\n    function doFrame() {\n      if (!valid) return true;\n      let chunk = _queue.splice(0, _rate);\n      chunk.map(func);\n      requestAnimationFrame(doFrame);\n    }\n\n    doFrame();\n  };\n\n  rq.data = function(data) {\n    _invalidate();\n    _queue = data.slice(0); // creates a copy of the data\n    return rq;\n  };\n\n  rq.add = function(data) {\n    _queue = _queue.concat(data);\n  };\n\n  rq.rate = function(value) {\n    if (!arguments.length) return _rate;\n    _rate = value;\n    return rq;\n  };\n\n  rq.remaining = function() {\n    return _queue.length;\n  };\n\n  // clear the canvas\n  rq.clear = function(func) {\n    if (!arguments.length) {\n      _clear();\n      return rq;\n    }\n    _clear = func;\n    return rq;\n  };\n\n  rq.invalidate = _invalidate;\n\n  return rq;\n};\n\nexport default renderQueue;\n","const w = config => config.width - config.margin.right - config.margin.left;\n\nexport default w;\n","import { keys } from 'd3-collection';\nimport { brushSelection } from 'd3-brush';\n\nconst brushExtents = (state, config, pc) => extents => {\n  const { brushes } = state;\n\n  if (typeof extents === 'undefined') {\n    return keys(config.dimensions).reduce((acc, cur) => {\n      const brush = brushes[cur];\n      //todo: brush check\n      if (brush !== undefined && brushSelection(brushNodes[cur]) !== null) {\n        acc[d] = brush.extent();\n      }\n\n      return acc;\n    }, {});\n  } else {\n    //first get all the brush selections\n    const brushSelections = pc\n      .g()\n      .selectAll('.brush')\n      .reduce(function(acc, cur) {\n        acc[cur] = select(this);\n        return acc;\n      });\n\n    // loop over each dimension and update appropriately (if it was passed in through extents)\n    keys(config.dimensions).forEach(function(d) {\n      if (extents[d] === undefined) {\n        return;\n      }\n\n      const brush = brushes[d];\n      if (brush !== undefined) {\n        //update the extent\n        brush.extent(extents[d]);\n\n        //redraw the brush\n        brushSelections[d]\n          .transition()\n          .duration(0)\n          .call(brush);\n\n        //fire some events\n        brush.event(brushSelections[d]);\n      }\n    });\n\n    //redraw the chart\n    pc.renderBrushed();\n\n    return pc;\n  }\n};\n\nexport default brushExtents;\n","import { select } from 'd3-selection';\n\nconst brushReset = (state, config, pc) => dimension => {\n  const { brushes } = state;\n\n  if (dimension === undefined) {\n    config.brushed = false;\n    if (pc.g() !== undefined && pc.g() !== null) {\n      pc\n        .g()\n        .selectAll('.brush')\n        .each(function(d) {\n          select(this).call(brushes[d].move, null);\n        });\n      pc.renderBrushed();\n    }\n  } else {\n    if (pc.g() !== undefined && pc.g() !== null) {\n      pc\n        .g()\n        .selectAll('.brush')\n        .each(function(d) {\n          if (d != dimension) return;\n          select(this).call(brushes[d].move, null);\n          brushes[d].event(select(this));\n        });\n      pc.renderBrushed();\n    }\n  }\n  return this;\n};\n\nexport default brushReset;\n","import { brushSelection } from 'd3-brush';\n//https://github.com/d3/d3-brush/issues/10\nimport { keys } from 'd3-collection';\n\n// data within extents\nconst selected = (state, config, brushGroup) => () => {\n  const { brushNodes } = state;\n  const is_brushed = p => brushSelection(brushNodes[p]) !== null;\n\n  const actives = keys(config.dimensions).filter(is_brushed);\n  const extents = actives.map(p => {\n    const _brushRange = brushSelection(brushNodes[p]);\n\n    if (typeof config.dimensions[p].yscale.invert === 'function') {\n      return [\n        config.dimensions[p].yscale.invert(_brushRange[1]),\n        config.dimensions[p].yscale.invert(_brushRange[0]),\n      ];\n    } else {\n      return _brushRange;\n    }\n  });\n  // We don't want to return the full data set when there are no axes brushed.\n  // Actually, when there are no axes brushed, by definition, no items are\n  // selected. So, let's avoid the filtering and just return false.\n  //if (actives.length === 0) return false;\n\n  // Resolves broken examples for now. They expect to get the full dataset back from empty brushes\n  if (actives.length === 0) return config.data;\n\n  // test if within range\n  const within = {\n    date: (d, p, dimension) => {\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\n        // if it is ordinal\n        return (\n          extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\n          config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n        );\n      } else {\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\n      }\n    },\n    number: (d, p, dimension) => {\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\n        // if it is ordinal\n        return (\n          extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\n          config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n        );\n      } else {\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\n      }\n    },\n    string: (d, p, dimension) => {\n      return (\n        extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\n        config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n      );\n    },\n  };\n\n  return config.data.filter(d => {\n    switch (brushGroup.predicate) {\n      case 'AND':\n        return actives.every(function(p, dimension) {\n          return within[config.dimensions[p].type](d, p, dimension);\n        });\n      case 'OR':\n        return actives.some(function(p, dimension) {\n          return within[config.dimensions[p].type](d, p, dimension);\n        });\n      default:\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\n    }\n  });\n};\n\nexport default selected;\n","import { brushY } from 'd3-brush';\nimport { event } from 'd3-selection';\n\nimport selected from './selected';\n\nconst brushUpdated = (config, pc, events) => newSelection => {\n  config.brushed = newSelection;\n  events.call('brush', pc, config.brushed);\n  pc.renderBrushed();\n};\n\nconst brushFor = (state, config, pc, events, brushGroup) => (\n  axis,\n  _selector\n) => {\n  const brushRangeMax =\n    config.dimensions[axis].type === 'string'\n      ? config.dimensions[axis].yscale.range()[\n          config.dimensions[axis].yscale.range().length - 1\n        ]\n      : config.dimensions[axis].yscale.range()[0];\n\n  const _brush = brushY(_selector).extent([[-15, 0], [15, brushRangeMax]]);\n\n  _brush\n    .on('start', function() {\n      if (event.sourceEvent !== null) {\n        events.call('brushstart', pc, config.brushed);\n        event.sourceEvent.stopPropagation();\n      }\n    })\n    .on('brush', function() {\n      brushUpdated(config, pc, events)(selected(state, config, brushGroup)());\n    })\n    .on('end', function() {\n      brushUpdated(config, pc, events)(selected(state, config, brushGroup)());\n      events.call('brushend', pc, config.brushed);\n    });\n\n  state.brushes[axis] = _brush;\n  state.brushNodes[axis] = _selector.node();\n\n  return _brush;\n};\n\nexport default brushFor;\n","import { select } from 'd3-selection';\nimport brushExtents from './brushExtents';\nimport brushReset from './brushReset';\nimport brushFor from './brushFor';\n\nconst install = (state, config, pc, events, brushGroup) => () => {\n  if (!pc.g()) {\n    pc.createAxes();\n  }\n\n  // Add and store a brush for each axis.\n  const brush = pc\n    .g()\n    .append('svg:g')\n    .attr('class', 'brush')\n    .each(function(d) {\n      select(this).call(\n        brushFor(state, config, pc, events, brushGroup)(d, select(this))\n      );\n    });\n  brush\n    .selectAll('rect')\n    .style('visibility', null)\n    .attr('x', -15)\n    .attr('width', 30);\n\n  brush.selectAll('rect.background').style('fill', 'transparent');\n\n  brush\n    .selectAll('rect.extent')\n    .style('fill', 'rgba(255,255,255,0.25)')\n    .style('stroke', 'rgba(0,0,0,0.6)');\n\n  brush.selectAll('.resize rect').style('fill', 'rgba(0,0,0,0.1)');\n\n  pc.brushExtents = brushExtents(state, config, pc);\n  pc.brushReset = brushReset(state, config, pc);\n  return pc;\n};\n\nexport default install;\n","const uninstall = (state, pc) => () => {\n  if (pc.g() !== undefined && pc.g() !== null)\n    pc\n      .g()\n      .selectAll('.brush')\n      .remove();\n\n  state.brushes = {};\n  delete pc.brushExtents;\n  delete pc.brushReset;\n};\n\nexport default uninstall;\n","import brushExtents from './brushExtents';\nimport install from './install';\nimport selected from './selected';\nimport uninstall from './uninstall';\n\nconst BrushState = {\n  brushes: {},\n  brushNodes: {},\n};\n\nconst install1DAxes = (brushGroup, config, pc, events) => {\n  const state = Object.assign({}, BrushState);\n\n  brushGroup.modes['1D-axes'] = {\n    install: install(state, config, pc, events, brushGroup),\n    uninstall: uninstall(state, pc),\n    selected: selected(state, config, brushGroup),\n    brushState: brushExtents(state, pc),\n  };\n};\n\nexport default install1DAxes;\n","const uninstall = (state, pc) => () => {\n  pc.selection\n    .select('svg')\n    .select('g#strums')\n    .remove();\n  pc.selection\n    .select('svg')\n    .select('rect#strum-events')\n    .remove();\n  pc.on('axesreorder.strums', undefined);\n  delete pc.brushReset;\n\n  state.strumRect = undefined;\n};\n\nexport default uninstall;\n","// test if point falls between lines\nconst containmentTest = (strum, width) => p => {\n  const p1 = [strum.p1[0] - strum.minX, strum.p1[1] - strum.minX],\n    p2 = [strum.p2[0] - strum.minX, strum.p2[1] - strum.minX],\n    m1 = 1 - width / p1[0],\n    b1 = p1[1] * (1 - m1),\n    m2 = 1 - width / p2[0],\n    b2 = p2[1] * (1 - m2);\n\n  const x = p[0],\n    y = p[1],\n    y1 = m1 * x + b1,\n    y2 = m2 * x + b2;\n\n  return y > Math.min(y1, y2) && y < Math.max(y1, y2);\n};\n\nconst crossesStrum = (state, config) => (d, id) => {\n  let strum = state.strums[id],\n    test = containmentTest(strum, state.strums.width(id)),\n    d1 = strum.dims.left,\n    d2 = strum.dims.right,\n    y1 = config.dimensions[d1].yscale,\n    y2 = config.dimensions[d2].yscale,\n    point = [y1(d[d1]) - strum.minX, y2(d[d2]) - strum.minX];\n  return test(point);\n};\n\nconst selected = (brushGroup, state, config) => {\n  // Get the ids of the currently active strums.\n  const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d)),\n    brushed = config.data;\n\n  if (ids.length === 0) {\n    return brushed;\n  }\n\n  const crossTest = crossesStrum(state, config);\n\n  return brushed.filter(d => {\n    switch (brushGroup.predicate) {\n      case 'AND':\n        return ids.every(id => crossTest(d, id));\n      case 'OR':\n        return ids.some(id => crossTest(d, id));\n      default:\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\n    }\n  });\n};\n\nexport default selected;\n","const removeStrum = (state, pc) => {\n  const strum = state.strums[state.strums.active],\n    svg = pc.selection.select('svg').select('g#strums');\n\n  delete state.strums[state.strums.active];\n  svg.selectAll('line#strum-' + strum.dims.i).remove();\n  svg.selectAll('circle#strum-' + strum.dims.i).remove();\n};\n\nexport default removeStrum;\n","import selected from './selected';\nimport removeStrum from './removeStrum';\n\nconst onDragEnd = (brushGroup, state, config, pc, events) => () => {\n  const strum = state.strums[state.strums.active];\n\n  // Okay, somewhat unexpected, but not totally unsurprising, a mousclick is\n  // considered a drag without move. So we have to deal with that case\n  if (strum && strum.p1[0] === strum.p2[0] && strum.p1[1] === strum.p2[1]) {\n    removeStrum(state, pc);\n  }\n\n  const brushed = selected(brushGroup, state, config);\n  state.strums.active = undefined;\n  config.brushed = brushed;\n  pc.renderBrushed();\n  events.call('brushend', pc, config.brushed);\n};\n\nexport default onDragEnd;\n","import { event, select } from 'd3-selection';\nimport { drag } from 'd3-drag';\nimport onDragEnd from './onDragEnd';\n\nconst drawStrum = (\n  brushGroup,\n  state,\n  config,\n  pc,\n  events,\n  strum,\n  activePoint\n) => {\n  let _svg = pc.selection.select('svg').select('g#strums'),\n    id = strum.dims.i,\n    points = [strum.p1, strum.p2],\n    _line = _svg.selectAll('line#strum-' + id).data([strum]),\n    circles = _svg.selectAll('circle#strum-' + id).data(points),\n    _drag = drag();\n\n  _line\n    .enter()\n    .append('line')\n    .attr('id', 'strum-' + id)\n    .attr('class', 'strum');\n\n  _line\n    .attr('x1', d => d.p1[0])\n    .attr('y1', d => d.p1[1])\n    .attr('x2', d => d.p2[0])\n    .attr('y2', d => d.p2[1])\n    .attr('stroke', 'black')\n    .attr('stroke-width', 2);\n\n  _drag\n    .on('drag', function(d, i) {\n      const ev = event;\n      i = i + 1;\n      strum['p' + i][0] = Math.min(Math.max(strum.minX + 1, ev.x), strum.maxX);\n      strum['p' + i][1] = Math.min(Math.max(strum.minY, ev.y), strum.maxY);\n      drawStrum(brushGroup, state, config, pc, events, strum, i - 1);\n    })\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\n\n  circles\n    .enter()\n    .append('circle')\n    .attr('id', 'strum-' + id)\n    .attr('class', 'strum');\n\n  circles\n    .attr('cx', d => d[0])\n    .attr('cy', d => d[1])\n    .attr('r', 5)\n    .style(\n      'opacity',\n      (d, i) => (activePoint !== undefined && i === activePoint ? 0.8 : 0)\n    )\n    .on('mouseover', function() {\n      select(this).style('opacity', 0.8);\n    })\n    .on('mouseout', function() {\n      select(this).style('opacity', 0);\n    })\n    .call(_drag);\n};\n\nconst onDrag = (brushGroup, state, config, pc, events) => () => {\n  const ev = event,\n    strum = state.strums[state.strums.active];\n\n  // Make sure that the point is within the bounds\n  strum.p2[0] = Math.min(\n    Math.max(strum.minX + 1, ev.x - config.margin.left),\n    strum.maxX\n  );\n  strum.p2[1] = Math.min(\n    Math.max(strum.minY, ev.y - config.margin.top),\n    strum.maxY\n  );\n\n  drawStrum(brushGroup, state, config, pc, events, strum, 1);\n};\n\nexport default onDrag;\n","const h = config => config.height - config.margin.top - config.margin.bottom;\n\nexport default h;\n","import { keys } from 'd3-collection';\n\nconst dimensionsForPoint = (config, pc, xscale, p) => {\n  const dims = { i: -1, left: undefined, right: undefined };\n  keys(config.dimensions).some((dim, i) => {\n    if (xscale(dim) < p[0]) {\n      dims.i = i;\n      dims.left = dim;\n      dims.right = keys(config.dimensions)[\n        pc.getOrderedDimensionKeys().indexOf(dim) + 1\n      ];\n      return false;\n    }\n    return true;\n  });\n\n  if (dims.left === undefined) {\n    // Event on the left side of the first axis.\n    dims.i = 0;\n    dims.left = pc.getOrderedDimensionKeys()[0];\n    dims.right = pc.getOrderedDimensionKeys()[1];\n  } else if (dims.right === undefined) {\n    // Event on the right side of the last axis\n    dims.i = keys(config.dimensions).length - 1;\n    dims.right = dims.left;\n    dims.left = pc.getOrderedDimensionKeys()[\n      keys(config.dimensions).length - 2\n    ];\n  }\n\n  return dims;\n};\n\nexport default dimensionsForPoint;\n","import { mouse } from 'd3-selection';\nimport h from '../../util/height';\nimport dimensionsForPoint from '../dimensionsForPoint';\n\n// First we need to determine between which two axes the sturm was started.\n// This will determine the freedom of movement, because a strum can\n// logically only happen between two axes, so no movement outside these axes\n// should be allowed.\nconst onDragStart = (state, config, pc, xscale) => () => {\n  let p = mouse(state.strumRect.node());\n\n  p[0] = p[0] - config.margin.left;\n  p[1] = p[1] - config.margin.top;\n\n  const dims = dimensionsForPoint(config, pc, xscale, p);\n  const strum = {\n    p1: p,\n    dims: dims,\n    minX: xscale(dims.left),\n    maxX: xscale(dims.right),\n    minY: 0,\n    maxY: h(config),\n  };\n\n  // Make sure that the point is within the bounds\n  strum.p1[0] = Math.min(Math.max(strum.minX, p[0]), strum.maxX);\n  strum.p2 = strum.p1.slice();\n\n  state.strums[dims.i] = strum;\n  state.strums.active = dims.i;\n};\n\nexport default onDragStart;\n","import onDragEnd from './onDragEnd';\nimport removeStrum from './removeStrum';\n\nconst brushReset = (brushGroup, state, config, pc, events) => () => {\n  const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d));\n\n  ids.forEach(d => {\n    state.strums.active = d;\n    removeStrum(state, pc);\n  });\n  onDragEnd(brushGroup, state, config, pc, events)();\n};\n\nexport default brushReset;\n","import { drag } from 'd3-drag';\nimport { keys } from 'd3-collection';\nimport onDragEnd from './onDragEnd';\nimport onDrag from './onDrag';\nimport onDragStart from './onDragStart';\nimport removeStrum from './removeStrum';\nimport brushReset from './brushReset';\nimport w from '../../util/width';\nimport h from '../../util/height';\n\n// Checks if the first dimension is directly left of the second dimension.\nconst consecutive = dimensions => (first, second) => {\n  const keys = keys(dimensions);\n\n  return keys.some(\n    (d, i) =>\n      d === first ? i + i < keys.length && dimensions[i + 1] === second : false\n  );\n};\n\nconst install = (brushGroup, state, config, pc, events, xscale) => () => {\n  if (pc.g() === undefined || pc.g() === null) {\n    pc.createAxes();\n  }\n\n  const _drag = drag();\n\n  // Map of current strums. Strums are stored per segment of the PC. A segment,\n  // being the area between two axes. The left most area is indexed at 0.\n  state.strums.active = undefined;\n  // Returns the width of the PC segment where currently a strum is being\n  // placed. NOTE: even though they are evenly spaced in our current\n  // implementation, we keep for when non-even spaced segments are supported as\n  // well.\n  state.strums.width = id =>\n    state.strums[id] === undefined\n      ? undefined\n      : state.strums[id].maxX - state.strums[id].minX;\n\n  pc.on('axesreorder.strums', () => {\n    const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d));\n\n    if (ids.length > 0) {\n      // We have some strums, which might need to be removed.\n      ids.forEach(d => {\n        const dims = state.strums[d].dims;\n        state.strums.active = d;\n        // If the two dimensions of the current strum are not next to each other\n        // any more, than we'll need to remove the strum. Otherwise we keep it.\n        if (!consecutive(config.dimensions)(dims.left, dims.right)) {\n          removeStrum(state, pc);\n        }\n      });\n      onDragEnd(brushGroup, state, config, pc, events)();\n    }\n  });\n\n  // Add a new svg group in which we draw the strums.\n  pc.selection\n    .select('svg')\n    .append('g')\n    .attr('id', 'strums')\n    .attr(\n      'transform',\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\n    );\n\n  // Install the required brushReset function\n  pc.brushReset = brushReset(brushGroup, state, config, pc, events);\n\n  _drag\n    .on('start', onDragStart(state, config, pc, xscale))\n    .on('drag', onDrag(brushGroup, state, config, pc, events))\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\n\n  // NOTE: The styling needs to be done here and not in the css. This is because\n  //       for 1D brushing, the canvas layers should not listen to\n  //       pointer-events._.\n  state.strumRect = pc.selection\n    .select('svg')\n    .insert('rect', 'g#strums')\n    .attr('id', 'strum-events')\n    .attr('x', config.margin.left)\n    .attr('y', config.margin.top)\n    .attr('width', w(config))\n    .attr('height', h(config) + 2)\n    .style('opacity', 0)\n    .call(_drag);\n};\n\nexport default install;\n","import uninstall from './uninstall';\nimport install from './install';\nimport selected from './selected';\n\nconst BrushState = {\n  strums: {},\n  strumRect: {},\n};\n\nconst install2DStrums = (brushGroup, config, pc, events, xscale) => {\n  const state = Object.assign({}, BrushState);\n\n  brushGroup.modes['2D-strums'] = {\n    install: install(brushGroup, state, config, pc, events, xscale),\n    uninstall: uninstall(state, pc),\n    selected: selected(brushGroup, state, config),\n    brushState: () => state.strums,\n  };\n};\n\nexport default install2DStrums;\n","const uninstall = (state, pc) => () => {\n  pc.selection\n    .select('svg')\n    .select('g#arcs')\n    .remove();\n  pc.selection\n    .select('svg')\n    .select('rect#arc-events')\n    .remove();\n  pc.on('axesreorder.arcs', undefined);\n\n  delete pc.brushReset;\n\n  state.strumRect = undefined;\n};\n\nexport default uninstall;\n","const hypothenuse = (a, b) => Math.sqrt(a * a + b * b);\n\nexport default hypothenuse;\n","import hypothenuse from './util/hypothenuse';\n\n// [0, 2*PI] -> [-PI/2, PI/2]\nconst signedAngle = angle =>\n  angle > Math.PI ? 1.5 * Math.PI - angle : 0.5 * Math.PI - angle;\n\n/**\n * angles are stored in radians from in [0, 2*PI], where 0 in 12 o'clock.\n * However, one can only select lines from 0 to PI, so we compute the\n * 'signed' angle, where 0 is the horizontal line (3 o'clock), and +/- PI/2\n * are 12 and 6 o'clock respectively.\n */\nconst containmentTest = arc => a => {\n  let startAngle = signedAngle(arc.startAngle);\n  let endAngle = signedAngle(arc.endAngle);\n\n  if (startAngle > endAngle) {\n    const tmp = startAngle;\n    startAngle = endAngle;\n    endAngle = tmp;\n  }\n\n  // test if segment angle is contained in angle interval\n  return a >= startAngle && a <= endAngle;\n};\n\nconst crossesStrum = (state, config) => (d, id) => {\n  const arc = state.arcs[id],\n    test = containmentTest(arc),\n    d1 = arc.dims.left,\n    d2 = arc.dims.right,\n    y1 = config.dimensions[d1].yscale,\n    y2 = config.dimensions[d2].yscale,\n    a = state.arcs.width(id),\n    b = y1(d[d1]) - y2(d[d2]),\n    c = hypothenuse(a, b),\n    angle = Math.asin(b / c); // rad in [-PI/2, PI/2]\n  return test(angle);\n};\n\nconst selected = (brushGroup, state, config) => {\n  const ids = Object.getOwnPropertyNames(state.arcs).filter(d => !isNaN(d));\n  const brushed = config.data;\n\n  if (ids.length === 0) {\n    return brushed;\n  }\n\n  const crossTest = crossesStrum(state, config);\n\n  return brushed.filter(d => {\n    switch (brushGroup.predicate) {\n      case 'AND':\n        return ids.every(id => crossTest(d, id));\n      case 'OR':\n        return ids.some(id => crossTest(d, id));\n      default:\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\n    }\n  });\n};\n\nexport default selected;\n","const removeStrum = (state, pc) => {\n  const arc = state.arcs[state.arcs.active],\n    svg = pc.selection.select('svg').select('g#arcs');\n\n  delete state.arcs[state.arcs.active];\n  state.arcs.active = undefined;\n  svg.selectAll('line#arc-' + arc.dims.i).remove();\n  svg.selectAll('circle#arc-' + arc.dims.i).remove();\n  svg.selectAll('path#arc-' + arc.dims.i).remove();\n};\n\nexport default removeStrum;\n","import selected from './selected';\nimport removeStrum from './removeStrum';\n\nconst onDragEnd = (brushGroup, state, config, pc, events) => () => {\n  const arc = state.arcs[state.arcs.active];\n\n  // Okay, somewhat unexpected, but not totally unsurprising, a mousclick is\n  // considered a drag without move. So we have to deal with that case\n  if (arc && arc.p1[0] === arc.p2[0] && arc.p1[1] === arc.p2[1]) {\n    removeStrum(state, pc);\n  }\n\n  if (arc) {\n    const angle = state.arcs.startAngle(state.arcs.active);\n\n    arc.startAngle = angle;\n    arc.endAngle = angle;\n    arc.arc\n      .outerRadius(state.arcs.length(state.arcs.active))\n      .startAngle(angle)\n      .endAngle(angle);\n  }\n\n  state.arcs.active = undefined;\n  config.brushed = selected(brushGroup, state, config);\n  pc.renderBrushed();\n  events.call('brushend', pc, config.brushed);\n};\n\nexport default onDragEnd;\n","import { event, select } from 'd3-selection';\nimport { drag } from 'd3-drag';\nimport onDragEnd from './onDragEnd';\n\nconst drawStrum = (brushGroup, state, config, pc, events, arc, activePoint) => {\n  const svg = pc.selection.select('svg').select('g#arcs'),\n    id = arc.dims.i,\n    points = [arc.p2, arc.p3],\n    _line = svg\n      .selectAll('line#arc-' + id)\n      .data([{ p1: arc.p1, p2: arc.p2 }, { p1: arc.p1, p2: arc.p3 }]),\n    circles = svg.selectAll('circle#arc-' + id).data(points),\n    _drag = drag(),\n    _path = svg.selectAll('path#arc-' + id).data([arc]);\n\n  _path\n    .enter()\n    .append('path')\n    .attr('id', 'arc-' + id)\n    .attr('class', 'arc')\n    .style('fill', 'orange')\n    .style('opacity', 0.5);\n\n  _path\n    .attr('d', arc.arc)\n    .attr('transform', 'translate(' + arc.p1[0] + ',' + arc.p1[1] + ')');\n\n  _line\n    .enter()\n    .append('line')\n    .attr('id', 'arc-' + id)\n    .attr('class', 'arc');\n\n  _line\n    .attr('x1', d => d.p1[0])\n    .attr('y1', d => d.p1[1])\n    .attr('x2', d => d.p2[0])\n    .attr('y2', d => d.p2[1])\n    .attr('stroke', 'black')\n    .attr('stroke-width', 2);\n\n  _drag\n    .on('drag', (d, i) => {\n      const ev = event;\n      i = i + 2;\n\n      arc['p' + i][0] = Math.min(Math.max(arc.minX + 1, ev.x), arc.maxX);\n      arc['p' + i][1] = Math.min(Math.max(arc.minY, ev.y), arc.maxY);\n\n      const angle =\n        i === 3 ? state.arcs.startAngle(id) : state.arcs.endAngle(id);\n\n      if (\n        (arc.startAngle < Math.PI &&\n          arc.endAngle < Math.PI &&\n          angle < Math.PI) ||\n        (arc.startAngle >= Math.PI &&\n          arc.endAngle >= Math.PI &&\n          angle >= Math.PI)\n      ) {\n        if (i === 2) {\n          arc.endAngle = angle;\n          arc.arc.endAngle(angle);\n        } else if (i === 3) {\n          arc.startAngle = angle;\n          arc.arc.startAngle(angle);\n        }\n      }\n\n      drawStrum(brushGroup, state, config, pc, events, arc, i - 2);\n    })\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\n\n  circles\n    .enter()\n    .append('circle')\n    .attr('id', 'arc-' + id)\n    .attr('class', 'arc');\n\n  circles\n    .attr('cx', d => d[0])\n    .attr('cy', d => d[1])\n    .attr('r', 5)\n    .style(\n      'opacity',\n      (d, i) => (activePoint !== undefined && i === activePoint ? 0.8 : 0)\n    )\n    .on('mouseover', function() {\n      select(this).style('opacity', 0.8);\n    })\n    .on('mouseout', function() {\n      select(this).style('opacity', 0);\n    })\n    .call(_drag);\n};\n\nconst onDrag = (brushGroup, state, config, pc, events) => () => {\n  const ev = event,\n    arc = state.arcs[state.arcs.active];\n\n  // Make sure that the point is within the bounds\n  arc.p2[0] = Math.min(\n    Math.max(arc.minX + 1, ev.x - config.margin.left),\n    arc.maxX\n  );\n  arc.p2[1] = Math.min(Math.max(arc.minY, ev.y - config.margin.top), arc.maxY);\n  arc.p3 = arc.p2.slice();\n  drawStrum(brushGroup, state, config, pc, events, arc, 1);\n};\n\nexport default onDrag;\n","import { mouse } from 'd3-selection';\nimport h from '../../util/height';\nimport { arc as d3Arc } from 'd3-shape';\nimport dimensionsForPoint from '../dimensionsForPoint';\n\n// First we need to determine between which two axes the arc was started.\n// This will determine the freedom of movement, because a arc can\n// logically only happen between two axes, so no movement outside these axes\n// should be allowed.\nconst onDragStart = (state, config, pc, xscale) => () => {\n  const p = mouse(state.strumRect.node());\n\n  p[0] = p[0] - config.margin.left;\n  p[1] = p[1] - config.margin.top;\n\n  const dims = dimensionsForPoint(config, pc, xscale, p);\n  const arc = {\n    p1: p,\n    dims: dims,\n    minX: xscale(dims.left),\n    maxX: xscale(dims.right),\n    minY: 0,\n    maxY: h(config),\n    startAngle: undefined,\n    endAngle: undefined,\n    arc: d3Arc().innerRadius(0),\n  };\n\n  // Make sure that the point is within the bounds\n  arc.p1[0] = Math.min(Math.max(arc.minX, p[0]), arc.maxX);\n  arc.p2 = arc.p1.slice();\n  arc.p3 = arc.p1.slice();\n\n  state.arcs[dims.i] = arc;\n  state.arcs.active = dims.i;\n};\n\nexport default onDragStart;\n","import onDragEnd from './onDragEnd';\nimport removeStrum from './removeStrum';\n\nconst brushReset = (brushGroup, state, config, pc, events) => () => {\n  const ids = Object.getOwnPropertyNames(state.arcs).filter(d => !isNaN(d));\n\n  ids.forEach(d => {\n    state.arcs.active = d;\n    removeStrum(state, pc);\n  });\n  onDragEnd(brushGroup, state, config, pc, events)();\n};\n\nexport default brushReset;\n","import { drag } from 'd3-drag';\nimport onDragEnd from './onDragEnd';\nimport onDrag from './onDrag';\nimport onDragStart from './onDragStart';\nimport removeStrum from './removeStrum';\nimport brushReset from './brushReset';\nimport w from '../../util/width';\nimport h from '../../util/height';\n\nimport hypothenuse from './util/hypothenuse';\nimport { keys } from 'd3-collection';\n\n// Checks if the first dimension is directly left of the second dimension.\nconst consecutive = dimensions => (first, second) => {\n  const keys = keys(dimensions);\n\n  return keys.some(\n    (d, i) =>\n      d === first ? i + i < keys.length && dimensions[i + 1] === second : false\n  );\n};\n\n// returns angles in [-PI/2, PI/2]\nconst angle = (p1, p2) => {\n  const a = p1[0] - p2[0],\n    b = p1[1] - p2[1],\n    c = hypothenuse(a, b);\n\n  return Math.asin(b / c);\n};\n\nconst endAngle = state => id => {\n  const arc = state.arcs[id];\n  if (arc === undefined) {\n    return undefined;\n  }\n  let sAngle = angle(arc.p1, arc.p2),\n    uAngle = -sAngle + Math.PI / 2;\n\n  if (arc.p1[0] > arc.p2[0]) {\n    uAngle = 2 * Math.PI - uAngle;\n  }\n\n  return uAngle;\n};\n\nconst startAngle = state => id => {\n  const arc = state.arcs[id];\n  if (arc === undefined) {\n    return undefined;\n  }\n\n  let sAngle = angle(arc.p1, arc.p3),\n    uAngle = -sAngle + Math.PI / 2;\n\n  if (arc.p1[0] > arc.p3[0]) {\n    uAngle = 2 * Math.PI - uAngle;\n  }\n\n  return uAngle;\n};\n\nconst length = state => id => {\n  const arc = state.arcs[id];\n\n  if (arc === undefined) {\n    return undefined;\n  }\n\n  const a = arc.p1[0] - arc.p2[0],\n    b = arc.p1[1] - arc.p2[1];\n\n  return hypothenuse(a, b);\n};\n\nconst install = (brushGroup, state, config, pc, events, xscale) => () => {\n  if (!pc.g()) {\n    pc.createAxes();\n  }\n\n  const _drag = drag();\n\n  // Map of current arcs. arcs are stored per segment of the PC. A segment,\n  // being the area between two axes. The left most area is indexed at 0.\n  state.arcs.active = undefined;\n  // Returns the width of the PC segment where currently a arc is being\n  // placed. NOTE: even though they are evenly spaced in our current\n  // implementation, we keep for when non-even spaced segments are supported as\n  // well.\n  state.arcs.width = id => {\n    const arc = state.arcs[id];\n    return arc === undefined ? undefined : arc.maxX - arc.minX;\n  };\n\n  // returns angles in [0, 2 * PI]\n  state.arcs.endAngle = endAngle(state);\n  state.arcs.startAngle = startAngle(state);\n  state.arcs.length = length(state);\n\n  pc.on('axesreorder.arcs', () => {\n    const ids = Object.getOwnPropertyNames(arcs).filter(d => !isNaN(d));\n\n    if (ids.length > 0) {\n      // We have some arcs, which might need to be removed.\n      ids.forEach(d => {\n        const dims = arcs[d].dims;\n        state.arcs.active = d;\n        // If the two dimensions of the current arc are not next to each other\n        // any more, than we'll need to remove the arc. Otherwise we keep it.\n        if (!consecutive(dims)(dims.left, dims.right)) {\n          removeStrum(state, pc);\n        }\n      });\n      onDragEnd(brushGroup, state, config, pc, events)();\n    }\n  });\n\n  // Add a new svg group in which we draw the arcs.\n  pc.selection\n    .select('svg')\n    .append('g')\n    .attr('id', 'arcs')\n    .attr(\n      'transform',\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\n    );\n\n  // Install the required brushReset function\n  pc.brushReset = brushReset(brushGroup, state, config, pc, events);\n\n  _drag\n    .on('start', onDragStart(state, config, pc, xscale))\n    .on('drag',onDrag(brushGroup, state, config, pc, events))\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\n\n  // NOTE: The styling needs to be done here and not in the css. This is because\n  //       for 1D brushing, the canvas layers should not listen to\n  //       pointer-events._.\n  state.strumRect = pc.selection\n    .select('svg')\n    .insert('rect', 'g#arcs')\n    .attr('id', 'arc-events')\n    .attr('x', config.margin.left)\n    .attr('y', config.margin.top)\n    .attr('width', w(config))\n    .attr('height', h(config) + 2)\n    .style('opacity', 0)\n    .call(_drag);\n};\n\nexport default install;\n","import uninstall from './uninstall';\nimport install from './install';\nimport selected from './selected';\n\nconst BrushState = {\n  arcs: {},\n  strumRect: {},\n};\n\nconst installAngularBrush = (brushGroup, config, pc, events, xscale) => {\n  const state = Object.assign({}, BrushState);\n\n  brushGroup.modes['angular'] = {\n    install: install(brushGroup, state, config, pc, events, xscale),\n    uninstall: uninstall(state, pc),\n    selected: selected(brushGroup, state, config),\n    brushState: () => state.arcs,\n  };\n};\n\nexport default installAngularBrush;\n","// calculate 2d intersection of line a->b with line c->d\n// points are objects with x and y properties\nconst intersection = (a, b, c, d) => {\n  return {\n    x:\n      ((a.x * b.y - a.y * b.x) * (c.x - d.x) -\n        (a.x - b.x) * (c.x * d.y - c.y * d.x)) /\n      ((a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x)),\n    y:\n      ((a.x * b.y - a.y * b.x) * (c.y - d.y) -\n        (a.y - b.y) * (c.x * d.y - c.y * d.x)) /\n      ((a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x)),\n  };\n};\n\nexport default intersection;\n","// Merges the canvases and SVG elements into one canvas element which is then passed into the callback\n// (so you can choose to save it to disk, etc.)\nconst mergeParcoords = pc => callback => {\n  // Retina display, etc.\n  const devicePixelRatio = window.devicePixelRatio || 1;\n\n  // Create a canvas element to store the merged canvases\n  const mergedCanvas = document.createElement('canvas');\n  mergedCanvas.width = pc.canvas.foreground.clientWidth * devicePixelRatio;\n  mergedCanvas.height =\n    (pc.canvas.foreground.clientHeight + 30) * devicePixelRatio;\n  mergedCanvas.style.width = mergedCanvas.width / devicePixelRatio + 'px';\n  mergedCanvas.style.height = mergedCanvas.height / devicePixelRatio + 'px';\n\n  // Give the canvas a white background\n  const context = mergedCanvas.getContext('2d');\n  context.fillStyle = '#ffffff';\n  context.fillRect(0, 0, mergedCanvas.width, mergedCanvas.height);\n\n  // Merge all the canvases\n  for (const key in pc.canvas) {\n    context.drawImage(\n      pc.canvas[key],\n      0,\n      24 * devicePixelRatio,\n      mergedCanvas.width,\n      mergedCanvas.height - 30 * devicePixelRatio\n    );\n  }\n\n  // Add SVG elements to canvas\n  const DOMURL = window.URL || window.webkitURL || window;\n  const serializer = new XMLSerializer();\n  const svgStr = serializer.serializeToString(\n    pc.selection.select('svg').node()\n  );\n\n  // Create a Data URI.\n  const src = 'data:image/svg+xml;base64,' + window.btoa(svgStr);\n  const img = new Image();\n  img.onload = () => {\n    context.drawImage(\n      img,\n      0,\n      0,\n      img.width * devicePixelRatio,\n      img.height * devicePixelRatio\n    );\n    if (typeof callback === 'function') {\n      callback(mergedCanvas);\n    }\n  };\n  img.src = src;\n};\n\nexport default mergeParcoords;\n","import { brushSelection } from 'd3-brush';\nimport { selectAll } from 'd3-selection';\n\nconst selected = config => {\n  let actives = [];\n  let extents = [];\n  let ranges = {};\n  //get brush selections from each node, convert to actual values\n  //invert order of values in array to comply with the parcoords architecture\n  if (config.brushes.length === 0) {\n    let nodes = selectAll('.brush').nodes();\n    for (let k = 0; k < nodes.length; k++) {\n      if (brushSelection(nodes[k]) !== null) {\n        actives.push(nodes[k].__data__);\n        let values = [];\n        let ranger = brushSelection(nodes[k]);\n        if (\n          typeof config.dimensions[nodes[k].__data__].yscale.domain()[0] ===\n          'number'\n        ) {\n          for (let i = 0; i < ranger.length; i++) {\n            if (\n              actives.includes(nodes[k].__data__) &&\n              config.flipAxes.includes(nodes[k].__data__)\n            ) {\n              values.push(\n                config.dimensions[nodes[k].__data__].yscale.invert(ranger[i])\n              );\n            } else if (config.dimensions[nodes[k].__data__].yscale() !== 1) {\n              values.unshift(\n                config.dimensions[nodes[k].__data__].yscale.invert(ranger[i])\n              );\n            }\n          }\n          extents.push(values);\n          for (let ii = 0; ii < extents.length; ii++) {\n            if (extents[ii].length === 0) {\n              extents[ii] = [1, 1];\n            }\n          }\n        } else {\n          ranges[nodes[k].__data__] = brushSelection(nodes[k]);\n          let dimRange = config.dimensions[nodes[k].__data__].yscale.range();\n          let dimDomain = config.dimensions[nodes[k].__data__].yscale.domain();\n          for (let j = 0; j < dimRange.length; j++) {\n            if (\n              dimRange[j] >= ranger[0] &&\n              dimRange[j] <= ranger[1] &&\n              actives.includes(nodes[k].__data__) &&\n              config.flipAxes.includes(nodes[k].__data__)\n            ) {\n              values.push(dimRange[j]);\n            } else if (dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) {\n              values.unshift(dimRange[j]);\n            }\n          }\n          extents.push(values);\n          for (let ii = 0; ii < extents.length; ii++) {\n            if (extents[ii].length === 0) {\n              extents[ii] = [1, 1];\n            }\n          }\n        }\n      }\n    }\n    // test if within range\n    const within = {\n      date: function(d, p, dimension) {\n        let category = d[p];\n        let categoryIndex = config.dimensions[p].yscale\n          .domain()\n          .indexOf(category);\n        let categoryRangeValue = config.dimensions[p].yscale.range()[\n          categoryIndex\n        ];\n        return (\n          categoryRangeValue >= ranges[p][0] &&\n          categoryRangeValue <= ranges[p][1]\n        );\n      },\n      number: function(d, p, dimension) {\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\n      },\n      string: function(d, p, dimension) {\n        let category = d[p];\n        let categoryIndex = config.dimensions[p].yscale\n          .domain()\n          .indexOf(category);\n        let categoryRangeValue = config.dimensions[p].yscale.range()[\n          categoryIndex\n        ];\n        return (\n          categoryRangeValue >= ranges[p][0] &&\n          categoryRangeValue <= ranges[p][1]\n        );\n      },\n    };\n    return config.data.filter(d =>\n      actives.every((p, dimension) =>\n        within[config.dimensions[p].type](d, p, dimension)\n      )\n    );\n  } else {\n    // need to get data from each brush instead of each axis\n    // first must find active axes by iterating through all brushes\n    // then go through similiar process as above.\n    let multiBrushData = [];\n    for (let idx = 0; idx < config.brushes.length; idx++) {\n      let brush = config.brushes[idx];\n      let values = [];\n      let ranger = brush.extent;\n      let actives = [brush.data];\n      if (\n        typeof config.dimensions[brush.data].yscale.domain()[0] === 'number'\n      ) {\n        for (let i = 0; i < ranger.length; i++) {\n          if (\n            actives.includes(brush.data) &&\n            config.flipAxes.includes(brush.data)\n          ) {\n            values.push(config.dimensions[brush.data].yscale.invert(ranger[i]));\n          } else if (config.dimensions[brush.data].yscale() !== 1) {\n            values.unshift(\n              config.dimensions[brush.data].yscale.invert(ranger[i])\n            );\n          }\n        }\n        extents.push(values);\n        for (let ii = 0; ii < extents.length; ii++) {\n          if (extents[ii].length === 0) {\n            extents[ii] = [1, 1];\n          }\n        }\n      } else {\n        ranges[brush.data] = brush.extent;\n        let dimRange = config.dimensions[brush.data].yscale.range();\n        let dimDomain = config.dimensions[brush.data].yscale.domain();\n        for (let j = 0; j < dimRange.length; j++) {\n          if (\n            dimRange[j] >= ranger[0] &&\n            dimRange[j] <= ranger[1] &&\n            actives.includes(brush.data) &&\n            config.flipAxes.includes(brush.data)\n          ) {\n            values.push(dimRange[j]);\n          } else if (dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) {\n            values.unshift(dimRange[j]);\n          }\n        }\n        extents.push(values);\n        for (let ii = 0; ii < extents.length; ii++) {\n          if (extents[ii].length === 0) {\n            extents[ii] = [1, 1];\n          }\n        }\n      }\n      let within = {\n        date: function(d, p, dimension) {\n          let category = d[p];\n          let categoryIndex = config.dimensions[p].yscale\n            .domain()\n            .indexOf(category);\n          let categoryRangeValue = config.dimensions[p].yscale.range()[\n            categoryIndex\n          ];\n          return (\n            categoryRangeValue >= ranges[p][0] &&\n            categoryRangeValue <= ranges[p][1]\n          );\n        },\n        number: function(d, p, dimension) {\n          return extents[idx][0] <= d[p] && d[p] <= extents[idx][1];\n        },\n        string: function(d, p, dimension) {\n          let category = d[p];\n          let categoryIndex = config.dimensions[p].yscale\n            .domain()\n            .indexOf(category);\n          let categoryRangeValue = config.dimensions[p].yscale.range()[\n            categoryIndex\n          ];\n          return (\n            categoryRangeValue >= ranges[p][0] &&\n            categoryRangeValue <= ranges[p][1]\n          );\n        },\n      };\n\n      // filter data, but instead of returning it now,\n      // put it into multiBrush data which is returned after\n      // all brushes are iterated through.\n      let filtered = config.data.filter(d =>\n        actives.every((p, dimension) =>\n          within[config.dimensions[p].type](d, p, dimension)\n        )\n      );\n      for (let z = 0; z < filtered.length; z++) {\n        multiBrushData.push(filtered[z]);\n      }\n      actives = [];\n      ranges = {};\n    }\n    return multiBrushData;\n  }\n};\n\nexport default selected;\n","const brushPredicate = (brushGroup, config, pc) => (predicate = null) => {\n  if (predicate === null) {\n    return brushGroup.predicate;\n  }\n\n  predicate = String(predicate).toUpperCase();\n  if (predicate !== 'AND' && predicate !== 'OR') {\n    throw new Error('Invalid predicate ' + predicate);\n  }\n\n  brushGroup.predicate = predicate;\n  config.brushed = brushGroup.currentMode().selected();\n  pc.renderBrushed();\n  return pc;\n};\n\nconst brushMode = (brushGroup, config, pc) => (mode = null) => {\n  if (mode === null) {\n    return brushGroup.mode;\n  }\n\n  if (pc.brushModes().indexOf(mode) === -1) {\n    throw new Error('pc.brushmode: Unsupported brush mode: ' + mode);\n  }\n\n  // Make sure that we don't trigger unnecessary events by checking if the mode\n  // actually changes.\n  if (mode !== brushGroup.mode) {\n    // When changing brush modes, the first thing we need to do is clearing any\n    // brushes from the current mode, if any.\n    if (brushGroup.mode !== 'None') {\n      pc.brushReset();\n    }\n\n    // Next, we need to 'uninstall' the current brushMode.\n    brushGroup.modes[brushGroup.mode].uninstall(pc);\n    // Finally, we can install the requested one.\n    brushGroup.mode = mode;\n    brushGroup.modes[brushGroup.mode].install();\n    if (mode === 'None') {\n      delete pc.brushPredicate;\n    } else {\n      pc.brushPredicate = brushPredicate(brushGroup, config, pc);\n    }\n  }\n\n  return pc;\n};\n\nexport default brushMode;\n","/**\n * dimension display names\n *\n * @param config\n * @param d\n * @returns {*}\n */\nconst dimensionLabels = config => d =>\n  config.dimensions[d].title ? config.dimensions[d].title : d;\n\nexport default dimensionLabels;\n","import { select } from 'd3-selection';\n\nconst flipAxisAndUpdatePCP = (config, pc, axis) =>\n  function(dimension) {\n    pc.flip(dimension);\n    pc.brushReset(dimension);\n    select(this.parentElement)\n      .transition()\n      .duration(config.animationTime)\n      .call(axis.scale(config.dimensions[dimension].yscale));\n    pc.render();\n  };\n\nexport default flipAxisAndUpdatePCP;\n","import { event } from 'd3-selection';\n\nconst rotateLabels = (config, pc) => {\n  if (!config.rotateLabels) return;\n\n  let delta = event.deltaY;\n  delta = delta < 0 ? -5 : delta;\n  delta = delta > 0 ? 5 : delta;\n\n  config.dimensionTitleRotation += delta;\n  pc.svg\n    .selectAll('text.label')\n    .attr(\n      'transform',\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\n    );\n  event.preventDefault();\n};\n\nexport default rotateLabels;\n","import { select } from 'd3-selection';\n\nimport dimensionLabels from '../util/dimensionLabels';\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\nimport rotateLabels from '../util/rotateLabels';\n\nconst updateAxes = (config, pc, position, axis, flags) => (\n  animationTime = null\n) => {\n  if (animationTime === null) {\n    animationTime = config.animationTime;\n  }\n\n  const g_data = pc.svg\n    .selectAll('.dimension')\n    .data(pc.getOrderedDimensionKeys());\n  // Enter\n  g_data\n    .enter()\n    .append('svg:g')\n    .attr('class', 'dimension')\n    .attr('transform', p => 'translate(' + position(p) + ')')\n    .style('opacity', 0)\n    .append('svg:g')\n    .attr('class', 'axis')\n    .attr('transform', 'translate(0,0)')\n    .each(function(d) {\n      const axisElement = select(this).call(\n        pc.applyAxisConfig(axis, config.dimensions[d])\n      );\n\n      axisElement\n        .selectAll('path')\n        .style('fill', 'none')\n        .style('stroke', '#222')\n        .style('shape-rendering', 'crispEdges');\n\n      axisElement\n        .selectAll('line')\n        .style('fill', 'none')\n        .style('stroke', '#222')\n        .style('shape-rendering', 'crispEdges');\n    })\n    .append('svg:text')\n    .attr({\n      'text-anchor': 'middle',\n      y: 0,\n      transform:\n        'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')',\n      x: 0,\n      class: 'label',\n    })\n    .text(dimensionLabels(config))\n    .on('dblclick', flipAxisAndUpdatePCP(config, pc, axis))\n    .on('wheel', rotateLabels(config, pc));\n\n  // Update\n  g_data.attr('opacity', 0);\n  g_data\n    .select('.axis')\n    .transition()\n    .duration(animationTime)\n    .each(function(d) {\n      select(this).call(pc.applyAxisConfig(axis, config.dimensions[d]));\n    });\n  g_data\n    .select('.label')\n    .transition()\n    .duration(animationTime)\n    .text(dimensionLabels(config))\n    .attr(\n      'transform',\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\n    );\n\n  // Exit\n  g_data.exit().remove();\n\n  g = pc.svg.selectAll('.dimension');\n  g\n    .transition()\n    .duration(animationTime)\n    .attr('transform', p => 'translate(' + position(p) + ')')\n    .style('opacity', 1);\n\n  pc.svg\n    .selectAll('.axis')\n    .transition()\n    .duration(animationTime)\n    .each(function(d) {\n      select(this).call(pc.applyAxisConfig(axis, config.dimensions[d]));\n    });\n\n  if (flags.brushable) pc.brushable();\n  if (flags.reorderable) pc.reorderable();\n  if (pc.brushMode() !== 'None') {\n    let mode = pc.brushMode();\n    pc.brushMode('None');\n    pc.brushMode(mode);\n  }\n  return this;\n};\n\nexport default updateAxes;\n","/** adjusts an axis' default range [h()+1, 1] if a NullValueSeparator is set */\nconst getRange = config => {\n  const h = config.height - config.margin.top - config.margin.bottom;\n\n  if (config.nullValueSeparator == 'bottom') {\n    return [\n      h +\n        1 -\n        config.nullValueSeparatorPadding.bottom -\n        config.nullValueSeparatorPadding.top,\n      1,\n    ];\n  } else if (config.nullValueSeparator == 'top') {\n    return [\n      h + 1,\n      1 +\n        config.nullValueSeparatorPadding.bottom +\n        config.nullValueSeparatorPadding.top,\n    ];\n  }\n  return [h + 1, 1];\n};\n\nexport default getRange;\n","import { scaleLinear, scaleOrdinal, scalePoint, scaleTime } from 'd3-scale';\nimport { keys } from 'd3-collection';\nimport { extent } from 'd3-array';\n\nimport getRange from '../util/getRange';\nimport w from '../util/width';\nimport h from '../util/height';\n\nconst autoscale = (config, pc, xscale, ctx) =>\n  function() {\n    // yscale\n    const defaultScales = {\n      date: function(k) {\n        let _extent = extent(config.data, d => (d[k] ? d[k].getTime() : null));\n        // special case if single value\n        if (_extent[0] === _extent[1]) {\n          return scalePoint()\n            .domain(_extent)\n            .range(getRange(config));\n        }\n        if (config.flipAxes.includes(k)) {\n          _extent = _extent.map(val => tempDate.unshift(val));\n        }\n        return scaleTime()\n          .domain(_extent)\n          .range(getRange(config));\n      },\n      number: function(k) {\n        let _extent = extent(config.data, d => +d[k]);\n        // special case if single value\n        if (_extent[0] === _extent[1]) {\n          return scalePoint()\n            .domain(_extent)\n            .range(getRange(config));\n        }\n        if (config.flipAxes.includes(k)) {\n          _extent = _extent.map(val => tempDate.unshift(val));\n        }\n        return scaleLinear()\n          .domain(_extent)\n          .range(getRange(config));\n      },\n      string: function(k) {\n        let counts = {},\n          domain = [];\n        // Let's get the count for each value so that we can sort the domain based\n        // on the number of items for each value.\n        config.data.map(p => {\n          if (p[k] === undefined && config.nullValueSeparator !== 'undefined') {\n            return null; // null values will be drawn beyond the horizontal null value separator!\n          }\n          if (counts[p[k]] === undefined) {\n            counts[p[k]] = 1;\n          } else {\n            counts[p[k]] = counts[p[k]] + 1;\n          }\n        });\n        if (config.flipAxes.includes(k)) {\n          domain = Object.getOwnPropertyNames(counts).sort();\n        } else {\n          let tempArr = Object.getOwnPropertyNames(counts).sort();\n          for (let i = 0; i < Object.getOwnPropertyNames(counts).length; i++) {\n            domain.push(tempArr.pop());\n          }\n        }\n\n        //need to create an ordinal scale for categorical data\n        let categoricalRange = [];\n        if (domain.length === 1) {\n          //edge case\n          domain = [' ', domain[0], ' '];\n        }\n        let addBy = getRange(config)[0] / (domain.length - 1);\n        for (let j = 0; j < domain.length; j++) {\n          if (categoricalRange.length === 0) {\n            categoricalRange.push(0);\n            continue;\n          }\n          categoricalRange.push(categoricalRange[j - 1] + addBy);\n        }\n        return scaleOrdinal()\n          .domain(domain)\n          .range(categoricalRange);\n      },\n    };\n    keys(config.dimensions).forEach(function(k) {\n      config.dimensions[k].yscale = defaultScales[config.dimensions[k].type](k);\n    });\n\n    // xscale\n    xscale.range([0, w(config)], 1);\n    // Retina display, etc.\n    const devicePixelRatio = window.devicePixelRatio || 1;\n\n    // canvas sizes\n    pc.selection\n      .selectAll('canvas')\n      .style('margin-top', config.margin.top + 'px')\n      .style('margin-left', config.margin.left + 'px')\n      .style('width', w(config) + 2 + 'px')\n      .style('height', h(config) + 2 + 'px')\n      .attr('width', (w(config) + 2) * devicePixelRatio)\n      .attr('height', (h(config) + 2) * devicePixelRatio);\n    // default styles, needs to be set when canvas width changes\n    ctx.foreground.strokeStyle = config.color;\n    ctx.foreground.lineWidth = 1.4;\n    ctx.foreground.globalCompositeOperation = config.composite;\n    ctx.foreground.globalAlpha = config.alpha;\n    ctx.foreground.scale(devicePixelRatio, devicePixelRatio);\n    ctx.brushed.strokeStyle = config.brushedColor;\n    ctx.brushed.lineWidth = 1.4;\n    ctx.brushed.globalCompositeOperation = config.composite;\n    ctx.brushed.globalAlpha = config.alpha;\n    ctx.brushed.scale(devicePixelRatio, devicePixelRatio);\n    ctx.highlight.lineWidth = 3;\n    ctx.highlight.scale(devicePixelRatio, devicePixelRatio);\n\n    return this;\n  };\n\nexport default autoscale;\n","import { brushSelection, brushY } from 'd3-brush';\nimport { event, select } from 'd3-selection';\n\nconst brushable = (config, pc, flags) =>\n  function() {\n    if (!pc.g()) {\n      pc.createAxes();\n    }\n\n    const g = pc.g();\n\n    // Add and store a brush for each axis.\n    g\n      .append('svg:g')\n      .attr('class', 'brush')\n      .each(function(d) {\n        if (config.dimensions[d] !== undefined) {\n          config.dimensions[d]['brush'] = brushY(select(this)).extent([\n            [-15, 0],\n            [15, config.dimensions[d].yscale.range()[0]],\n          ]);\n          select(this).call(\n            config.dimensions[d]['brush']\n              .on('start', function() {\n                if (event.sourceEvent !== null && !event.sourceEvent.ctrlKey) {\n                  pc.brushReset();\n                }\n              })\n              .on('brush', function() {\n                if (!event.sourceEvent.ctrlKey) {\n                  pc.brush();\n                }\n              })\n              .on('end', function() {\n                // save brush selection is ctrl key is held\n                // store important brush information and\n                // the html element of the selection,\n                // to make a dummy selection element\n                if (event.sourceEvent.ctrlKey) {\n                  let html = select(this)\n                    .select('.selection')\n                    .nodes()[0].outerHTML;\n                  html = html.replace(\n                    'class=\"selection\"',\n                    'class=\"selection dummy' +\n                      ' selection-' +\n                      config.brushes.length +\n                      '\"'\n                  );\n                  let dat = select(this).nodes()[0].__data__;\n                  let brush = {\n                    id: config.brushes.length,\n                    extent: brushSelection(this),\n                    html: html,\n                    data: dat,\n                  };\n                  config.brushes.push(brush);\n                  select(select(this).nodes()[0].parentNode)\n                    .select('.axis')\n                    .nodes()[0].outerHTML += html;\n                  pc.brush();\n                  config.dimensions[d].brush.move(select(this, null));\n                  select(this)\n                    .select('.selection')\n                    .attr('style', 'display:none');\n                  pc.brushable();\n                } else {\n                  pc.brush();\n                }\n              })\n          );\n          select(this).on('dblclick', function() {\n            pc.brushReset(d);\n          });\n        }\n      });\n\n    flags.brushable = true;\n    return this;\n  };\n\nexport default brushable;\n","import { keys } from 'd3-collection';\nimport { extent } from 'd3-array';\n\nconst commonScale = (config, pc) =>\n  function(global, type) {\n    const t = type || 'number';\n    if (typeof global === 'undefined') {\n      global = true;\n    }\n\n    // try to autodetect dimensions and create scales\n    if (!keys(config.dimensions).length) {\n      pc.detectDimensions();\n    }\n    pc.autoscale();\n\n    // scales of the same type\n    const scales = keys(config.dimensions).filter(\n      p => config.dimensions[p].type == t\n    );\n\n    if (global) {\n      let _extent = extent(\n        scales\n          .map(d => config.dimensions[d].yscale.domain())\n          .reduce((cur, acc) => cur.concat(acc))\n      );\n\n      scales.forEach(d => {\n        config.dimensions[d].yscale.domain(_extent);\n      });\n    } else {\n      scales.forEach(d => {\n        config.dimensions[d].yscale.domain(extent(config.data, d => +d[k]));\n      });\n    }\n\n    // update centroids\n    if (config.bundleDimension !== null) {\n      pc.bundleDimension(config.bundleDimension);\n    }\n\n    return this;\n  };\n\nexport default commonScale;\n","import { keys } from 'd3-collection';\n\nconst computeRealCentroids = (dimensions, position) => row =>\n  keys(dimensions).map(d => {\n    const x = position(d);\n    const y = dimensions[d].yscale(row[d]);\n    return [x, y];\n  });\n\nexport default computeRealCentroids;\n","import { keys } from 'd3-collection';\n\nconst applyDimensionDefaults = (config, pc) =>\n  function(dims) {\n    const types = pc.detectDimensionTypes(config.data);\n    dims = dims ? dims : keys(types);\n\n    return dims.reduce((acc, cur, i) => {\n      const k = config.dimensions[cur] ? config.dimensions[cur] : {};\n\n      acc[cur] = {\n        ...k,\n        orient: k.orient ? k.orient : 'left',\n        ticks: k.ticks != null ? k.ticks : 5,\n        innerTickSize: k.innerTickSize != null ? k.innerTickSize : 6,\n        outerTickSize: k.outerTickSize != null ? k.outerTickSize : 0,\n        tickPadding: k.tickPadding != null ? k.tickPadding : 3,\n        type: k.type ? k.type : types[cur],\n        index: k.index != null ? k.index : i,\n      };\n\n      return acc;\n    }, {});\n  };\n\nexport default applyDimensionDefaults;\n","import { select } from 'd3-selection';\n\nimport dimensionLabels from '../util/dimensionLabels';\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\nimport rotateLabels from '../util/rotateLabels';\n\n/**\n * Create static SVG axes with dimension names, ticks, and labels.\n *\n * @param config\n * @param pc\n * @param xscale\n * @param flags\n * @param axis\n * @returns {Function}\n */\nconst createAxes = (config, pc, xscale, flags, axis) =>\n  function() {\n    if (pc.g() !== undefined) {\n      pc.removeAxes();\n    }\n    // Add a group element for each dimension.\n    pc._g = pc.svg\n      .selectAll('.dimension')\n      .data(pc.getOrderedDimensionKeys(), function(d) {\n        return d;\n      })\n      .enter()\n      .append('svg:g')\n      .attr('class', 'dimension')\n      .attr('transform', function(d) {\n        return 'translate(' + xscale(d) + ')';\n      });\n    // Add an axis and title.\n    pc._g\n      .append('svg:g')\n      .attr('class', 'axis')\n      .attr('transform', 'translate(0,0)')\n      .each(function(d) {\n        let axisElement = select(this).call(\n          pc.applyAxisConfig(axis, config.dimensions[d])\n        );\n\n        axisElement\n          .selectAll('path')\n          .style('fill', 'none')\n          .style('stroke', '#222')\n          .style('shape-rendering', 'crispEdges');\n\n        axisElement\n          .selectAll('line')\n          .style('fill', 'none')\n          .style('stroke', '#222')\n          .style('shape-rendering', 'crispEdges');\n      })\n\n      .append('svg:text')\n      .attr('text-anchor', 'middle')\n      .attr('y', 0)\n      .attr(\n        'transform',\n        'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\n      )\n      .attr('x', 0)\n      .attr('class', 'label')\n      .text(dimensionLabels(config))\n      .on('dblclick', flipAxisAndUpdatePCP(config, pc, axis))\n      .on('wheel', rotateLabels(config, pc));\n\n    if (config.nullValueSeparator == 'top') {\n      pc.svg\n        .append('line')\n        .attr('x1', 0)\n        .attr('y1', 1 + config.nullValueSeparatorPadding.top)\n        .attr('x2', w())\n        .attr('y2', 1 + config.nullValueSeparatorPadding.top)\n        .attr('stroke-width', 1)\n        .attr('stroke', '#777')\n        .attr('fill', 'none')\n        .attr('shape-rendering', 'crispEdges');\n    } else if (config.nullValueSeparator == 'bottom') {\n      pc.svg\n        .append('line')\n        .attr('x1', 0)\n        .attr('y1', h() + 1 - config.nullValueSeparatorPadding.bottom)\n        .attr('x2', w())\n        .attr('y2', h() + 1 - config.nullValueSeparatorPadding.bottom)\n        .attr('stroke-width', 1)\n        .attr('stroke', '#777')\n        .attr('fill', 'none')\n        .attr('shape-rendering', 'crispEdges');\n    }\n\n    flags.axes = true;\n    return this;\n  };\n\nexport default createAxes;\n","import { entries } from 'd3-collection';\nimport { min } from 'd3-array';\n\n//draw dots with radius r on the axis line where data intersects\nconst axisDots = (config, pc, position) => _r => {\n  const r = _r || 0.1;\n  const ctx = pc.ctx.marks;\n  const startAngle = 0;\n  const endAngle = 2 * Math.PI;\n  ctx.globalAlpha = min([1 / Math.pow(config.data.length, 1 / 2), 1]);\n  config.data.forEach(d => {\n    entries(config.dimensions).forEach((p, i) => {\n      ctx.beginPath();\n      ctx.arc(\n        position(p),\n        config.dimensions[p.key].yscale(d[p]),\n        r,\n        startAngle,\n        endAngle\n      );\n      ctx.stroke();\n      ctx.fill();\n    });\n  });\n  return this;\n};\n\nexport default axisDots;\n","import { axisBottom, axisLeft, axisRight, axisTop } from 'd3-axis';\n\nconst applyAxisConfig = (axis, dimension) => {\n  let axisCfg;\n\n  switch (dimension.orient) {\n    case 'left':\n      axisCfg = axisLeft(dimension.yscale);\n      break;\n    case 'right':\n      axisCfg = axisRight(dimension.yscale);\n      break;\n    case 'top':\n      axisCfg = axisTop(dimension.yscale);\n      break;\n    case 'bottom':\n      axisCfg = axisBottom(dimension.yscale);\n      break;\n    default:\n      axisCfg = axisLeft(dimension.yscale);\n      break;\n  }\n\n  axisCfg\n    .ticks(dimension.ticks)\n    .tickValues(dimension.tickValues)\n    .tickSizeInner(dimension.innerTickSize)\n    .tickSizeOuter(dimension.outerTickSize)\n    .tickPadding(dimension.tickPadding)\n    .tickFormat(dimension.tickFormat);\n\n  return axisCfg;\n};\n\nexport default applyAxisConfig;\n","import { drag } from 'd3-drag';\nimport { event, select } from 'd3-selection';\n\nimport w from '../util/width';\n\n// Jason Davies, http://bl.ocks.org/1341281\nconst reorderable = (config, pc, xscale, position, dragging, flags) =>\n  function() {\n    if (pc.g() === undefined) pc.createAxes();\n    const g = pc.g();\n\n    g.style('cursor', 'move').call(\n      drag()\n        .on('start', function(d) {\n          dragging[d] = this.__origin__ = xscale(d);\n        })\n        .on('drag', function(d) {\n          dragging[d] = Math.min(\n            w(__),\n            Math.max(0, (this.__origin__ += event.dx))\n          );\n          pc.sortDimensions();\n          xscale.domain(pc.getOrderedDimensionKeys());\n          pc.render();\n          g.attr('transform', d => 'translate(' + position(d) + ')');\n        })\n        .on('end', function(d) {\n          delete this.__origin__;\n          delete dragging[d];\n          select(this)\n            .transition()\n            .attr('transform', 'translate(' + xscale(d) + ')');\n          pc.render();\n        })\n    );\n    flags.reorderable = true;\n    return this;\n  };\n\nexport default reorderable;\n","// rescale for height, width and margins\n// TODO currently assumes chart is brushable, and destroys old brushes\nconst resize = (config, pc, flags, events) => {\n  return function() {\n    // selection size\n    pc.selection\n      .select('svg')\n      .attr('width', config.width)\n      .attr('height', config.height);\n    pc.svg.attr(\n      'transform',\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\n    );\n\n    // FIXME: the current brush state should pass through\n    if (flags.brushable) pc.brushReset();\n\n    // scales\n    pc.autoscale();\n\n    // axes, destroys old brushes.\n    if (pc.g()) pc.createAxes();\n    if (flags.brushable) pc.brushable();\n    if (flags.reorderable) pc.reorderable();\n\n    events.call('resize', this, {\n      width: config.width,\n      height: config.height,\n      margin: config.margin,\n    });\n\n    return this;\n  };\n};\n\nexport default resize;\n","// Reorder dimensions, such that the highest value (visually) is on the left and\n// the lowest on the right. Visual values are determined by the data values in\n// the given row.\nconst reorder = (config, pc, xscale) => rowdata => {\n  const firstDim = pc.getOrderedDimensionKeys()[0];\n\n  pc.sortDimensionsByRowData(rowdata);\n  // NOTE: this is relatively cheap given that:\n  // number of dimensions < number of data items\n  // Thus we check equality of order to prevent rerendering when this is the case.\n  const reordered = firstDim !== pc.getOrderedDimensionKeys()[0];\n\n  if (reordered) {\n    xscale.domain(pc.getOrderedDimensionKeys());\n    const highlighted = config.highlighted.slice(0);\n    pc.unhighlight();\n\n    const g = pc.g();\n    g\n      .transition()\n      .duration(1500)\n      .attr('transform', d => 'translate(' + xscale(d) + ')');\n    pc.render();\n\n    // pc.highlight() does not check whether highlighted is length zero, so we do that here.\n    if (highlighted.length !== 0) {\n      pc.highlight(highlighted);\n    }\n  }\n};\n\nexport default reorder;\n","import { keys } from 'd3-collection';\n\nconst sortDimensions = (config, position) => () => {\n  const copy = Object.assign({}, config.dimensions);\n  const positionSortedKeys = keys(config.dimensions).sort(\n    (a, b) => (position(a) - position(b) === 0 ? 1 : position(a) - position(b))\n  );\n  config.dimensions = {};\n  positionSortedKeys.forEach((p, i) => {\n    config.dimensions[p] = copy[p];\n    config.dimensions[p].index = i;\n  });\n};\n\nexport default sortDimensions;\n","import { keys } from 'd3-collection';\n\nconst sortDimensionsByRowData = config => rowdata => {\n  const copy = Object.assign({}, config.dimensions);\n  const positionSortedKeys = keys(config.dimensions).sort((a, b) => {\n    const pixelDifference =\n      config.dimensions[a].yscale(rowdata[a]) -\n      config.dimensions[b].yscale(rowdata[b]);\n\n    // Array.sort is not necessarily stable, this means that if pixelDifference is zero\n    // the ordering of dimensions might change unexpectedly. This is solved by sorting on\n    // variable name in that case.\n    return pixelDifference === 0 ? a.localeCompare(b) : pixelDifference;\n  });\n  config.dimensions = {};\n  positionSortedKeys.forEach((p, i) => {\n    config.dimensions[p] = copy[p];\n    config.dimensions[p].index = i;\n  });\n};\n\nexport default sortDimensionsByRowData;\n","const isBrushed = (config, brushGroup) => {\n  if (config.brushed && config.brushed.length !== config.data.length)\n    return true;\n\n  const object = brushGroup.currentMode().brushState();\n\n  for (let key in object) {\n    if (object.hasOwnProperty(key)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport default isBrushed;\n","import h from '../util/height';\nimport w from '../util/width';\nimport isBrushed from '../util/isBrushed';\n\nconst clear = (config, pc, ctx, brushGroup) =>\n  function(layer) {\n    ctx[layer].clearRect(0, 0, w(config) + 2, h(config) + 2);\n\n    // This will make sure that the foreground items are transparent\n    // without the need for changing the opacity style of the foreground canvas\n    // as this would stop the css styling from working\n    if (layer === 'brushed' && isBrushed(config, brushGroup)) {\n      ctx.brushed.fillStyle = pc.selection.style('background-color');\n      ctx.brushed.globalAlpha = 1 - config.alphaOnBrushed;\n      ctx.brushed.fillRect(0, 0, w(config) + 2, h(config) + 2);\n      ctx.brushed.globalAlpha = config.alpha;\n    }\n    return this;\n  };\n\nexport default clear;\n","import { keys } from 'd3-collection';\n\nconst computeCentroids = (config, position, row) => {\n  const centroids = [];\n\n  const p = keys(config.dimensions);\n  const cols = p.length;\n  const a = 0.5; // center between axes\n  for (let i = 0; i < cols; ++i) {\n    // centroids on 'real' axes\n    const x = position(p[i]);\n    const y = config.dimensions[p[i]].yscale(row[p[i]]);\n    centroids.push($V([x, y]));\n\n    // centroids on 'virtual' axes\n    if (i < cols - 1) {\n      const cx = x + a * (position(p[i + 1]) - x);\n      let cy = y + a * (config.dimensions[p[i + 1]].yscale(row[p[i + 1]]) - y);\n      if (config.bundleDimension !== null) {\n        const leftCentroid = config.clusterCentroids\n          .get(\n            config.dimensions[config.bundleDimension].yscale(\n              row[config.bundleDimension]\n            )\n          )\n          .get(p[i]);\n        const rightCentroid = config.clusterCentroids\n          .get(\n            config.dimensions[config.bundleDimension].yscale(\n              row[config.bundleDimension]\n            )\n          )\n          .get(p[i + 1]);\n        let centroid = 0.5 * (leftCentroid + rightCentroid);\n        cy = centroid + (1 - config.bundlingStrength) * (cy - centroid);\n      }\n      centroids.push($V([cx, cy]));\n    }\n  }\n\n  return centroids;\n};\n\nexport default computeCentroids;\n","const computeControlPoints = (smoothness, centroids) => {\n  const cols = centroids.length;\n  const a = smoothness;\n  const cps = [];\n\n  cps.push(centroids[0]);\n  cps.push(\n    $V([\n      centroids[0].e(1) + a * 2 * (centroids[1].e(1) - centroids[0].e(1)),\n      centroids[0].e(2),\n    ])\n  );\n  for (let col = 1; col < cols - 1; ++col) {\n    let mid = centroids[col];\n    let left = centroids[col - 1];\n    let right = centroids[col + 1];\n\n    let diff = left.subtract(right);\n    cps.push(mid.add(diff.x(a)));\n    cps.push(mid);\n    cps.push(mid.subtract(diff.x(a)));\n  }\n  cps.push(\n    $V([\n      centroids[cols - 1].e(1) +\n        a * 2 * (centroids[cols - 2].e(1) - centroids[cols - 1].e(1)),\n      centroids[cols - 1].e(2),\n    ])\n  );\n  cps.push(centroids[cols - 1]);\n\n  return cps;\n};\n\nexport default computeControlPoints;\n","// draw single cubic bezier curve\nimport { entries } from 'd3-collection';\nimport computeCentroids from './computeCentroids';\nimport computeControlPoints from './computeControlPoints';\nimport h from './height';\n\nconst singleCurve = (config, position, d, ctx) => {\n  const centroids = computeCentroids(config, position, d);\n  const cps = computeControlPoints(config.smoothness, centroids);\n\n  ctx.moveTo(cps[0].e(1), cps[0].e(2));\n\n  for (let i = 1; i < cps.length; i += 3) {\n    if (config.showControlPoints) {\n      for (let j = 0; j < 3; j++) {\n        ctx.fillRect(cps[i + j].e(1), cps[i + j].e(2), 2, 2);\n      }\n    }\n    ctx.bezierCurveTo(\n      cps[i].e(1),\n      cps[i].e(2),\n      cps[i + 1].e(1),\n      cps[i + 1].e(2),\n      cps[i + 2].e(1),\n      cps[i + 2].e(2)\n    );\n  }\n};\n\n// returns the y-position just beyond the separating null value line\nconst getNullPosition = config => {\n  if (config.nullValueSeparator == 'bottom') {\n    return h(config) + 1;\n  } else if (config.nullValueSeparator == 'top') {\n    return 1;\n  } else {\n    console.log(\n      \"A value is NULL, but nullValueSeparator is not set; set it to 'bottom' or 'top'.\"\n    );\n  }\n  return h(config) + 1;\n};\n\nconst singlePath = (config, position, d, ctx) => {\n  entries(config.dimensions).forEach((p, i) => {\n    //p isn't really p\n    if (i == 0) {\n      ctx.moveTo(\n        position(p.key),\n        typeof d[p.key] == 'undefined'\n          ? getNullPosition(config)\n          : config.dimensions[p.key].yscale(d[p.key])\n      );\n    } else {\n      ctx.lineTo(\n        position(p.key),\n        typeof d[p.key] == 'undefined'\n          ? getNullPosition(config)\n          : config.dimensions[p.key].yscale(d[p.key])\n      );\n    }\n  });\n};\n\n// draw single polyline\nconst colorPath = (config, position, d, ctx) => {\n  ctx.beginPath();\n  if (\n    (config.bundleDimension !== null && config.bundlingStrength > 0) ||\n    config.smoothness > 0\n  ) {\n    singleCurve(config, position, d, ctx);\n  } else {\n    singlePath(config, position, d, ctx);\n  }\n  ctx.stroke();\n};\n\nexport default colorPath;\n","const _functor = v => (typeof v === 'function' ? v : () => v);\n\nexport default _functor;\n","import { keys } from 'd3-collection';\n\nimport isBrushed from '../util/isBrushed';\nimport colorPath from '../util/colorPath';\nimport functor from '../util/functor';\n\nconst pathBrushed = (config, ctx, position) => (d, i) => {\n  if (config.brushedColor !== null) {\n    ctx.brushed.strokeStyle = functor(config.brushedColor)(d, i);\n  } else {\n    ctx.brushed.strokeStyle = functor(config.color)(d, i);\n  }\n  return colorPath(config, position, d, ctx.brushed);\n};\n\nconst renderBrushedDefault = (config, ctx, position, pc, brushGroup) => () => {\n  pc.clear('brushed');\n\n  if (isBrushed(config, brushGroup)) {\n    config.brushed.forEach(pathBrushed(config, ctx, position));\n  }\n};\n\nconst renderBrushedQueue = (config, brushGroup, brushedQueue) => () => {\n  if (isBrushed(config, brushGroup)) {\n    brushedQueue(config.brushed);\n  } else {\n    brushedQueue([]); // This is needed to clear the currently brushed items\n  }\n};\n\nconst renderBrushed = (config, pc, events) =>\n  function() {\n    if (!keys(config.dimensions).length) pc.detectDimensions();\n\n    pc.renderBrushed[config.mode]();\n    events.call('render', this);\n    return this;\n  };\n\nexport { pathBrushed, renderBrushed, renderBrushedDefault, renderBrushedQueue };\n","import { select, selectAll } from 'd3-selection';\n\nconst brushReset = config =>\n  function(dimension) {\n    const brushesToKeep = [];\n    for (let j = 0; j < config.brushes.length; j++) {\n      if (config.brushes[j].data !== dimension) {\n        brushesToKeep.push(config.brushes[j]);\n      }\n    }\n\n    config.brushes = brushesToKeep;\n    config.brushed = false;\n\n    if (pc.g() !== undefined) {\n      const nodes = selectAll('.brush').nodes();\n      for (let i = 0; i < nodes.length; i++) {\n        if (nodes[i].__data__ === dimension) {\n          // remove all dummy brushes for this axis or the real brush\n          select(select(nodes[i]).nodes()[0].parentNode)\n            .selectAll('.dummy')\n            .remove();\n          config.dimensions[dimension].brush.move(select(nodes[i], null));\n        }\n      }\n    }\n\n    return this;\n  };\n\nexport default brushReset;\n","// a better \"typeof\" from this post: http://stackoverflow.com/questions/7390426/better-way-to-get-type-of-a-javascript-variable\nconst toType = v => {\n  return {}.toString\n    .call(v)\n    .match(/\\s([a-zA-Z]+)/)[1]\n    .toLowerCase();\n};\n\nexport default toType;\n","import { keys } from 'd3-collection';\n\n// this descriptive text should live with other introspective methods\nconst toString = config => () => {\n  return (\n    'Parallel Coordinates: ' +\n    keys(config.dimensions).length +\n    ' dimensions (' +\n    keys(config.data[0]).length +\n    ' total) , ' +\n    config.data.length +\n    ' rows'\n  );\n};\n\nexport default toString;\n","// pairs of adjacent dimensions\nconst adjacentPairs = arr => {\n  let ret = [];\n  for (let i = 0; i < arr.length - 1; i++) {\n    ret.push([arr[i], arr[i + 1]]);\n  }\n  return ret;\n};\n\nexport default adjacentPairs;\n","import { selectAll } from 'd3-selection';\n\nimport colorPath from '../util/colorPath';\nimport functor from '../util/functor';\n\nconst pathHighlight = (config, ctx, position) => (d, i) => {\n  ctx.highlight.strokeStyle = functor(config.color)(d, i);\n  return colorPath(config, position, d, ctx.highlight);\n};\n\n// highlight an array of data\nconst highlight = (config, pc, canvas, events, ctx, position) =>\n  function(data = null) {\n    if (data === null) {\n      return config.highlighted;\n    }\n\n    config.highlighted = data;\n    pc.clear('highlight');\n    selectAll([canvas.foreground, canvas.brushed]).classed('faded', true);\n    data.forEach(pathHighlight(config, ctx, position));\n    events.call('highlight', this, data);\n    return this;\n  };\n\nexport default highlight;\n","import { selectAll } from 'd3-selection';\n\n// clear highlighting\nconst unhighlight = (config, pc, canvas) =>\n  function() {\n    config.highlighted = [];\n    pc.clear('highlight');\n    selectAll([canvas.foreground, canvas.brushed]).classed('faded', false);\n    return this;\n  };\n\nexport default unhighlight;\n","const removeAxes = pc =>\n  function() {\n    pc._g.remove();\n\n    delete pc._g;\n    return this;\n  };\n\nexport default removeAxes;\n","import { keys } from 'd3-collection';\n\n/**\n * Renders the polylines.\n * If no dimensions have been specified, it will attempt to detect quantitative\n * dimensions based on the first data entry. If scales haven't been set, it will\n * autoscale based on the extent for each dimension.\n *\n * @param config\n * @param pc\n * @param events\n * @returns {Function}\n */\nconst render = (config, pc, events) =>\n  function() {\n    // try to autodetect dimensions and create scales\n    if (!keys(config.dimensions).length) {\n      pc.detectDimensions();\n    }\n    pc.autoscale();\n\n    pc.render[config.mode]();\n\n    events.call('render', this);\n    return this;\n  };\n\nexport default render;\n","import colorPath from '../util/colorPath';\nimport functor from '../util/functor';\n\nconst pathForeground = (config, ctx, position) => (d, i) => {\n  ctx.foreground.strokeStyle = functor(config.color)(d, i);\n  return colorPath(config, position, d, ctx.foreground);\n};\n\nconst renderDefault = (config, pc, ctx, position) => () => {\n  pc.clear('foreground');\n  pc.clear('highlight');\n\n  pc.renderBrushed.default();\n\n  config.data.forEach(pathForeground(config, ctx, position));\n};\n\nconst renderDefaultQueue = (config, pc, foregroundQueue) => () => {\n  pc.renderBrushed.queue();\n  foregroundQueue(config.data);\n};\n\nexport default renderDefault;\n\nexport { pathForeground, renderDefaultQueue };\n","import toType from './toType';\n\n// try to coerce to number before returning type\nconst toTypeCoerceNumbers = v =>\n  parseFloat(v) == v && v != null ? 'number' : toType(v);\n\nexport default toTypeCoerceNumbers;\n","import { keys } from 'd3-collection';\n\nimport toTypeCoerceNumbers from './toTypeCoerceNumbers';\n\n// attempt to determine types of each dimension based on first row of data\nconst detectDimensionTypes = data =>\n  keys(data[0]).reduce((acc, cur) => {\n    const key = isNaN(Number(cur)) ? cur : parseInt(cur);\n    acc[key] = toTypeCoerceNumbers(data[0][cur]);\n\n    return acc;\n  }, {});\n\nexport default detectDimensionTypes;\n","import { ascending } from 'd3-array';\nimport { keys } from 'd3-collection';\n\nconst getOrderedDimensionKeys = config => () =>\n  keys(config.dimensions).sort((x, y) =>\n    ascending(config.dimensions[x].index, config.dimensions[y].index)\n  );\n\nexport default getOrderedDimensionKeys;\n","const interactive = flags =>\n  function() {\n    flags.interactive = true;\n    return this;\n  };\n\nexport default interactive;\n","const shadows = (flags, pc) =>\n  function() {\n    flags.shadows = true;\n    pc.alphaOnBrushed(0.1);\n    pc.render();\n    return this;\n  };\n\nexport default shadows;\n","import { select } from 'd3-selection';\n\n/**\n * Setup a new parallel coordinates chart.\n *\n * @param config\n * @param canvas\n * @param ctx\n * @returns {pc} a parcoords closure\n */\nconst init = (config, canvas, ctx) => {\n  /**\n   * Create the chart within a container. The selector can also be a d3 selection.\n   *\n   * @param selection a d3 selection\n   * @returns {pc} instance for chained api\n   */\n  const pc = function(selection) {\n    selection = pc.selection = select(selection);\n\n    config.width = selection.node().clientWidth;\n    config.height = selection.node().clientHeight;\n    // canvas data layers\n    ['marks', 'foreground', 'brushed', 'highlight'].forEach(layer => {\n      canvas[layer] = selection\n        .append('canvas')\n        .attr('class', layer)\n        .node();\n      ctx[layer] = canvas[layer].getContext('2d');\n    });\n\n    // svg tick and brush layers\n    pc.svg = selection\n      .append('svg')\n      .attr('width', config.width)\n      .attr('height', config.height)\n      .style('font', '14px sans-serif')\n      .style('position', 'absolute')\n\n      .append('svg:g')\n      .attr(\n        'transform',\n        'translate(' + config.margin.left + ',' + config.margin.top + ')'\n      );\n    // for chained api\n    return pc;\n  };\n\n  // for partial-application style programming\n  return pc;\n};\n\nexport default init;\n","const flip = config =>\n  function(d) {\n    //__.dimensions[d].yscale.domain().reverse();                               // does not work\n    config.dimensions[d].yscale.domain(\n      config.dimensions[d].yscale.domain().reverse()\n    ); // works\n\n    return this;\n  };\n\nexport default flip;\n","const detectDimensions = pc =>\n  function() {\n    pc.dimensions(pc.applyDimensionDefaults());\n    return this;\n  };\n\nexport default detectDimensions;\n","const scale = config =>\n  function(d, domain) {\n    config.dimensions[d].yscale.domain(domain);\n\n    return this;\n  };\n\nexport default scale;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","const DefaultConfig = {\n  data: [],\n  highlighted: [],\n  dimensions: {},\n  dimensionTitleRotation: 0,\n  brushes: [],\n  brushed: false,\n  brushedColor: null,\n  alphaOnBrushed: 0.0,\n  mode: 'default',\n  rate: 20,\n  width: 600,\n  height: 300,\n  margin: { top: 24, right: 20, bottom: 12, left: 20 },\n  nullValueSeparator: 'undefined', // set to \"top\" or \"bottom\"\n  nullValueSeparatorPadding: { top: 8, right: 0, bottom: 8, left: 0 },\n  color: '#069',\n  composite: 'source-over',\n  alpha: 0.7,\n  bundlingStrength: 0.5,\n  bundleDimension: null,\n  smoothness: 0.0,\n  showControlPoints: false,\n  hideAxis: [],\n  flipAxes: [],\n  animationTime: 1100, // How long it takes to flip the axis when you double click\n  rotateLabels: false,\n};\n\nexport default DefaultConfig;\n","import { entries, keys } from 'd3-collection';\nimport { axisLeft } from 'd3-axis';\nimport { dispatch } from 'd3-dispatch';\nimport { scalePoint } from 'd3-scale';\nimport isFunction from 'lodash-es/isFunction';\n\nimport DefaultConfig from './defaultConfig';\n\nconst initState = userConfig => {\n  const config = Object.assign({}, DefaultConfig, userConfig);\n\n  if (userConfig && userConfig.dimensionTitles) {\n    console.warn(\n      'dimensionTitles passed in userConfig is deprecated. Add title to dimension object.'\n    );\n    entries(userConfig.dimensionTitles).forEach(d => {\n      if (config.dimensions[d.key]) {\n        config.dimensions[d.key].title = config.dimensions[d.key].title\n          ? config.dimensions[d.key].title\n          : d.value;\n      } else {\n        config.dimensions[d.key] = {\n          title: d.value,\n        };\n      }\n    });\n  }\n\n  const eventTypes = [\n    'render',\n    'resize',\n    'highlight',\n    'brush',\n    'brushend',\n    'brushstart',\n    'axesreorder',\n  ].concat(keys(config));\n\n  const events = dispatch.apply(this, eventTypes),\n    flags = {\n      brushable: false,\n      reorderable: false,\n      axes: false,\n      interactive: false,\n      debug: false,\n    },\n    xscale = scalePoint(),\n    dragging = {},\n    axis = axisLeft().ticks(5),\n    ctx = {},\n    canvas = {};\n\n  const brush = {\n    modes: {\n      None: {\n        install: function(pc) {}, // Nothing to be done.\n        uninstall: function(pc) {}, // Nothing to be done.\n        selected: function() {\n          return [];\n        }, // Nothing to return\n        brushState: function() {\n          return {};\n        },\n      },\n    },\n    mode: 'None',\n    predicate: 'AND',\n    currentMode: function() {\n      return this.modes[this.mode];\n    },\n  };\n\n  return {\n    config,\n    events,\n    eventTypes,\n    flags,\n    xscale,\n    dragging,\n    axis,\n    ctx,\n    canvas,\n    brush,\n  };\n};\n\nexport default initState;\n","import { keys, map } from 'd3-collection';\n\nconst computeClusterCentroids = (config, d) => {\n  const clusterCentroids = map();\n  const clusterCounts = map();\n  // determine clusterCounts\n  config.data.forEach(function(row) {\n    let scaled = config.dimensions[d].yscale(row[d]);\n    if (!clusterCounts.has(scaled)) {\n      clusterCounts.set(scaled, 0);\n    }\n    let count = clusterCounts.get(scaled);\n    clusterCounts.set(scaled, count + 1);\n  });\n\n  config.data.forEach(function(row) {\n    keys(config.dimensions).map(p => {\n      let scaled = config.dimensions[d].yscale(row[d]);\n      if (!clusterCentroids.has(scaled)) {\n        let _map = map();\n        clusterCentroids.set(scaled, _map);\n      }\n      if (!clusterCentroids.get(scaled).has(p)) {\n        clusterCentroids.get(scaled).set(p, 0);\n      }\n      let value = clusterCentroids.get(scaled).get(p);\n      value += config.dimensions[p].yscale(row[p]) / clusterCounts.get(scaled);\n      clusterCentroids.get(scaled).set(p, value);\n    });\n  });\n\n  return clusterCentroids;\n};\n\nexport default computeClusterCentroids;\n","// side effects for setters\nimport { keys } from 'd3-collection';\nimport { dispatch } from 'd3-dispatch';\nimport computeClusterCentroids from '../util/computeClusterCentroids';\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\n\nconst without = (arr, items) => {\n  items.forEach(el => {\n    delete arr[el];\n  });\n  return arr;\n};\n\nconst sideEffects = (\n  config,\n  ctx,\n  pc,\n  xscale,\n  flags,\n  brushedQueue,\n  foregroundQueue\n) =>\n  dispatch\n    .apply(this, keys(config))\n    .on('composite', d => {\n      ctx.foreground.globalCompositeOperation = d.value;\n      ctx.brushed.globalCompositeOperation = d.value;\n    })\n    .on('alpha', d => {\n      ctx.foreground.globalAlpha = d.value;\n      ctx.brushed.globalAlpha = d.value;\n    })\n    .on('brushedColor', d => {\n      ctx.brushed.strokeStyle = d.value;\n    })\n    .on('width', d => pc.resize())\n    .on('height', d => pc.resize())\n    .on('margin', d => pc.resize())\n    .on('rate', d => {\n      brushedQueue.rate(d.value);\n      foregroundQueue.rate(d.value);\n    })\n    .on('dimensions', d => {\n      config.dimensions = pc.applyDimensionDefaults(keys(d.value));\n      xscale.domain(pc.getOrderedDimensionKeys());\n      pc.sortDimensions();\n      if (flags.interactive) {\n        pc.render().updateAxes();\n      }\n    })\n    .on('bundleDimension', d => {\n      if (!keys(config.dimensions).length) pc.detectDimensions();\n      pc.autoscale();\n      if (typeof d.value === 'number') {\n        if (d.value < keys(config.dimensions).length) {\n          config.bundleDimension = config.dimensions[d.value];\n        } else if (d.value < config.hideAxis.length) {\n          config.bundleDimension = config.hideAxis[d.value];\n        }\n      } else {\n        config.bundleDimension = d.value;\n      }\n\n      config.clusterCentroids = computeClusterCentroids(\n        config,\n        config.bundleDimension\n      );\n      if (flags.interactive) {\n        pc.render();\n      }\n    })\n    .on('hideAxis', d => {\n      pc.dimensions(pc.applyDimensionDefaults());\n      pc.dimensions(without(config.dimensions, d.value));\n    })\n    .on('flipAxes', d => {\n      if (d.value && d.value.length) {\n        d.value.forEach(function(axis) {\n          flipAxisAndUpdatePCP(config, pc, axis);\n        });\n        pc.updateAxes(0);\n      }\n    });\n\nexport default sideEffects;\n","import { keys } from 'd3-collection';\n\nconst getset = (obj, state, events, side_effects, pc) => {\n  keys(state).forEach(function(key) {\n    obj[key] = function(x) {\n      if (!arguments.length) {\n        return state[key];\n      }\n      if (\n        key === 'dimensions' &&\n        Object.prototype.toString.call(x) === '[object Array]'\n      ) {\n        console.warn('pc.dimensions([]) is deprecated, use pc.dimensions({})');\n        x = obj.applyDimensionDefaults(x);\n      }\n      let old = state[key];\n      state[key] = x;\n      side_effects.call(key, obj, { value: x, previous: old });\n      events.call(key, obj, { value: x, previous: old });\n      return obj;\n    };\n  });\n};\n\nexport default getset;\n","// side effects for setters\nimport sideEffects from './state/sideEffects';\nimport getset from './util/getset';\n\nconst d3_rebind = (target, source, method) =>\n  function() {\n    const value = method.apply(source, arguments);\n    return value === source ? target : value;\n  };\n\nconst _rebind = (target, source, method) => {\n  target[method] = d3_rebind(target, source, source[method]);\n  return target;\n};\n\nconst bindEvents = (\n  __,\n  ctx,\n  pc,\n  xscale,\n  flags,\n  brushedQueue,\n  foregroundQueue,\n  events,\n  axis\n) => {\n  const side_effects = sideEffects(\n    __,\n    ctx,\n    pc,\n    xscale,\n    flags,\n    brushedQueue,\n    foregroundQueue\n  );\n\n  // create getter/setters\n  getset(pc, __, events, side_effects, pc);\n\n  // expose events\n  // getter/setter with event firing\n  _rebind(pc, events, 'on');\n\n  _rebind(\n    pc,\n    axis,\n    'ticks',\n    'orient',\n    'tickValues',\n    'tickSubdivide',\n    'tickSize',\n    'tickPadding',\n    'tickFormat'\n  );\n};\n\nexport default bindEvents;\n","// misc\nimport renderQueue from './util/renderQueue';\nimport w from './util/width';\n\n// brush\nimport install1DAxes from './brush/1d';\nimport install2DStrums from './brush/strums';\nimport installAngularBrush from './brush/angular';\n\n// api\nimport intersection from './api/intersection';\nimport mergeParcoords from './api/mergeParcoords';\nimport selected from './api/selected';\nimport brushMode from './api/brushMode';\nimport updateAxes from './api/updateAxes';\nimport autoscale from './api/autoscale';\nimport brushable from './api/brushable';\nimport commonScale from './api/commonScale';\nimport computeRealCentroids from './api/computeRealCentroids';\nimport applyDimensionDefaults from './api/applyDimensionDefaults';\nimport createAxes from './api/createAxes';\nimport axisDots from './api/axisDots';\nimport applyAxisConfig from './api/applyAxisConfig';\nimport reorderable from './api/reorderable';\nimport resize from './api/resize';\nimport reorder from './api/reorder';\nimport sortDimensions from './api/sortDimensions';\nimport sortDimensionsByRowData from './api/sortDimensionsByRowData';\nimport clear from './api/clear';\nimport {\n  pathBrushed,\n  renderBrushed,\n  renderBrushedDefault,\n  renderBrushedQueue,\n} from './api/renderBrushed';\nimport brushReset from './api/brushReset';\nimport toType from './api/toType';\nimport toString from './api/toString';\nimport adjacentPairs from './api/adjacentPairs';\nimport highlight from './api/highlight';\nimport unhighlight from './api/unhighlight';\nimport removeAxes from './api/removeAxes';\nimport render from './api/render';\nimport renderDefault, {\n  pathForeground,\n  renderDefaultQueue,\n} from './api/renderDefault';\nimport toTypeCoerceNumbers from './api/toTypeCoerceNumbers';\nimport detectDimensionTypes from './api/detectDimensionTypes';\nimport getOrderedDimensionKeys from './api/getOrderedDimensionKeys';\nimport interactive from './api/interactive';\nimport shadows from './api/shadows';\nimport init from './api/init';\nimport flip from './api/flip';\nimport detectDimensions from './api/detectDimensions';\nimport scale from './api/scale';\n\nimport { version } from '../package.json';\nimport initState from './state';\nimport bindEvents from './bindEvents';\n\n//css\nimport './parallel-coordinates.css';\n\nconst ParCoords = userConfig => {\n  const state = initState(userConfig);\n  const {\n    config,\n    events,\n    flags,\n    xscale,\n    dragging,\n    axis,\n    ctx,\n    canvas,\n    brush,\n  } = state;\n\n  const pc = init(config, canvas, ctx);\n\n  const position = d => {\n    if (xscale.range().length === 0) {\n      xscale.range([0, w(config)], 1);\n    }\n    return dragging[d] == null ? xscale(d) : dragging[d];\n  };\n\n  const brushedQueue = renderQueue(pathBrushed(config, ctx, position))\n    .rate(50)\n    .clear(() => pc.clear('brushed'));\n\n  const foregroundQueue = renderQueue(pathForeground(config, ctx, position))\n    .rate(50)\n    .clear(function() {\n      pc.clear('foreground');\n      pc.clear('highlight');\n    });\n\n  bindEvents(\n    config,\n    ctx,\n    pc,\n    xscale,\n    flags,\n    brushedQueue,\n    foregroundQueue,\n    events,\n    axis\n  );\n\n  // expose the state of the chart\n  pc.state = config;\n  pc.flags = flags;\n\n  pc.autoscale = autoscale(config, pc, xscale, ctx);\n  pc.scale = scale(config);\n  pc.flip = flip(config);\n  pc.commonScale = commonScale(config, pc);\n  pc.detectDimensions = detectDimensions(pc);\n  // attempt to determine types of each dimension based on first row of data\n  pc.detectDimensionTypes = detectDimensionTypes;\n  pc.applyDimensionDefaults = applyDimensionDefaults(config, pc);\n  pc.getOrderedDimensionKeys = getOrderedDimensionKeys(config);\n\n  //Renders the polylines.\n  pc.render = render(config, pc, events);\n  pc.renderBrushed = renderBrushed(config, pc, events);\n  pc.render.default = renderDefault(config, pc, ctx, position);\n  pc.render.queue = renderDefaultQueue(config, pc, foregroundQueue);\n  pc.renderBrushed.default = renderBrushedDefault(\n    config,\n    ctx,\n    position,\n    pc,\n    brush\n  );\n  pc.renderBrushed.queue = renderBrushedQueue(config, brush, brushedQueue);\n\n  pc.compute_real_centroids = computeRealCentroids(config.dimensions, position);\n  pc.shadows = shadows(flags, pc);\n  pc.axisDots = axisDots(config, pc, position);\n  pc.clear = clear(config, pc, ctx, brush);\n  pc.createAxes = createAxes(config, pc, xscale, flags, axis);\n  pc.removeAxes = removeAxes(pc);\n  pc.updateAxes = updateAxes(config, pc, position, axis, flags);\n  pc.applyAxisConfig = applyAxisConfig;\n  pc.brushable = brushable(config, pc, flags);\n  pc.brushReset = brushReset(config);\n  pc.selected = selected(config);\n  pc.reorderable = reorderable(config, pc, xscale, position, dragging, flags);\n\n  // Reorder dimensions, such that the highest value (visually) is on the left and\n  // the lowest on the right. Visual values are determined by the data values in\n  // the given row.\n  pc.reorder = reorder(config, pc, xscale);\n  pc.sortDimensionsByRowData = sortDimensionsByRowData(config);\n  pc.sortDimensions = sortDimensions(config, position);\n\n  // pairs of adjacent dimensions\n  pc.adjacent_pairs = adjacentPairs;\n  pc.interactive = interactive(flags);\n\n  // expose internal state\n  pc.xscale = xscale;\n  pc.ctx = ctx;\n  pc.canvas = canvas;\n  pc.g = () => pc._g;\n\n  // rescale for height, width and margins\n  // TODO currently assumes chart is brushable, and destroys old brushes\n  pc.resize = resize(config, pc, flags, events);\n\n  // highlight an array of data\n  pc.highlight = highlight(config, pc, canvas, events, ctx, position);\n  // clear highlighting\n  pc.unhighlight = unhighlight(config, pc, canvas);\n\n  // calculate 2d intersection of line a->b with line c->d\n  // points are objects with x and y properties\n  pc.intersection = intersection;\n\n  // Merges the canvases and SVG elements into one canvas element which is then passed into the callback\n  // (so you can choose to save it to disk, etc.)\n  pc.mergeParcoords = mergeParcoords(pc);\n  pc.brushModes = () => Object.getOwnPropertyNames(brush.modes);\n  pc.brushMode = brushMode(brush, config, pc);\n\n  // install brushes\n  install1DAxes(brush, config, pc, events);\n  install2DStrums(brush, config, pc, events, xscale);\n  installAngularBrush(brush, config, pc, events, xscale);\n\n  pc.version = version;\n  // this descriptive text should live with other introspective methods\n  pc.toString = toString(config);\n  pc.toType = toType;\n  // try to coerce to number before returning type\n  pc.toTypeCoerceNumbers = toTypeCoerceNumbers;\n\n  return pc;\n};\n\nexport default ParCoords;\n"],"names":["renderQueue","func","_queue","rq","data","render","valid","invalidate","doFrame","chunk","splice","_rate","map","slice","add","concat","rate","value","arguments","length","remaining","clear","_invalidate","w","config","width","margin","right","left","brushExtents","state","pc","brushes","extents","keys","dimensions","reduce","acc","cur","brush","undefined","brushSelection","brushNodes","d","extent","brushSelections","g","selectAll","select","forEach","transition","duration","call","event","renderBrushed","brushReset","dimension","brushed","each","move","selected","brushGroup","is_brushed","p","actives","filter","_brushRange","yscale","invert","within","bandwidth","predicate","every","type","some","Error","brushPredicate","brushUpdated","events","newSelection","brushFor","axis","_selector","brushRangeMax","range","_brush","brushY","on","sourceEvent","stopPropagation","node","install","createAxes","append","attr","style","uninstall","remove","BrushState","install1DAxes","Object","assign","modes","selection","strumRect","containmentTest","strum","p1","minX","p2","m1","b1","m2","b2","x","y","y1","y2","Math","min","max","crossesStrum","id","strums","test","d1","dims","d2","point","ids","getOwnPropertyNames","isNaN","crossTest","removeStrum","active","svg","i","onDragEnd","drawStrum","activePoint","_svg","points","_line","circles","_drag","drag","enter","ev","maxX","minY","maxY","onDrag","top","h","height","bottom","dimensionsForPoint","xscale","dim","getOrderedDimensionKeys","indexOf","onDragStart","mouse","consecutive","first","second","insert","install2DStrums","hypothenuse","a","b","sqrt","signedAngle","angle","PI","startAngle","arc","endAngle","tmp","arcs","c","asin","outerRadius","p3","_path","d3Arc","innerRadius","sAngle","uAngle","installAngularBrush","intersection","mergeParcoords","devicePixelRatio","window","mergedCanvas","document","createElement","canvas","foreground","clientWidth","clientHeight","context","getContext","fillStyle","fillRect","key","drawImage","DOMURL","URL","webkitURL","serializer","XMLSerializer","svgStr","serializeToString","src","btoa","img","Image","onload","callback","ranges","nodes","k","push","__data__","values","ranger","domain","includes","flipAxes","unshift","ii","dimRange","dimDomain","j","category","categoryIndex","categoryRangeValue","multiBrushData","idx","filtered","z","String","toUpperCase","currentMode","brushMode","mode","brushModes","dimensionLabels","title","flipAxisAndUpdatePCP","flip","parentElement","animationTime","scale","rotateLabels","delta","deltaY","dimensionTitleRotation","preventDefault","updateAxes","position","flags","g_data","axisElement","applyAxisConfig","text","exit","brushable","reorderable","getRange","nullValueSeparator","nullValueSeparatorPadding","autoscale","ctx","defaultScales","_extent","getTime","scalePoint","tempDate","val","scaleTime","scaleLinear","counts","sort","tempArr","pop","categoricalRange","addBy","scaleOrdinal","strokeStyle","color","lineWidth","globalCompositeOperation","composite","globalAlpha","alpha","brushedColor","highlight","ctrlKey","html","outerHTML","replace","dat","parentNode","commonScale","global","t","detectDimensions","scales","bundleDimension","computeRealCentroids","row","applyDimensionDefaults","types","detectDimensionTypes","orient","ticks","innerTickSize","outerTickSize","tickPadding","index","removeAxes","_g","axes","axisDots","r","_r","marks","pow","beginPath","stroke","fill","axisCfg","axisLeft","axisRight","axisTop","axisBottom","tickValues","tickSizeInner","tickSizeOuter","tickFormat","dragging","__origin__","__","dx","sortDimensions","resize","reorder","firstDim","sortDimensionsByRowData","rowdata","reordered","highlighted","unhighlight","copy","positionSortedKeys","pixelDifference","localeCompare","isBrushed","object","brushState","hasOwnProperty","layer","clearRect","alphaOnBrushed","computeCentroids","centroids","cols","$V","cx","cy","leftCentroid","clusterCentroids","get","rightCentroid","centroid","bundlingStrength","computeControlPoints","smoothness","cps","e","col","mid","diff","subtract","singleCurve","moveTo","showControlPoints","bezierCurveTo","getNullPosition","log","singlePath","lineTo","colorPath","_functor","v","pathBrushed","functor","renderBrushedDefault","renderBrushedQueue","brushedQueue","brushesToKeep","toType","toString","match","toLowerCase","adjacentPairs","ret","arr","pathHighlight","classed","pathForeground","renderDefault","default","renderDefaultQueue","foregroundQueue","queue","toTypeCoerceNumbers","parseFloat","Number","parseInt","ascending","interactive","shadows","init","reverse","freeGlobal","freeSelf","self","root","Function","Symbol","symToStringTag","toStringTag","DefaultConfig","initState","userConfig","dimensionTitles","warn","eventTypes","dispatch","apply","computeClusterCentroids","clusterCounts","scaled","has","set","count","_map","without","items","el","sideEffects","hideAxis","getset","obj","side_effects","prototype","old","previous","d3_rebind","target","source","method","_rebind","bindEvents","ParCoords","compute_real_centroids","adjacent_pairs","version"],"mappings":"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"}