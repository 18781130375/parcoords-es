{"version":3,"file":"parcoords.js","sources":["../src/util/renderQueue.js","../src/util/width.js","../src/brush/1d/brushExtents.js","../src/brush/1d/brushReset.js","../src/brush/1d/selected.js","../src/brush/1d/brushFor.js","../src/brush/1d/install.js","../src/brush/1d/uninstall.js","../src/brush/1d/index.js","../src/brush/1d-multi/drawBrushes.js","../src/brush/1d-multi/selected.js","../src/brush/1d-multi/newBrush.js","../src/brush/1d-multi/brushExtents.js","../src/brush/1d-multi/brushReset.js","../src/brush/1d-multi/brushFor.js","../src/brush/1d-multi/install.js","../src/brush/1d-multi/uninstall.js","../src/brush/1d-multi/index.js","../src/brush/strums/uninstall.js","../src/brush/strums/selected.js","../src/brush/strums/removeStrum.js","../src/brush/strums/onDragEnd.js","../src/brush/strums/onDrag.js","../src/util/height.js","../src/brush/dimensionsForPoint.js","../src/brush/strums/onDragStart.js","../src/brush/strums/brushReset.js","../src/brush/consecutive.js","../src/brush/strums/install.js","../src/brush/strums/index.js","../src/brush/angular/uninstall.js","../src/brush/angular/util/hypothenuse.js","../src/brush/angular/selected.js","../src/brush/angular/removeStrum.js","../src/brush/angular/onDragEnd.js","../src/brush/angular/onDrag.js","../src/brush/angular/onDragStart.js","../src/brush/angular/brushReset.js","../src/brush/angular/install.js","../src/brush/angular/index.js","../src/api/intersection.js","../src/api/mergeParcoords.js","../src/api/selected.js","../src/api/brushMode.js","../src/util/dimensionLabels.js","../src/util/flipAxisAndUpdatePCP.js","../src/util/rotateLabels.js","../src/api/updateAxes.js","../src/util/getRange.js","../src/api/autoscale.js","../src/api/brushable.js","../src/api/commonScale.js","../src/api/computeRealCentroids.js","../src/api/applyDimensionDefaults.js","../src/api/createAxes.js","../src/api/axisDots.js","../src/api/applyAxisConfig.js","../src/api/reorderable.js","../src/api/resize.js","../src/api/reorder.js","../src/api/sortDimensions.js","../src/api/sortDimensionsByRowData.js","../src/util/isBrushed.js","../src/api/clear.js","../src/util/computeCentroids.js","../src/util/computeControlPoints.js","../src/util/colorPath.js","../src/util/functor.js","../src/api/renderBrushed.js","../src/api/brushReset.js","../src/api/toType.js","../src/api/toString.js","../src/api/adjacentPairs.js","../src/api/highlight.js","../src/api/unhighlight.js","../src/api/removeAxes.js","../src/api/render.js","../src/api/renderDefault.js","../src/api/toTypeCoerceNumbers.js","../src/api/detectDimensionTypes.js","../src/api/getOrderedDimensionKeys.js","../src/api/interactive.js","../src/api/shadows.js","../src/api/init.js","../src/api/flip.js","../src/api/detectDimensions.js","../src/api/scale.js","../src/state/defaultConfig.js","../src/state/index.js","../src/util/computeClusterCentroids.js","../src/state/sideEffects.js","../src/util/getset.js","../src/bindEvents.js","../src/index.js"],"sourcesContent":["import 'requestanimationframe';\n\nconst renderQueue = function(func) {\n  let _queue = [], // data to be rendered\n    _rate = 1000, // number of calls per frame\n    _invalidate = function() {}, // invalidate last render queue\n    _clear = function() {}; // clearing function\n\n  let rq = function(data) {\n    if (data) rq.data(data);\n    _invalidate();\n    _clear();\n    rq.render();\n  };\n\n  rq.render = function() {\n    let valid = true;\n    _invalidate = rq.invalidate = function() {\n      valid = false;\n    };\n\n    function doFrame() {\n      if (!valid) return true;\n      let chunk = _queue.splice(0, _rate);\n      chunk.map(func);\n      requestAnimationFrame(doFrame);\n    }\n\n    doFrame();\n  };\n\n  rq.data = function(data) {\n    _invalidate();\n    _queue = data.slice(0); // creates a copy of the data\n    return rq;\n  };\n\n  rq.add = function(data) {\n    _queue = _queue.concat(data);\n  };\n\n  rq.rate = function(value) {\n    if (!arguments.length) return _rate;\n    _rate = value;\n    return rq;\n  };\n\n  rq.remaining = function() {\n    return _queue.length;\n  };\n\n  // clear the canvas\n  rq.clear = function(func) {\n    if (!arguments.length) {\n      _clear();\n      return rq;\n    }\n    _clear = func;\n    return rq;\n  };\n\n  rq.invalidate = _invalidate;\n\n  return rq;\n};\n\nexport default renderQueue;\n","const w = config => config.width - config.margin.right - config.margin.left;\n\nexport default w;\n","import { select } from 'd3-selection';\nimport { brushSelection } from 'd3-brush';\n\nconst brushExtents = (state, config, pc) => extents => {\n  const { brushes, brushNodes } = state;\n\n  if (typeof extents === 'undefined') {\n    return Object.keys(config.dimensions).reduce((acc, cur) => {\n      const brush = brushes[cur];\n      //todo: brush check\n      if (brush !== undefined && brushSelection(brushNodes[cur]) !== null) {\n        acc[cur] = brush.extent();\n      }\n\n      return acc;\n    }, {});\n  } else {\n    //first get all the brush selections\n    const brushSelections = {};\n    pc\n      .g()\n      .selectAll('.brush')\n      .each(function(d) {\n        brushSelections[d] = select(this);\n      });\n\n    // loop over each dimension and update appropriately (if it was passed in through extents)\n    Object.keys(config.dimensions).forEach(d => {\n      if (extents[d] === undefined) {\n        return;\n      }\n\n      const brush = brushes[d];\n      if (brush !== undefined) {\n        const dim = config.dimensions[d];\n        const yExtent = extents[d].map(dim.yscale);\n\n        //update the extent\n        //sets the brushable extent to the specified array of points [[x0, y0], [x1, y1]]\n        brush.extent([[-15, yExtent[1]], [15, yExtent[0]]]);\n\n        //redraw the brush\n        //https://github.com/d3/d3-brush#brush_move\n        // For an x-brush, it must be defined as [x0, x1]; for a y-brush, it must be defined as [y0, y1].\n        brushSelections[d].call(brush).call(brush.move, yExtent.reverse());\n\n        //fire some events\n        // brush.event(brushSelections[d]);\n      }\n    });\n\n    //redraw the chart\n    pc.renderBrushed();\n\n    return pc;\n  }\n};\n\nexport default brushExtents;\n","import { select } from 'd3-selection';\n\nconst brushReset = (state, config, pc) => dimension => {\n  const { brushes } = state;\n\n  if (dimension === undefined) {\n    config.brushed = false;\n    if (pc.g() !== undefined && pc.g() !== null) {\n      pc\n        .g()\n        .selectAll('.brush')\n        .each(function(d) {\n          select(this).call(brushes[d].move, null);\n        });\n      pc.renderBrushed();\n    }\n  } else {\n    if (pc.g() !== undefined && pc.g() !== null) {\n      pc\n        .g()\n        .selectAll('.brush')\n        .each(function(d) {\n          if (d != dimension) return;\n          select(this).call(brushes[d].move, null);\n          brushes[d].event(select(this));\n        });\n      pc.renderBrushed();\n    }\n  }\n  return this;\n};\n\nexport default brushReset;\n","import { brushSelection } from 'd3-brush';\n//https://github.com/d3/d3-brush/issues/10\n\n// data within extents\nconst selected = (state, config, brushGroup) => () => {\n  const { brushNodes } = state;\n  const is_brushed = p => brushSelection(brushNodes[p]) !== null;\n\n  const actives = Object.keys(config.dimensions).filter(is_brushed);\n  const extents = actives.map(p => {\n    const _brushRange = brushSelection(brushNodes[p]);\n\n    if (typeof config.dimensions[p].yscale.invert === 'function') {\n      return [\n        config.dimensions[p].yscale.invert(_brushRange[1]),\n        config.dimensions[p].yscale.invert(_brushRange[0]),\n      ];\n    } else {\n      return _brushRange;\n    }\n  });\n  // We don't want to return the full data set when there are no axes brushed.\n  // Actually, when there are no axes brushed, by definition, no items are\n  // selected. So, let's avoid the filtering and just return false.\n  //if (actives.length === 0) return false;\n\n  // Resolves broken examples for now. They expect to get the full dataset back from empty brushes\n  if (actives.length === 0) return config.data;\n\n  // test if within range\n  const within = {\n    date: (d, p, dimension) => {\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\n        // if it is ordinal\n        return (\n          extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\n          config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n        );\n      } else {\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\n      }\n    },\n    number: (d, p, dimension) => {\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\n        // if it is ordinal\n        return (\n          extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\n          config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n        );\n      } else {\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\n      }\n    },\n    string: (d, p, dimension) => {\n      return (\n        extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\n        config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n      );\n    },\n  };\n\n  return config.data.filter(d => {\n    switch (brushGroup.predicate) {\n      case 'AND':\n        return actives.every(function(p, dimension) {\n          return within[config.dimensions[p].type](d, p, dimension);\n        });\n      case 'OR':\n        return actives.some(function(p, dimension) {\n          return within[config.dimensions[p].type](d, p, dimension);\n        });\n      default:\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\n    }\n  });\n};\n\nexport default selected;\n","import { brushY } from 'd3-brush';\nimport { event } from 'd3-selection';\n\nimport selected from './selected';\n\nconst brushUpdated = (config, pc, events) => newSelection => {\n  config.brushed = newSelection;\n  events.call('brush', pc, config.brushed);\n  pc.renderBrushed();\n};\n\nconst brushFor = (state, config, pc, events, brushGroup) => (\n  axis,\n  _selector\n) => {\n  const brushRangeMax =\n    config.dimensions[axis].type === 'string'\n      ? config.dimensions[axis].yscale.range()[\n          config.dimensions[axis].yscale.range().length - 1\n        ]\n      : config.dimensions[axis].yscale.range()[0];\n\n  const _brush = brushY(_selector).extent([[-15, 0], [15, brushRangeMax]]);\n\n  _brush\n    .on('start', function() {\n      if (event.sourceEvent !== null) {\n        events.call('brushstart', pc, config.brushed);\n        event.sourceEvent.stopPropagation();\n      }\n    })\n    .on('brush', function() {\n      brushUpdated(config, pc, events)(selected(state, config, brushGroup)());\n    })\n    .on('end', function() {\n      brushUpdated(config, pc, events)(selected(state, config, brushGroup)());\n      events.call('brushend', pc, config.brushed);\n    });\n\n  state.brushes[axis] = _brush;\n  state.brushNodes[axis] = _selector.node();\n\n  return _brush;\n};\n\nexport default brushFor;\n","import { select } from 'd3-selection';\nimport brushExtents from './brushExtents';\nimport brushReset from './brushReset';\nimport brushFor from './brushFor';\n\nconst install = (state, config, pc, events, brushGroup) => () => {\n  if (!pc.g()) {\n    pc.createAxes();\n  }\n\n  // Add and store a brush for each axis.\n  const brush = pc\n    .g()\n    .append('svg:g')\n    .attr('class', 'brush')\n    .each(function(d) {\n      select(this).call(\n        brushFor(state, config, pc, events, brushGroup)(d, select(this))\n      );\n    });\n  brush\n    .selectAll('rect')\n    .style('visibility', null)\n    .attr('x', -15)\n    .attr('width', 30);\n\n  brush.selectAll('rect.background').style('fill', 'transparent');\n\n  brush\n    .selectAll('rect.extent')\n    .style('fill', 'rgba(255,255,255,0.25)')\n    .style('stroke', 'rgba(0,0,0,0.6)');\n\n  brush.selectAll('.resize rect').style('fill', 'rgba(0,0,0,0.1)');\n\n  pc.brushExtents = brushExtents(state, config, pc);\n  pc.brushReset = brushReset(state, config, pc);\n  return pc;\n};\n\nexport default install;\n","const uninstall = (state, pc) => () => {\n  if (pc.g() !== undefined && pc.g() !== null)\n    pc\n      .g()\n      .selectAll('.brush')\n      .remove();\n\n  state.brushes = {};\n  delete pc.brushExtents;\n  delete pc.brushReset;\n};\n\nexport default uninstall;\n","import brushExtents from './brushExtents';\nimport install from './install';\nimport selected from './selected';\nimport uninstall from './uninstall';\n\nconst BrushState = {\n  brushes: {},\n  brushNodes: {},\n};\n\nconst install1DAxes = (brushGroup, config, pc, events) => {\n  const state = Object.assign({}, BrushState);\n\n  brushGroup.modes['1D-axes'] = {\n    install: install(state, config, pc, events, brushGroup),\n    uninstall: uninstall(state, pc),\n    selected: selected(state, config, brushGroup),\n    brushState: brushExtents(state, config, pc),\n  };\n};\n\nexport default install1DAxes;\n","import { select } from 'd3-selection';\n\nconst drawBrushes = (brushes, config, pc, axis, selector) => {\n  const brushSelection = selector.selectAll('.brush').data(brushes, d => d.id);\n\n  brushSelection\n    .enter()\n    .insert('g', '.brush')\n    .attr('class', 'brush')\n    .attr('dimension', axis)\n    .attr(\n      'id',\n      b => 'brush-' + Object.keys(config.dimensions).indexOf(axis) + '-' + b.id\n    )\n    .each(function(brushObject) {\n      brushObject.brush(select(this));\n    });\n\n  brushSelection.each(function(brushObject) {\n    select(this)\n      .attr('class', 'brush')\n      .selectAll('.overlay')\n      .style('pointer-events', function() {\n        const brush = brushObject.brush;\n        if (brushObject.id === brushes.length - 1 && brush !== undefined) {\n          return 'all';\n        } else {\n          return 'none';\n        }\n      });\n  });\n\n  brushSelection.exit().remove();\n};\n\nexport default drawBrushes;\n","import { brushSelection } from 'd3-brush';\n\n// data within extents\nconst selected = (state, config, pc, events, brushGroup) => {\n  const { brushes } = state;\n\n  const is_brushed = (p, pos) => {\n    const axisBrushes = brushes[p];\n\n    for (let i = 0; i < axisBrushes.length; i++) {\n      const brush = document.getElementById('brush-' + pos + '-' + i);\n\n      if (brushSelection(brush) !== null) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  const actives = Object.keys(config.dimensions).filter(is_brushed);\n  const extents = actives.map(p => {\n    const axisBrushes = brushes[p];\n\n    return axisBrushes\n      .map((d, i) =>\n        brushSelection(\n          document.getElementById(\n            'brush-' + Object.keys(config.dimensions).indexOf(p) + '-' + i\n          )\n        )\n      )\n      .map((d, i) => {\n        if (d === null || d === undefined) {\n          return null;\n        } else if (typeof config.dimensions[p].yscale.invert === 'function') {\n          return [\n            config.dimensions[p].yscale.invert(d[1]),\n            config.dimensions[p].yscale.invert(d[0]),\n          ];\n        } else {\n          return d;\n        }\n      });\n  });\n\n  // We don't want to return the full data set when there are no axes brushed.\n  // Actually, when there are no axes brushed, by definition, no items are\n  // selected. So, let's avoid the filtering and just return false.\n  //if (actives.length === 0) return false;\n\n  // Resolves broken examples for now. They expect to get the full dataset back from empty brushes\n  if (actives.length === 0) return config.data;\n\n  // test if within range\n  const within = {\n    date: (d, p, i) => {\n      const dimExt = extents[i];\n\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\n        // if it is ordinal\n        for (const e of dimExt) {\n          if (e === null || e === undefined) {\n            continue;\n          }\n\n          if (\n            e[0] <= config.dimensions[p].yscale(d[p]) &&\n            config.dimensions[p].yscale(d[p]) <= e[1]\n          ) {\n            return true;\n          }\n        }\n\n        return false;\n      } else {\n        for (const e of dimExt) {\n          if (e === null || e === undefined) {\n            continue;\n          }\n\n          if (e[0] <= d[p] && d[p] <= e[1]) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n    },\n    number: (d, p, i) => {\n      const dimExt = extents[i];\n\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\n        // if it is ordinal\n        for (const e of dimExt) {\n          if (e === null || e === undefined) {\n            continue;\n          }\n\n          if (\n            e[0] <= config.dimensions[p].yscale(d[p]) &&\n            config.dimensions[p].yscale(d[p]) <= e[1]\n          ) {\n            return true;\n          }\n        }\n\n        return false;\n      } else {\n        for (const e of dimExt) {\n          if (e === null || e === undefined) {\n            continue;\n          }\n\n          if (e[0] <= d[p] && d[p] <= e[1]) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n    },\n    string: (d, p, i) => {\n      const dimExt = extents[i];\n\n      for (const e of dimExt) {\n        if (e === null || e === undefined) {\n          continue;\n        }\n\n        if (\n          e[0] <= config.dimensions[p].yscale(d[p]) &&\n          config.dimensions[p].yscale(d[p]) <= e[1]\n        ) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n  };\n\n  return config.data.filter(d => {\n    switch (brushGroup.predicate) {\n      case 'AND':\n        return actives.every((p, i) =>\n          within[config.dimensions[p].type](d, p, i)\n        );\n      case 'OR':\n        return actives.some((p, i) =>\n          within[config.dimensions[p].type](d, p, i)\n        );\n      default:\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\n    }\n  });\n};\n\nexport default selected;\n","import { brushY, brushSelection } from 'd3-brush';\nimport { event, select } from 'd3-selection';\nimport drawBrushes from './drawBrushes';\nimport selected from './selected';\n\nconst brushUpdated = (config, pc, events) => newSelection => {\n  config.brushed = newSelection;\n  events.call('brush', pc, config.brushed);\n  pc.renderBrushed();\n};\n\nconst newBrush = (state, config, pc, events, brushGroup) => (\n  axis,\n  _selector\n) => {\n  const { brushes, brushNodes } = state;\n\n  const brushRangeMax =\n    config.dimensions[axis].type === 'string'\n      ? config.dimensions[axis].yscale.range()[\n          config.dimensions[axis].yscale.range().length - 1\n        ]\n      : config.dimensions[axis].yscale.range()[0];\n\n  const brush = brushY().extent([[-15, 0], [15, brushRangeMax]]);\n\n  if (brushes[axis]) {\n    brushes[axis].push({\n      id: brushes[axis].length,\n      brush,\n      node: _selector.node(),\n    });\n  } else {\n    brushes[axis] = [{ id: 0, brush, node: _selector.node() }];\n  }\n\n  if (brushNodes[axis]) {\n    brushNodes[axis].push({ id: brushes.length, node: _selector.node() });\n  } else {\n    brushNodes[axis] = [{ id: 0, node: _selector.node() }];\n  }\n\n  brush\n    .on('start', function() {\n      if (event.sourceEvent !== null) {\n        events.call('brushstart', pc, config.brushed);\n        event.sourceEvent.stopPropagation();\n      }\n    })\n    .on('brush', function() {\n      // record selections\n      brushUpdated(\n        config,\n        pc,\n        events\n      )(selected(state, config, pc, events, brushGroup));\n    })\n    .on('end', function() {\n      // Figure out if our latest brush has a selection\n      const lastBrushID = brushes[axis][brushes[axis].length - 1].id;\n      const lastBrush = document.getElementById(\n        'brush-' +\n          Object.keys(config.dimensions).indexOf(axis) +\n          '-' +\n          lastBrushID\n      );\n      const selection = brushSelection(lastBrush);\n\n      // If it does, that means we need another one\n      if (selection && selection[0] !== selection[1]) {\n        newBrush(state, config, pc, events, brushGroup)(axis, _selector);\n      }\n\n      // Always draw brushes\n      drawBrushes(brushes[axis], config, pc, axis, _selector);\n\n      brushUpdated(\n        config,\n        pc,\n        events\n      )(selected(state, config, pc, events, brushGroup));\n      events.call('brushend', pc, config.brushed);\n    });\n\n  return brush;\n};\n\nexport default newBrush;\n","import { select } from 'd3-selection';\nimport { brushSelection } from 'd3-brush';\nimport newBrush from './newBrush';\nimport drawBrushes from './drawBrushes';\n\n/**\n *\n * extents are in format of [[2,6], [3,5]]\n *\n * * @param state\n * @param config\n * @param pc\n * @returns {Function}\n */\nconst brushExtents = (state, config, pc, events, brushGroup) => extents => {\n  const { brushes } = state;\n\n  if (typeof extents === 'undefined') {\n    return Object.keys(config.dimensions).reduce((acc, cur, pos) => {\n      const axisBrushes = brushes[cur];\n\n      if (axisBrushes === undefined || axisBrushes === null) {\n        acc[cur] = [];\n      } else {\n        acc[cur] = axisBrushes.reduce((d, p, i) => {\n          const range = brushSelection(\n            document.getElementById('brush-' + pos + '-' + i)\n          );\n          if (range !== null) {\n            d = d.push(range);\n          }\n\n          return d;\n        }, []);\n      }\n\n      return acc;\n    }, {});\n  } else {\n    // //first get all the brush selections\n    // loop over each dimension and update appropriately (if it was passed in through extents)\n    Object.keys(config.dimensions).forEach((d, pos) => {\n      if (extents[d] === undefined || extents[d] === null) {\n        return;\n      }\n\n      const dim = config.dimensions[d];\n\n      const yExtents = extents[d].map(e => e.map(dim.yscale));\n\n      const _bs = yExtents.map((e, j) => {\n        const _brush = newBrush(state, config, pc, events, brushGroup)(\n          d,\n          select('#brush-group-' + pos)\n        );\n        //update the extent\n        //sets the brushable extent to the specified array of points [[x0, y0], [x1, y1]]\n        _brush.extent([[-15, e[1]], [15, e[0]]]);\n\n        return {\n          id: j,\n          brush: _brush,\n          ext: e,\n        };\n      });\n\n      brushes[d] = _bs;\n\n      drawBrushes(_bs, config, pc, d, select('#brush-group-' + pos));\n\n      //redraw the brush\n      //https://github.com/d3/d3-brush#brush_move\n      // For an x-brush, it must be defined as [x0, x1]; for a y-brush, it must be defined as [y0, y1].\n      _bs.forEach((f, k) => {\n        select('#brush-' + pos + '-' + k)\n          .call(f.brush)\n          .call(f.brush.move, f.ext.reverse());\n      });\n    });\n\n    //redraw the chart\n    pc.renderBrushed();\n\n    return pc;\n  }\n};\n\nexport default brushExtents;\n","import { select } from 'd3-selection';\nimport { brushSelection } from 'd3-brush';\n\nconst brushReset = (state, config, pc) => dimension => {\n  const { brushes } = state;\n\n  if (dimension === undefined) {\n    config.brushed = false;\n    if (pc.g() !== undefined && pc.g() !== null) {\n      Object.keys(config.dimensions).forEach((d, pos) => {\n        const axisBrush = brushes[d];\n\n        axisBrush.forEach((e, i) => {\n          const brush = document.getElementById('brush-' + pos + '-' + i);\n          if (brushSelection(brush) !== null) {\n            pc\n              .g()\n              .select('#brush-' + pos + '-' + i)\n              .call(e.brush.move, null);\n          }\n        });\n      });\n\n      pc.renderBrushed();\n    }\n  } else {\n    if (pc.g() !== undefined && pc.g() !== null) {\n      const axisBrush = brushes[dimension];\n      const pos = Object.keys(config.dimensions).indexOf(dimension);\n\n      axisBrush.forEach((e, i) => {\n        const brush = document.getElementById('brush-' + pos + '-' + i);\n        if (brushSelection(brush) !== null) {\n          pc\n            .g()\n            .select('#brush-' + pos + '-' + i)\n            .call(e.brush.move, null);\n          e.event(select('#brush-' + pos + '-' + i));\n        }\n      });\n\n      pc.renderBrushed();\n    }\n  }\n  return this;\n};\n\nexport default brushReset;\n","import newBrush from './newBrush';\nimport drawBrushes from './drawBrushes';\n\nconst brushFor = (state, config, pc, events, brushGroup) => (\n  axis,\n  _selector\n) => {\n  const { brushes } = state;\n  newBrush(state, config, pc, events, brushGroup)(axis, _selector);\n  drawBrushes(brushes[axis], config, pc, axis, _selector);\n};\n\nexport default brushFor;\n","import { select } from 'd3-selection';\nimport brushExtents from './brushExtents';\nimport brushReset from './brushReset';\nimport brushFor from './brushFor';\n\nconst install = (state, config, pc, events, brushGroup) => () => {\n  if (!pc.g()) {\n    pc.createAxes();\n  }\n\n  pc\n    .g()\n    .append('svg:g')\n    .attr('id', (d, i) => 'brush-group-' + i)\n    .attr('class', 'brush-group')\n    .attr('dimension', d => d)\n    .each(function(d) {\n      brushFor(state, config, pc, events, brushGroup)(d, select(this));\n    });\n\n  pc.brushExtents = brushExtents(state, config, pc, events, brushGroup);\n  pc.brushReset = brushReset(state, config, pc);\n  return pc;\n};\n\nexport default install;\n","const uninstall = (state, pc) => () => {\n  if (pc.g() !== undefined && pc.g() !== null)\n    pc\n      .g()\n      .selectAll('.brush-group')\n      .remove();\n\n  state.brushes = {};\n  delete pc.brushExtents;\n  delete pc.brushReset;\n};\n\nexport default uninstall;\n","import brushExtents from './brushExtents';\nimport install from './install';\nimport selected from './selected';\nimport uninstall from './uninstall';\n\nconst BrushState = {\n  brushes: {},\n  brushNodes: {},\n};\n\nconst install1DMultiAxes = (brushGroup, config, pc, events) => {\n  const state = Object.assign({}, BrushState);\n\n  brushGroup.modes['1D-axes-multi'] = {\n    install: install(state, config, pc, events, brushGroup),\n    uninstall: uninstall(state, pc),\n    selected: selected(state, config, brushGroup),\n    brushState: brushExtents(state, config, pc),\n  };\n};\n\nexport default install1DMultiAxes;\n","const uninstall = (state, pc) => () => {\n  pc.selection\n    .select('svg')\n    .select('g#strums')\n    .remove();\n  pc.selection\n    .select('svg')\n    .select('rect#strum-events')\n    .remove();\n  pc.on('axesreorder.strums', undefined);\n  delete pc.brushReset;\n\n  state.strumRect = undefined;\n};\n\nexport default uninstall;\n","// test if point falls between lines\nconst containmentTest = (strum, width) => p => {\n  const p1 = [strum.p1[0] - strum.minX, strum.p1[1] - strum.minX],\n    p2 = [strum.p2[0] - strum.minX, strum.p2[1] - strum.minX],\n    m1 = 1 - width / p1[0],\n    b1 = p1[1] * (1 - m1),\n    m2 = 1 - width / p2[0],\n    b2 = p2[1] * (1 - m2);\n\n  const x = p[0],\n    y = p[1],\n    y1 = m1 * x + b1,\n    y2 = m2 * x + b2;\n\n  return y > Math.min(y1, y2) && y < Math.max(y1, y2);\n};\n\nconst crossesStrum = (state, config) => (d, id) => {\n  let strum = state.strums[id],\n    test = containmentTest(strum, state.strums.width(id)),\n    d1 = strum.dims.left,\n    d2 = strum.dims.right,\n    y1 = config.dimensions[d1].yscale,\n    y2 = config.dimensions[d2].yscale,\n    point = [y1(d[d1]) - strum.minX, y2(d[d2]) - strum.minX];\n  return test(point);\n};\n\nconst selected = (brushGroup, state, config) => {\n  // Get the ids of the currently active strums.\n  const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d)),\n    brushed = config.data;\n\n  if (ids.length === 0) {\n    return brushed;\n  }\n\n  const crossTest = crossesStrum(state, config);\n\n  return brushed.filter(d => {\n    switch (brushGroup.predicate) {\n      case 'AND':\n        return ids.every(id => crossTest(d, id));\n      case 'OR':\n        return ids.some(id => crossTest(d, id));\n      default:\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\n    }\n  });\n};\n\nexport default selected;\n","const removeStrum = (state, pc) => {\n  const strum = state.strums[state.strums.active],\n    svg = pc.selection.select('svg').select('g#strums');\n\n  delete state.strums[state.strums.active];\n  svg.selectAll('line#strum-' + strum.dims.i).remove();\n  svg.selectAll('circle#strum-' + strum.dims.i).remove();\n};\n\nexport default removeStrum;\n","import selected from './selected';\nimport removeStrum from './removeStrum';\n\nconst onDragEnd = (brushGroup, state, config, pc, events) => () => {\n  const strum = state.strums[state.strums.active];\n\n  // Okay, somewhat unexpected, but not totally unsurprising, a mousclick is\n  // considered a drag without move. So we have to deal with that case\n  if (strum && strum.p1[0] === strum.p2[0] && strum.p1[1] === strum.p2[1]) {\n    removeStrum(state, pc);\n  }\n\n  const brushed = selected(brushGroup, state, config);\n  state.strums.active = undefined;\n  config.brushed = brushed;\n  pc.renderBrushed();\n  events.call('brushend', pc, config.brushed);\n};\n\nexport default onDragEnd;\n","import { event, select } from 'd3-selection';\nimport { drag } from 'd3-drag';\nimport onDragEnd from './onDragEnd';\n\nconst drawStrum = (\n  brushGroup,\n  state,\n  config,\n  pc,\n  events,\n  strum,\n  activePoint\n) => {\n  let _svg = pc.selection.select('svg').select('g#strums'),\n    id = strum.dims.i,\n    points = [strum.p1, strum.p2],\n    _line = _svg.selectAll('line#strum-' + id).data([strum]),\n    circles = _svg.selectAll('circle#strum-' + id).data(points),\n    _drag = drag();\n\n  _line\n    .enter()\n    .append('line')\n    .attr('id', 'strum-' + id)\n    .attr('class', 'strum');\n\n  _line\n    .attr('x1', d => d.p1[0])\n    .attr('y1', d => d.p1[1])\n    .attr('x2', d => d.p2[0])\n    .attr('y2', d => d.p2[1])\n    .attr('stroke', 'black')\n    .attr('stroke-width', 2);\n\n  _drag\n    .on('drag', function(d, i) {\n      const ev = event;\n      i = i + 1;\n      strum['p' + i][0] = Math.min(Math.max(strum.minX + 1, ev.x), strum.maxX);\n      strum['p' + i][1] = Math.min(Math.max(strum.minY, ev.y), strum.maxY);\n      drawStrum(brushGroup, state, config, pc, events, strum, i - 1);\n    })\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\n\n  circles\n    .enter()\n    .append('circle')\n    .attr('id', 'strum-' + id)\n    .attr('class', 'strum');\n\n  circles\n    .attr('cx', d => d[0])\n    .attr('cy', d => d[1])\n    .attr('r', 5)\n    .style(\n      'opacity',\n      (d, i) => (activePoint !== undefined && i === activePoint ? 0.8 : 0)\n    )\n    .on('mouseover', function() {\n      select(this).style('opacity', 0.8);\n    })\n    .on('mouseout', function() {\n      select(this).style('opacity', 0);\n    })\n    .call(_drag);\n};\n\nconst onDrag = (brushGroup, state, config, pc, events) => () => {\n  const ev = event,\n    strum = state.strums[state.strums.active];\n\n  // Make sure that the point is within the bounds\n  strum.p2[0] = Math.min(\n    Math.max(strum.minX + 1, ev.x - config.margin.left),\n    strum.maxX\n  );\n  strum.p2[1] = Math.min(\n    Math.max(strum.minY, ev.y - config.margin.top),\n    strum.maxY\n  );\n\n  drawStrum(brushGroup, state, config, pc, events, strum, 1);\n};\n\nexport default onDrag;\n","const h = config => config.height - config.margin.top - config.margin.bottom;\n\nexport default h;\n","const dimensionsForPoint = (config, pc, xscale, p) => {\n  const dims = { i: -1, left: undefined, right: undefined };\n  Object.keys(config.dimensions).some((dim, i) => {\n    if (xscale(dim) < p[0]) {\n      dims.i = i;\n      dims.left = dim;\n      dims.right = Object.keys(config.dimensions)[\n        pc.getOrderedDimensionKeys().indexOf(dim) + 1\n      ];\n      return false;\n    }\n    return true;\n  });\n\n  if (dims.left === undefined) {\n    // Event on the left side of the first axis.\n    dims.i = 0;\n    dims.left = pc.getOrderedDimensionKeys()[0];\n    dims.right = pc.getOrderedDimensionKeys()[1];\n  } else if (dims.right === undefined) {\n    // Event on the right side of the last axis\n    dims.i = Object.keys(config.dimensions).length - 1;\n    dims.right = dims.left;\n    dims.left = pc.getOrderedDimensionKeys()[\n      Object.keys(config.dimensions).length - 2\n    ];\n  }\n\n  return dims;\n};\n\nexport default dimensionsForPoint;\n","import { mouse } from 'd3-selection';\nimport h from '../../util/height';\nimport dimensionsForPoint from '../dimensionsForPoint';\n\n// First we need to determine between which two axes the sturm was started.\n// This will determine the freedom of movement, because a strum can\n// logically only happen between two axes, so no movement outside these axes\n// should be allowed.\nconst onDragStart = (state, config, pc, xscale) => () => {\n  let p = mouse(state.strumRect.node());\n\n  p[0] = p[0] - config.margin.left;\n  p[1] = p[1] - config.margin.top;\n\n  const dims = dimensionsForPoint(config, pc, xscale, p);\n  const strum = {\n    p1: p,\n    dims: dims,\n    minX: xscale(dims.left),\n    maxX: xscale(dims.right),\n    minY: 0,\n    maxY: h(config),\n  };\n\n  // Make sure that the point is within the bounds\n  strum.p1[0] = Math.min(Math.max(strum.minX, p[0]), strum.maxX);\n  strum.p2 = strum.p1.slice();\n\n  state.strums[dims.i] = strum;\n  state.strums.active = dims.i;\n};\n\nexport default onDragStart;\n","import onDragEnd from './onDragEnd';\nimport removeStrum from './removeStrum';\n\nconst brushReset = (brushGroup, state, config, pc, events) => () => {\n  const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d));\n\n  ids.forEach(d => {\n    state.strums.active = d;\n    removeStrum(state, pc);\n  });\n  onDragEnd(brushGroup, state, config, pc, events)();\n};\n\nexport default brushReset;\n","// Checks if the first dimension is directly left of the second dimension.\nconst consecutive = dimensions => (first, second) => {\n  const keys = Object.keys(dimensions);\n\n  return keys.some(\n    (d, i) =>\n      d === first ? i + i < keys.length && dimensions[i + 1] === second : false\n  );\n};\n\nexport default consecutive;\n","import { drag } from 'd3-drag';\nimport onDragEnd from './onDragEnd';\nimport onDrag from './onDrag';\nimport onDragStart from './onDragStart';\nimport removeStrum from './removeStrum';\nimport brushReset from './brushReset';\nimport w from '../../util/width';\nimport h from '../../util/height';\nimport consecutive from '../consecutive';\n\nconst install = (brushGroup, state, config, pc, events, xscale) => () => {\n  if (pc.g() === undefined || pc.g() === null) {\n    pc.createAxes();\n  }\n\n  const _drag = drag();\n\n  // Map of current strums. Strums are stored per segment of the PC. A segment,\n  // being the area between two axes. The left most area is indexed at 0.\n  state.strums.active = undefined;\n  // Returns the width of the PC segment where currently a strum is being\n  // placed. NOTE: even though they are evenly spaced in our current\n  // implementation, we keep for when non-even spaced segments are supported as\n  // well.\n  state.strums.width = id =>\n    state.strums[id] === undefined\n      ? undefined\n      : state.strums[id].maxX - state.strums[id].minX;\n\n  pc.on('axesreorder.strums', () => {\n    const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d));\n\n    if (ids.length > 0) {\n      // We have some strums, which might need to be removed.\n      ids.forEach(d => {\n        const dims = state.strums[d].dims;\n        state.strums.active = d;\n        // If the two dimensions of the current strum are not next to each other\n        // any more, than we'll need to remove the strum. Otherwise we keep it.\n        if (!consecutive(config.dimensions)(dims.left, dims.right)) {\n          removeStrum(state, pc);\n        }\n      });\n      onDragEnd(brushGroup, state, config, pc, events)();\n    }\n  });\n\n  // Add a new svg group in which we draw the strums.\n  pc.selection\n    .select('svg')\n    .append('g')\n    .attr('id', 'strums')\n    .attr(\n      'transform',\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\n    );\n\n  // Install the required brushReset function\n  pc.brushReset = brushReset(brushGroup, state, config, pc, events);\n\n  _drag\n    .on('start', onDragStart(state, config, pc, xscale))\n    .on('drag', onDrag(brushGroup, state, config, pc, events))\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\n\n  // NOTE: The styling needs to be done here and not in the css. This is because\n  //       for 1D brushing, the canvas layers should not listen to\n  //       pointer-events._.\n  state.strumRect = pc.selection\n    .select('svg')\n    .insert('rect', 'g#strums')\n    .attr('id', 'strum-events')\n    .attr('x', config.margin.left)\n    .attr('y', config.margin.top)\n    .attr('width', w(config))\n    .attr('height', h(config) + 2)\n    .style('opacity', 0)\n    .call(_drag);\n};\n\nexport default install;\n","import uninstall from './uninstall';\nimport install from './install';\nimport selected from './selected';\n\nconst BrushState = {\n  strums: {},\n  strumRect: {},\n};\n\nconst install2DStrums = (brushGroup, config, pc, events, xscale) => {\n  const state = Object.assign({}, BrushState);\n\n  brushGroup.modes['2D-strums'] = {\n    install: install(brushGroup, state, config, pc, events, xscale),\n    uninstall: uninstall(state, pc),\n    selected: selected(brushGroup, state, config),\n    brushState: () => state.strums,\n  };\n};\n\nexport default install2DStrums;\n","const uninstall = (state, pc) => () => {\n  pc.selection\n    .select('svg')\n    .select('g#arcs')\n    .remove();\n  pc.selection\n    .select('svg')\n    .select('rect#arc-events')\n    .remove();\n  pc.on('axesreorder.arcs', undefined);\n\n  delete pc.brushReset;\n\n  state.strumRect = undefined;\n};\n\nexport default uninstall;\n","const hypothenuse = (a, b) => Math.sqrt(a * a + b * b);\n\nexport default hypothenuse;\n","import hypothenuse from './util/hypothenuse';\n\n// [0, 2*PI] -> [-PI/2, PI/2]\nconst signedAngle = angle =>\n  angle > Math.PI ? 1.5 * Math.PI - angle : 0.5 * Math.PI - angle;\n\n/**\n * angles are stored in radians from in [0, 2*PI], where 0 in 12 o'clock.\n * However, one can only select lines from 0 to PI, so we compute the\n * 'signed' angle, where 0 is the horizontal line (3 o'clock), and +/- PI/2\n * are 12 and 6 o'clock respectively.\n */\nconst containmentTest = arc => a => {\n  let startAngle = signedAngle(arc.startAngle);\n  let endAngle = signedAngle(arc.endAngle);\n\n  if (startAngle > endAngle) {\n    const tmp = startAngle;\n    startAngle = endAngle;\n    endAngle = tmp;\n  }\n\n  // test if segment angle is contained in angle interval\n  return a >= startAngle && a <= endAngle;\n};\n\nconst crossesStrum = (state, config) => (d, id) => {\n  const arc = state.arcs[id],\n    test = containmentTest(arc),\n    d1 = arc.dims.left,\n    d2 = arc.dims.right,\n    y1 = config.dimensions[d1].yscale,\n    y2 = config.dimensions[d2].yscale,\n    a = state.arcs.width(id),\n    b = y1(d[d1]) - y2(d[d2]),\n    c = hypothenuse(a, b),\n    angle = Math.asin(b / c); // rad in [-PI/2, PI/2]\n  return test(angle);\n};\n\nconst selected = (brushGroup, state, config) => {\n  const ids = Object.getOwnPropertyNames(state.arcs).filter(d => !isNaN(d));\n  const brushed = config.data;\n\n  if (ids.length === 0) {\n    return brushed;\n  }\n\n  const crossTest = crossesStrum(state, config);\n\n  return brushed.filter(d => {\n    switch (brushGroup.predicate) {\n      case 'AND':\n        return ids.every(id => crossTest(d, id));\n      case 'OR':\n        return ids.some(id => crossTest(d, id));\n      default:\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\n    }\n  });\n};\n\nexport default selected;\n","const removeStrum = (state, pc) => {\n  const arc = state.arcs[state.arcs.active],\n    svg = pc.selection.select('svg').select('g#arcs');\n\n  delete state.arcs[state.arcs.active];\n  state.arcs.active = undefined;\n  svg.selectAll('line#arc-' + arc.dims.i).remove();\n  svg.selectAll('circle#arc-' + arc.dims.i).remove();\n  svg.selectAll('path#arc-' + arc.dims.i).remove();\n};\n\nexport default removeStrum;\n","import selected from './selected';\nimport removeStrum from './removeStrum';\n\nconst onDragEnd = (brushGroup, state, config, pc, events) => () => {\n  const arc = state.arcs[state.arcs.active];\n\n  // Okay, somewhat unexpected, but not totally unsurprising, a mousclick is\n  // considered a drag without move. So we have to deal with that case\n  if (arc && arc.p1[0] === arc.p2[0] && arc.p1[1] === arc.p2[1]) {\n    removeStrum(state, pc);\n  }\n\n  if (arc) {\n    const angle = state.arcs.startAngle(state.arcs.active);\n\n    arc.startAngle = angle;\n    arc.endAngle = angle;\n    arc.arc\n      .outerRadius(state.arcs.length(state.arcs.active))\n      .startAngle(angle)\n      .endAngle(angle);\n  }\n\n  state.arcs.active = undefined;\n  config.brushed = selected(brushGroup, state, config);\n  pc.renderBrushed();\n  events.call('brushend', pc, config.brushed);\n};\n\nexport default onDragEnd;\n","import { event, select } from 'd3-selection';\nimport { drag } from 'd3-drag';\nimport onDragEnd from './onDragEnd';\n\nconst drawStrum = (brushGroup, state, config, pc, events, arc, activePoint) => {\n  const svg = pc.selection.select('svg').select('g#arcs'),\n    id = arc.dims.i,\n    points = [arc.p2, arc.p3],\n    _line = svg\n      .selectAll('line#arc-' + id)\n      .data([{ p1: arc.p1, p2: arc.p2 }, { p1: arc.p1, p2: arc.p3 }]),\n    circles = svg.selectAll('circle#arc-' + id).data(points),\n    _drag = drag(),\n    _path = svg.selectAll('path#arc-' + id).data([arc]);\n\n  _path\n    .enter()\n    .append('path')\n    .attr('id', 'arc-' + id)\n    .attr('class', 'arc')\n    .style('fill', 'orange')\n    .style('opacity', 0.5);\n\n  _path\n    .attr('d', arc.arc)\n    .attr('transform', 'translate(' + arc.p1[0] + ',' + arc.p1[1] + ')');\n\n  _line\n    .enter()\n    .append('line')\n    .attr('id', 'arc-' + id)\n    .attr('class', 'arc');\n\n  _line\n    .attr('x1', d => d.p1[0])\n    .attr('y1', d => d.p1[1])\n    .attr('x2', d => d.p2[0])\n    .attr('y2', d => d.p2[1])\n    .attr('stroke', 'black')\n    .attr('stroke-width', 2);\n\n  _drag\n    .on('drag', (d, i) => {\n      const ev = event;\n      i = i + 2;\n\n      arc['p' + i][0] = Math.min(Math.max(arc.minX + 1, ev.x), arc.maxX);\n      arc['p' + i][1] = Math.min(Math.max(arc.minY, ev.y), arc.maxY);\n\n      const angle =\n        i === 3 ? state.arcs.startAngle(id) : state.arcs.endAngle(id);\n\n      if (\n        (arc.startAngle < Math.PI &&\n          arc.endAngle < Math.PI &&\n          angle < Math.PI) ||\n        (arc.startAngle >= Math.PI &&\n          arc.endAngle >= Math.PI &&\n          angle >= Math.PI)\n      ) {\n        if (i === 2) {\n          arc.endAngle = angle;\n          arc.arc.endAngle(angle);\n        } else if (i === 3) {\n          arc.startAngle = angle;\n          arc.arc.startAngle(angle);\n        }\n      }\n\n      drawStrum(brushGroup, state, config, pc, events, arc, i - 2);\n    })\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\n\n  circles\n    .enter()\n    .append('circle')\n    .attr('id', 'arc-' + id)\n    .attr('class', 'arc');\n\n  circles\n    .attr('cx', d => d[0])\n    .attr('cy', d => d[1])\n    .attr('r', 5)\n    .style(\n      'opacity',\n      (d, i) => (activePoint !== undefined && i === activePoint ? 0.8 : 0)\n    )\n    .on('mouseover', function() {\n      select(this).style('opacity', 0.8);\n    })\n    .on('mouseout', function() {\n      select(this).style('opacity', 0);\n    })\n    .call(_drag);\n};\n\nconst onDrag = (brushGroup, state, config, pc, events) => () => {\n  const ev = event,\n    arc = state.arcs[state.arcs.active];\n\n  // Make sure that the point is within the bounds\n  arc.p2[0] = Math.min(\n    Math.max(arc.minX + 1, ev.x - config.margin.left),\n    arc.maxX\n  );\n  arc.p2[1] = Math.min(Math.max(arc.minY, ev.y - config.margin.top), arc.maxY);\n  arc.p3 = arc.p2.slice();\n  drawStrum(brushGroup, state, config, pc, events, arc, 1);\n};\n\nexport default onDrag;\n","import { mouse } from 'd3-selection';\nimport { arc as d3Arc } from 'd3-shape';\nimport dimensionsForPoint from '../dimensionsForPoint';\nimport h from '../../util/height';\n\n// First we need to determine between which two axes the arc was started.\n// This will determine the freedom of movement, because a arc can\n// logically only happen between two axes, so no movement outside these axes\n// should be allowed.\nconst onDragStart = (state, config, pc, xscale) => () => {\n  const p = mouse(state.strumRect.node());\n\n  p[0] = p[0] - config.margin.left;\n  p[1] = p[1] - config.margin.top;\n\n  const dims = dimensionsForPoint(config, pc, xscale, p);\n  const arc = {\n    p1: p,\n    dims: dims,\n    minX: xscale(dims.left),\n    maxX: xscale(dims.right),\n    minY: 0,\n    maxY: h(config),\n    startAngle: undefined,\n    endAngle: undefined,\n    arc: d3Arc().innerRadius(0),\n  };\n\n  // Make sure that the point is within the bounds\n  arc.p1[0] = Math.min(Math.max(arc.minX, p[0]), arc.maxX);\n  arc.p2 = arc.p1.slice();\n  arc.p3 = arc.p1.slice();\n\n  state.arcs[dims.i] = arc;\n  state.arcs.active = dims.i;\n};\n\nexport default onDragStart;\n","import onDragEnd from './onDragEnd';\nimport removeStrum from './removeStrum';\n\nconst brushReset = (brushGroup, state, config, pc, events) => () => {\n  const ids = Object.getOwnPropertyNames(state.arcs).filter(d => !isNaN(d));\n\n  ids.forEach(d => {\n    state.arcs.active = d;\n    removeStrum(state, pc);\n  });\n  onDragEnd(brushGroup, state, config, pc, events)();\n};\n\nexport default brushReset;\n","import { drag } from 'd3-drag';\nimport onDragEnd from './onDragEnd';\nimport onDrag from './onDrag';\nimport onDragStart from './onDragStart';\nimport removeStrum from './removeStrum';\nimport brushReset from './brushReset';\nimport w from '../../util/width';\nimport h from '../../util/height';\n\nimport hypothenuse from './util/hypothenuse';\nimport consecutive from '../consecutive';\n\n// returns angles in [-PI/2, PI/2]\nconst angle = (p1, p2) => {\n  const a = p1[0] - p2[0],\n    b = p1[1] - p2[1],\n    c = hypothenuse(a, b);\n\n  return Math.asin(b / c);\n};\n\nconst endAngle = state => id => {\n  const arc = state.arcs[id];\n  if (arc === undefined) {\n    return undefined;\n  }\n  let sAngle = angle(arc.p1, arc.p2),\n    uAngle = -sAngle + Math.PI / 2;\n\n  if (arc.p1[0] > arc.p2[0]) {\n    uAngle = 2 * Math.PI - uAngle;\n  }\n\n  return uAngle;\n};\n\nconst startAngle = state => id => {\n  const arc = state.arcs[id];\n  if (arc === undefined) {\n    return undefined;\n  }\n\n  let sAngle = angle(arc.p1, arc.p3),\n    uAngle = -sAngle + Math.PI / 2;\n\n  if (arc.p1[0] > arc.p3[0]) {\n    uAngle = 2 * Math.PI - uAngle;\n  }\n\n  return uAngle;\n};\n\nconst length = state => id => {\n  const arc = state.arcs[id];\n\n  if (arc === undefined) {\n    return undefined;\n  }\n\n  const a = arc.p1[0] - arc.p2[0],\n    b = arc.p1[1] - arc.p2[1];\n\n  return hypothenuse(a, b);\n};\n\nconst install = (brushGroup, state, config, pc, events, xscale) => () => {\n  if (!pc.g()) {\n    pc.createAxes();\n  }\n\n  const _drag = drag();\n\n  // Map of current arcs. arcs are stored per segment of the PC. A segment,\n  // being the area between two axes. The left most area is indexed at 0.\n  state.arcs.active = undefined;\n  // Returns the width of the PC segment where currently a arc is being\n  // placed. NOTE: even though they are evenly spaced in our current\n  // implementation, we keep for when non-even spaced segments are supported as\n  // well.\n  state.arcs.width = id => {\n    const arc = state.arcs[id];\n    return arc === undefined ? undefined : arc.maxX - arc.minX;\n  };\n\n  // returns angles in [0, 2 * PI]\n  state.arcs.endAngle = endAngle(state);\n  state.arcs.startAngle = startAngle(state);\n  state.arcs.length = length(state);\n\n  pc.on('axesreorder.arcs', () => {\n    const ids = Object.getOwnPropertyNames(arcs).filter(d => !isNaN(d));\n\n    if (ids.length > 0) {\n      // We have some arcs, which might need to be removed.\n      ids.forEach(d => {\n        const dims = arcs[d].dims;\n        state.arcs.active = d;\n        // If the two dimensions of the current arc are not next to each other\n        // any more, than we'll need to remove the arc. Otherwise we keep it.\n        if (!consecutive(dims)(dims.left, dims.right)) {\n          removeStrum(state, pc);\n        }\n      });\n      onDragEnd(brushGroup, state, config, pc, events)();\n    }\n  });\n\n  // Add a new svg group in which we draw the arcs.\n  pc.selection\n    .select('svg')\n    .append('g')\n    .attr('id', 'arcs')\n    .attr(\n      'transform',\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\n    );\n\n  // Install the required brushReset function\n  pc.brushReset = brushReset(brushGroup, state, config, pc, events);\n\n  _drag\n    .on('start', onDragStart(state, config, pc, xscale))\n    .on('drag', onDrag(brushGroup, state, config, pc, events))\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\n\n  // NOTE: The styling needs to be done here and not in the css. This is because\n  //       for 1D brushing, the canvas layers should not listen to\n  //       pointer-events._.\n  state.strumRect = pc.selection\n    .select('svg')\n    .insert('rect', 'g#arcs')\n    .attr('id', 'arc-events')\n    .attr('x', config.margin.left)\n    .attr('y', config.margin.top)\n    .attr('width', w(config))\n    .attr('height', h(config) + 2)\n    .style('opacity', 0)\n    .call(_drag);\n};\n\nexport default install;\n","import uninstall from './uninstall';\nimport install from './install';\nimport selected from './selected';\n\nconst BrushState = {\n  arcs: {},\n  strumRect: {},\n};\n\nconst installAngularBrush = (brushGroup, config, pc, events, xscale) => {\n  const state = Object.assign({}, BrushState);\n\n  brushGroup.modes['angular'] = {\n    install: install(brushGroup, state, config, pc, events, xscale),\n    uninstall: uninstall(state, pc),\n    selected: selected(brushGroup, state, config),\n    brushState: () => state.arcs,\n  };\n};\n\nexport default installAngularBrush;\n","// calculate 2d intersection of line a->b with line c->d\n// points are objects with x and y properties\nconst intersection = (a, b, c, d) => {\n  return {\n    x:\n      ((a.x * b.y - a.y * b.x) * (c.x - d.x) -\n        (a.x - b.x) * (c.x * d.y - c.y * d.x)) /\n      ((a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x)),\n    y:\n      ((a.x * b.y - a.y * b.x) * (c.y - d.y) -\n        (a.y - b.y) * (c.x * d.y - c.y * d.x)) /\n      ((a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x)),\n  };\n};\n\nexport default intersection;\n","// Merges the canvases and SVG elements into one canvas element which is then passed into the callback\n// (so you can choose to save it to disk, etc.)\nconst mergeParcoords = pc => callback => {\n  // Retina display, etc.\n  const devicePixelRatio = window.devicePixelRatio || 1;\n\n  // Create a canvas element to store the merged canvases\n  const mergedCanvas = document.createElement('canvas');\n  mergedCanvas.width = pc.canvas.foreground.clientWidth * devicePixelRatio;\n  mergedCanvas.height =\n    (pc.canvas.foreground.clientHeight + 30) * devicePixelRatio;\n  mergedCanvas.style.width = mergedCanvas.width / devicePixelRatio + 'px';\n  mergedCanvas.style.height = mergedCanvas.height / devicePixelRatio + 'px';\n\n  // Give the canvas a white background\n  const context = mergedCanvas.getContext('2d');\n  context.fillStyle = '#ffffff';\n  context.fillRect(0, 0, mergedCanvas.width, mergedCanvas.height);\n\n  // Merge all the canvases\n  for (const key in pc.canvas) {\n    context.drawImage(\n      pc.canvas[key],\n      0,\n      24 * devicePixelRatio,\n      mergedCanvas.width,\n      mergedCanvas.height - 30 * devicePixelRatio\n    );\n  }\n\n  // Add SVG elements to canvas\n  const DOMURL = window.URL || window.webkitURL || window;\n  const serializer = new XMLSerializer();\n  const svgStr = serializer.serializeToString(\n    pc.selection.select('svg').node()\n  );\n\n  // Create a Data URI.\n  const src = 'data:image/svg+xml;base64,' + window.btoa(svgStr);\n  const img = new Image();\n  img.onload = () => {\n    context.drawImage(\n      img,\n      0,\n      0,\n      img.width * devicePixelRatio,\n      img.height * devicePixelRatio\n    );\n    if (typeof callback === 'function') {\n      callback(mergedCanvas);\n    }\n  };\n  img.src = src;\n};\n\nexport default mergeParcoords;\n","import { brushSelection } from 'd3-brush';\nimport { selectAll } from 'd3-selection';\n\nconst selected = config => {\n  let actives = [];\n  let extents = [];\n  let ranges = {};\n  //get brush selections from each node, convert to actual values\n  //invert order of values in array to comply with the parcoords architecture\n  if (config.brushes.length === 0) {\n    let nodes = selectAll('.brush').nodes();\n    for (let k = 0; k < nodes.length; k++) {\n      if (brushSelection(nodes[k]) !== null) {\n        actives.push(nodes[k].__data__);\n        let values = [];\n        let ranger = brushSelection(nodes[k]);\n        if (\n          typeof config.dimensions[nodes[k].__data__].yscale.domain()[0] ===\n          'number'\n        ) {\n          for (let i = 0; i < ranger.length; i++) {\n            if (\n              actives.includes(nodes[k].__data__) &&\n              config.flipAxes.includes(nodes[k].__data__)\n            ) {\n              values.push(\n                config.dimensions[nodes[k].__data__].yscale.invert(ranger[i])\n              );\n            } else if (config.dimensions[nodes[k].__data__].yscale() !== 1) {\n              values.unshift(\n                config.dimensions[nodes[k].__data__].yscale.invert(ranger[i])\n              );\n            }\n          }\n          extents.push(values);\n          for (let ii = 0; ii < extents.length; ii++) {\n            if (extents[ii].length === 0) {\n              extents[ii] = [1, 1];\n            }\n          }\n        } else {\n          ranges[nodes[k].__data__] = brushSelection(nodes[k]);\n          let dimRange = config.dimensions[nodes[k].__data__].yscale.range();\n          let dimDomain = config.dimensions[nodes[k].__data__].yscale.domain();\n          for (let j = 0; j < dimRange.length; j++) {\n            if (\n              dimRange[j] >= ranger[0] &&\n              dimRange[j] <= ranger[1] &&\n              actives.includes(nodes[k].__data__) &&\n              config.flipAxes.includes(nodes[k].__data__)\n            ) {\n              values.push(dimRange[j]);\n            } else if (dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) {\n              values.unshift(dimRange[j]);\n            }\n          }\n          extents.push(values);\n          for (let ii = 0; ii < extents.length; ii++) {\n            if (extents[ii].length === 0) {\n              extents[ii] = [1, 1];\n            }\n          }\n        }\n      }\n    }\n    // test if within range\n    const within = {\n      date: function(d, p, dimension) {\n        let category = d[p];\n        let categoryIndex = config.dimensions[p].yscale\n          .domain()\n          .indexOf(category);\n        let categoryRangeValue = config.dimensions[p].yscale.range()[\n          categoryIndex\n        ];\n        return (\n          categoryRangeValue >= ranges[p][0] &&\n          categoryRangeValue <= ranges[p][1]\n        );\n      },\n      number: function(d, p, dimension) {\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\n      },\n      string: function(d, p, dimension) {\n        let category = d[p];\n        let categoryIndex = config.dimensions[p].yscale\n          .domain()\n          .indexOf(category);\n        let categoryRangeValue = config.dimensions[p].yscale.range()[\n          categoryIndex\n        ];\n        return (\n          categoryRangeValue >= ranges[p][0] &&\n          categoryRangeValue <= ranges[p][1]\n        );\n      },\n    };\n    return config.data.filter(d =>\n      actives.every((p, dimension) =>\n        within[config.dimensions[p].type](d, p, dimension)\n      )\n    );\n  } else {\n    // need to get data from each brush instead of each axis\n    // first must find active axes by iterating through all brushes\n    // then go through similiar process as above.\n    let multiBrushData = [];\n    for (let idx = 0; idx < config.brushes.length; idx++) {\n      let brush = config.brushes[idx];\n      let values = [];\n      let ranger = brush.extent;\n      let actives = [brush.data];\n      if (\n        typeof config.dimensions[brush.data].yscale.domain()[0] === 'number'\n      ) {\n        for (let i = 0; i < ranger.length; i++) {\n          if (\n            actives.includes(brush.data) &&\n            config.flipAxes.includes(brush.data)\n          ) {\n            values.push(config.dimensions[brush.data].yscale.invert(ranger[i]));\n          } else if (config.dimensions[brush.data].yscale() !== 1) {\n            values.unshift(\n              config.dimensions[brush.data].yscale.invert(ranger[i])\n            );\n          }\n        }\n        extents.push(values);\n        for (let ii = 0; ii < extents.length; ii++) {\n          if (extents[ii].length === 0) {\n            extents[ii] = [1, 1];\n          }\n        }\n      } else {\n        ranges[brush.data] = brush.extent;\n        let dimRange = config.dimensions[brush.data].yscale.range();\n        let dimDomain = config.dimensions[brush.data].yscale.domain();\n        for (let j = 0; j < dimRange.length; j++) {\n          if (\n            dimRange[j] >= ranger[0] &&\n            dimRange[j] <= ranger[1] &&\n            actives.includes(brush.data) &&\n            config.flipAxes.includes(brush.data)\n          ) {\n            values.push(dimRange[j]);\n          } else if (dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) {\n            values.unshift(dimRange[j]);\n          }\n        }\n        extents.push(values);\n        for (let ii = 0; ii < extents.length; ii++) {\n          if (extents[ii].length === 0) {\n            extents[ii] = [1, 1];\n          }\n        }\n      }\n      let within = {\n        date: function(d, p, dimension) {\n          let category = d[p];\n          let categoryIndex = config.dimensions[p].yscale\n            .domain()\n            .indexOf(category);\n          let categoryRangeValue = config.dimensions[p].yscale.range()[\n            categoryIndex\n          ];\n          return (\n            categoryRangeValue >= ranges[p][0] &&\n            categoryRangeValue <= ranges[p][1]\n          );\n        },\n        number: function(d, p, dimension) {\n          return extents[idx][0] <= d[p] && d[p] <= extents[idx][1];\n        },\n        string: function(d, p, dimension) {\n          let category = d[p];\n          let categoryIndex = config.dimensions[p].yscale\n            .domain()\n            .indexOf(category);\n          let categoryRangeValue = config.dimensions[p].yscale.range()[\n            categoryIndex\n          ];\n          return (\n            categoryRangeValue >= ranges[p][0] &&\n            categoryRangeValue <= ranges[p][1]\n          );\n        },\n      };\n\n      // filter data, but instead of returning it now,\n      // put it into multiBrush data which is returned after\n      // all brushes are iterated through.\n      let filtered = config.data.filter(d =>\n        actives.every((p, dimension) =>\n          within[config.dimensions[p].type](d, p, dimension)\n        )\n      );\n      for (let z = 0; z < filtered.length; z++) {\n        multiBrushData.push(filtered[z]);\n      }\n      actives = [];\n      ranges = {};\n    }\n    return multiBrushData;\n  }\n};\n\nexport default selected;\n","const brushPredicate = (brushGroup, config, pc) => (predicate = null) => {\n  if (predicate === null) {\n    return brushGroup.predicate;\n  }\n\n  predicate = String(predicate).toUpperCase();\n  if (predicate !== 'AND' && predicate !== 'OR') {\n    throw new Error('Invalid predicate ' + predicate);\n  }\n\n  brushGroup.predicate = predicate;\n  console.log(brushGroup.currentMode());\n  config.brushed = brushGroup.currentMode().selected();\n  pc.renderBrushed();\n  return pc;\n};\n\nconst brushMode = (brushGroup, config, pc) => (mode = null) => {\n  if (mode === null) {\n    return brushGroup.mode;\n  }\n\n  if (pc.brushModes().indexOf(mode) === -1) {\n    throw new Error('pc.brushmode: Unsupported brush mode: ' + mode);\n  }\n\n  // Make sure that we don't trigger unnecessary events by checking if the mode\n  // actually changes.\n  if (mode !== brushGroup.mode) {\n    // When changing brush modes, the first thing we need to do is clearing any\n    // brushes from the current mode, if any.\n    if (brushGroup.mode !== 'None') {\n      pc.brushReset();\n    }\n\n    // Next, we need to 'uninstall' the current brushMode.\n    brushGroup.modes[brushGroup.mode].uninstall(pc);\n    // Finally, we can install the requested one.\n    brushGroup.mode = mode;\n    brushGroup.modes[brushGroup.mode].install();\n    if (mode === 'None') {\n      delete pc.brushPredicate;\n    } else {\n      pc.brushPredicate = brushPredicate(brushGroup, config, pc);\n    }\n  }\n\n  return pc;\n};\n\nexport default brushMode;\n","/**\n * dimension display names\n *\n * @param config\n * @param d\n * @returns {*}\n */\nconst dimensionLabels = config => d =>\n  config.dimensions[d].title ? config.dimensions[d].title : d;\n\nexport default dimensionLabels;\n","import { select } from 'd3-selection';\n\nconst flipAxisAndUpdatePCP = (config, pc, axis) =>\n  function(dimension) {\n    pc.flip(dimension);\n    pc.brushReset(dimension);\n    select(this.parentElement)\n      .transition()\n      .duration(config.animationTime)\n      .call(axis.scale(config.dimensions[dimension].yscale));\n    pc.render();\n  };\n\nexport default flipAxisAndUpdatePCP;\n","import { event } from 'd3-selection';\n\nconst rotateLabels = (config, pc) => {\n  if (!config.rotateLabels) return;\n\n  let delta = event.deltaY;\n  delta = delta < 0 ? -5 : delta;\n  delta = delta > 0 ? 5 : delta;\n\n  config.dimensionTitleRotation += delta;\n  pc.svg\n    .selectAll('text.label')\n    .attr(\n      'transform',\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\n    );\n  event.preventDefault();\n};\n\nexport default rotateLabels;\n","import { select } from 'd3-selection';\n\nimport dimensionLabels from '../util/dimensionLabels';\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\nimport rotateLabels from '../util/rotateLabels';\n\nconst updateAxes = (config, pc, position, axis, flags) => (\n  animationTime = null\n) => {\n  if (animationTime === null) {\n    animationTime = config.animationTime;\n  }\n\n  const g_data = pc.svg\n    .selectAll('.dimension')\n    .data(pc.getOrderedDimensionKeys());\n  // Enter\n  g_data\n    .enter()\n    .append('svg:g')\n    .attr('class', 'dimension')\n    .attr('transform', p => 'translate(' + position(p) + ')')\n    .style('opacity', 0)\n    .append('svg:g')\n    .attr('class', 'axis')\n    .attr('transform', 'translate(0,0)')\n    .each(function(d) {\n      const axisElement = select(this).call(\n        pc.applyAxisConfig(axis, config.dimensions[d])\n      );\n\n      axisElement\n        .selectAll('path')\n        .style('fill', 'none')\n        .style('stroke', '#222')\n        .style('shape-rendering', 'crispEdges');\n\n      axisElement\n        .selectAll('line')\n        .style('fill', 'none')\n        .style('stroke', '#222')\n        .style('shape-rendering', 'crispEdges');\n    })\n    .append('svg:text')\n    .attr({\n      'text-anchor': 'middle',\n      y: 0,\n      transform:\n        'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')',\n      x: 0,\n      class: 'label',\n    })\n    .text(dimensionLabels(config))\n    .on('dblclick', flipAxisAndUpdatePCP(config, pc, axis))\n    .on('wheel', rotateLabels(config, pc));\n\n  // Update\n  g_data.attr('opacity', 0);\n  g_data\n    .select('.axis')\n    .transition()\n    .duration(animationTime)\n    .each(function(d) {\n      select(this).call(pc.applyAxisConfig(axis, config.dimensions[d]));\n    });\n  g_data\n    .select('.label')\n    .transition()\n    .duration(animationTime)\n    .text(dimensionLabels(config))\n    .attr(\n      'transform',\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\n    );\n\n  // Exit\n  g_data.exit().remove();\n\n  g = pc.svg.selectAll('.dimension');\n  g\n    .transition()\n    .duration(animationTime)\n    .attr('transform', p => 'translate(' + position(p) + ')')\n    .style('opacity', 1);\n\n  pc.svg\n    .selectAll('.axis')\n    .transition()\n    .duration(animationTime)\n    .each(function(d) {\n      select(this).call(pc.applyAxisConfig(axis, config.dimensions[d]));\n    });\n\n  if (flags.brushable) pc.brushable();\n  if (flags.reorderable) pc.reorderable();\n  if (pc.brushMode() !== 'None') {\n    let mode = pc.brushMode();\n    pc.brushMode('None');\n    pc.brushMode(mode);\n  }\n  return this;\n};\n\nexport default updateAxes;\n","/** adjusts an axis' default range [h()+1, 1] if a NullValueSeparator is set */\nconst getRange = config => {\n  const h = config.height - config.margin.top - config.margin.bottom;\n\n  if (config.nullValueSeparator == 'bottom') {\n    return [\n      h +\n        1 -\n        config.nullValueSeparatorPadding.bottom -\n        config.nullValueSeparatorPadding.top,\n      1,\n    ];\n  } else if (config.nullValueSeparator == 'top') {\n    return [\n      h + 1,\n      1 +\n        config.nullValueSeparatorPadding.bottom +\n        config.nullValueSeparatorPadding.top,\n    ];\n  }\n  return [h + 1, 1];\n};\n\nexport default getRange;\n","import { scaleLinear, scaleOrdinal, scalePoint, scaleTime } from 'd3-scale';\nimport { extent } from 'd3-array';\n\nimport getRange from '../util/getRange';\nimport w from '../util/width';\nimport h from '../util/height';\n\nconst autoscale = (config, pc, xscale, ctx) =>\n  function() {\n    // yscale\n    const defaultScales = {\n      date: function(k) {\n        let _extent = extent(config.data, d => (d[k] ? d[k].getTime() : null));\n        // special case if single value\n        if (_extent[0] === _extent[1]) {\n          return scalePoint()\n            .domain(_extent)\n            .range(getRange(config));\n        }\n        if (config.flipAxes.includes(k)) {\n          _extent = _extent.map(val => tempDate.unshift(val));\n        }\n        return scaleTime()\n          .domain(_extent)\n          .range(getRange(config));\n      },\n      number: function(k) {\n        let _extent = extent(config.data, d => +d[k]);\n        // special case if single value\n        if (_extent[0] === _extent[1]) {\n          return scalePoint()\n            .domain(_extent)\n            .range(getRange(config));\n        }\n        if (config.flipAxes.includes(k)) {\n          _extent = _extent.map(val => tempDate.unshift(val));\n        }\n        return scaleLinear()\n          .domain(_extent)\n          .range(getRange(config));\n      },\n      string: function(k) {\n        let counts = {},\n          domain = [];\n        // Let's get the count for each value so that we can sort the domain based\n        // on the number of items for each value.\n        config.data.map(p => {\n          if (p[k] === undefined && config.nullValueSeparator !== 'undefined') {\n            return null; // null values will be drawn beyond the horizontal null value separator!\n          }\n          if (counts[p[k]] === undefined) {\n            counts[p[k]] = 1;\n          } else {\n            counts[p[k]] = counts[p[k]] + 1;\n          }\n        });\n        if (config.flipAxes.includes(k)) {\n          domain = Object.getOwnPropertyNames(counts).sort();\n        } else {\n          let tempArr = Object.getOwnPropertyNames(counts).sort();\n          for (let i = 0; i < Object.getOwnPropertyNames(counts).length; i++) {\n            domain.push(tempArr.pop());\n          }\n        }\n\n        //need to create an ordinal scale for categorical data\n        let categoricalRange = [];\n        if (domain.length === 1) {\n          //edge case\n          domain = [' ', domain[0], ' '];\n        }\n        let addBy = getRange(config)[0] / (domain.length - 1);\n        for (let j = 0; j < domain.length; j++) {\n          if (categoricalRange.length === 0) {\n            categoricalRange.push(0);\n            continue;\n          }\n          categoricalRange.push(categoricalRange[j - 1] + addBy);\n        }\n        return scaleOrdinal()\n          .domain(domain)\n          .range(categoricalRange);\n      },\n    };\n    Object.keys(config.dimensions).forEach(function(k) {\n      if (\n        config.dimensions[k].yscale === undefined ||\n        config.dimensions[k].yscale === null\n      )\n        config.dimensions[k].yscale = defaultScales[config.dimensions[k].type](\n          k\n        );\n    });\n\n    // xscale\n    xscale.range([0, w(config)], 1);\n    // Retina display, etc.\n    const devicePixelRatio = window.devicePixelRatio || 1;\n\n    // canvas sizes\n    pc.selection\n      .selectAll('canvas')\n      .style('margin-top', config.margin.top + 'px')\n      .style('margin-left', config.margin.left + 'px')\n      .style('width', w(config) + 2 + 'px')\n      .style('height', h(config) + 2 + 'px')\n      .attr('width', (w(config) + 2) * devicePixelRatio)\n      .attr('height', (h(config) + 2) * devicePixelRatio);\n    // default styles, needs to be set when canvas width changes\n    ctx.foreground.strokeStyle = config.color;\n    ctx.foreground.lineWidth = 1.4;\n    ctx.foreground.globalCompositeOperation = config.composite;\n    ctx.foreground.globalAlpha = config.alpha;\n    ctx.foreground.scale(devicePixelRatio, devicePixelRatio);\n    ctx.brushed.strokeStyle = config.brushedColor;\n    ctx.brushed.lineWidth = 1.4;\n    ctx.brushed.globalCompositeOperation = config.composite;\n    ctx.brushed.globalAlpha = config.alpha;\n    ctx.brushed.scale(devicePixelRatio, devicePixelRatio);\n    ctx.highlight.lineWidth = 3;\n    ctx.highlight.scale(devicePixelRatio, devicePixelRatio);\n\n    return this;\n  };\n\nexport default autoscale;\n","import { brushSelection, brushY } from 'd3-brush';\nimport { event, select } from 'd3-selection';\n\nconst brushable = (config, pc, flags) =>\n  function() {\n    if (!pc.g()) {\n      pc.createAxes();\n    }\n\n    const g = pc.g();\n\n    // Add and store a brush for each axis.\n    g\n      .append('svg:g')\n      .attr('class', 'brush')\n      .each(function(d) {\n        if (config.dimensions[d] !== undefined) {\n          config.dimensions[d]['brush'] = brushY(select(this)).extent([\n            [-15, 0],\n            [15, config.dimensions[d].yscale.range()[0]],\n          ]);\n          select(this).call(\n            config.dimensions[d]['brush']\n              .on('start', function() {\n                if (event.sourceEvent !== null && !event.sourceEvent.ctrlKey) {\n                  pc.brushReset();\n                }\n              })\n              .on('brush', function() {\n                if (!event.sourceEvent.ctrlKey) {\n                  pc.brush();\n                }\n              })\n              .on('end', function() {\n                // save brush selection is ctrl key is held\n                // store important brush information and\n                // the html element of the selection,\n                // to make a dummy selection element\n                if (event.sourceEvent.ctrlKey) {\n                  let html = select(this)\n                    .select('.selection')\n                    .nodes()[0].outerHTML;\n                  html = html.replace(\n                    'class=\"selection\"',\n                    'class=\"selection dummy' +\n                      ' selection-' +\n                      config.brushes.length +\n                      '\"'\n                  );\n                  let dat = select(this).nodes()[0].__data__;\n                  let brush = {\n                    id: config.brushes.length,\n                    extent: brushSelection(this),\n                    html: html,\n                    data: dat,\n                  };\n                  config.brushes.push(brush);\n                  select(select(this).nodes()[0].parentNode)\n                    .select('.axis')\n                    .nodes()[0].outerHTML += html;\n                  pc.brush();\n                  config.dimensions[d].brush.move(select(this, null));\n                  select(this)\n                    .select('.selection')\n                    .attr('style', 'display:none');\n                  pc.brushable();\n                } else {\n                  pc.brush();\n                }\n              })\n          );\n          select(this).on('dblclick', function() {\n            pc.brushReset(d);\n          });\n        }\n      });\n\n    flags.brushable = true;\n    return this;\n  };\n\nexport default brushable;\n","import { extent } from 'd3-array';\n\nconst commonScale = (config, pc) =>\n  function(global, type) {\n    const t = type || 'number';\n    if (typeof global === 'undefined') {\n      global = true;\n    }\n\n    // try to autodetect dimensions and create scales\n    if (!Object.keys(config.dimensions).length) {\n      pc.detectDimensions();\n    }\n    pc.autoscale();\n\n    // scales of the same type\n    const scales = Object.keys(config.dimensions).filter(\n      p => config.dimensions[p].type == t\n    );\n\n    if (global) {\n      let _extent = extent(\n        scales\n          .map(d => config.dimensions[d].yscale.domain())\n          .reduce((cur, acc) => cur.concat(acc))\n      );\n\n      scales.forEach(d => {\n        config.dimensions[d].yscale.domain(_extent);\n      });\n    } else {\n      scales.forEach(d => {\n        config.dimensions[d].yscale.domain(extent(config.data, d => +d[k]));\n      });\n    }\n\n    // update centroids\n    if (config.bundleDimension !== null) {\n      pc.bundleDimension(config.bundleDimension);\n    }\n\n    return this;\n  };\n\nexport default commonScale;\n","const computeRealCentroids = (dimensions, position) => row =>\n  Object.keys(dimensions).map(d => {\n    const x = position(d);\n    const y = dimensions[d].yscale(row[d]);\n    return [x, y];\n  });\n\nexport default computeRealCentroids;\n","const applyDimensionDefaults = (config, pc) =>\n  function(dims) {\n    const types = pc.detectDimensionTypes(config.data);\n    dims = dims ? dims : Object.keys(types);\n\n    return dims.reduce((acc, cur, i) => {\n      const k = config.dimensions[cur] ? config.dimensions[cur] : {};\n\n      acc[cur] = {\n        ...k,\n        orient: k.orient ? k.orient : 'left',\n        ticks: k.ticks != null ? k.ticks : 5,\n        innerTickSize: k.innerTickSize != null ? k.innerTickSize : 6,\n        outerTickSize: k.outerTickSize != null ? k.outerTickSize : 0,\n        tickPadding: k.tickPadding != null ? k.tickPadding : 3,\n        type: k.type ? k.type : types[cur],\n        index: k.index != null ? k.index : i,\n      };\n\n      return acc;\n    }, {});\n  };\n\nexport default applyDimensionDefaults;\n","import { select } from 'd3-selection';\n\nimport dimensionLabels from '../util/dimensionLabels';\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\nimport rotateLabels from '../util/rotateLabels';\n\nimport w from '../util/width';\nimport h from '../util/height';\n\n/**\n * Create static SVG axes with dimension names, ticks, and labels.\n *\n * @param config\n * @param pc\n * @param xscale\n * @param flags\n * @param axis\n * @returns {Function}\n */\nconst createAxes = (config, pc, xscale, flags, axis) =>\n  function() {\n    if (pc.g() !== undefined) {\n      pc.removeAxes();\n    }\n    // Add a group element for each dimension.\n    pc._g = pc.svg\n      .selectAll('.dimension')\n      .data(pc.getOrderedDimensionKeys(), function(d) {\n        return d;\n      })\n      .enter()\n      .append('svg:g')\n      .attr('class', 'dimension')\n      .attr('transform', function(d) {\n        return 'translate(' + xscale(d) + ')';\n      });\n    // Add an axis and title.\n    pc._g\n      .append('svg:g')\n      .attr('class', 'axis')\n      .attr('transform', 'translate(0,0)')\n      .each(function(d) {\n        let axisElement = select(this).call(\n          pc.applyAxisConfig(axis, config.dimensions[d])\n        );\n\n        axisElement\n          .selectAll('path')\n          .style('fill', 'none')\n          .style('stroke', '#222')\n          .style('shape-rendering', 'crispEdges');\n\n        axisElement\n          .selectAll('line')\n          .style('fill', 'none')\n          .style('stroke', '#222')\n          .style('shape-rendering', 'crispEdges');\n      })\n\n      .append('svg:text')\n      .attr('text-anchor', 'middle')\n      .attr('y', 0)\n      .attr(\n        'transform',\n        'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\n      )\n      .attr('x', 0)\n      .attr('class', 'label')\n      .text(dimensionLabels(config))\n      .on('dblclick', flipAxisAndUpdatePCP(config, pc, axis))\n      .on('wheel', rotateLabels(config, pc));\n\n    if (config.nullValueSeparator == 'top') {\n      pc.svg\n        .append('line')\n        .attr('x1', 0)\n        .attr('y1', 1 + config.nullValueSeparatorPadding.top)\n        .attr('x2', w(config))\n        .attr('y2', 1 + config.nullValueSeparatorPadding.top)\n        .attr('stroke-width', 1)\n        .attr('stroke', '#777')\n        .attr('fill', 'none')\n        .attr('shape-rendering', 'crispEdges');\n    } else if (config.nullValueSeparator == 'bottom') {\n      pc.svg\n        .append('line')\n        .attr('x1', 0)\n        .attr('y1', h(config) + 1 - config.nullValueSeparatorPadding.bottom)\n        .attr('x2', w(config))\n        .attr('y2', h(config) + 1 - config.nullValueSeparatorPadding.bottom)\n        .attr('stroke-width', 1)\n        .attr('stroke', '#777')\n        .attr('fill', 'none')\n        .attr('shape-rendering', 'crispEdges');\n    }\n\n    flags.axes = true;\n    return this;\n  };\n\nexport default createAxes;\n","import { entries } from 'd3-collection';\nimport { min } from 'd3-array';\n\n//draw dots with radius r on the axis line where data intersects\nconst axisDots = (config, pc, position) => _r => {\n  const r = _r || 0.1;\n  const ctx = pc.ctx.marks;\n  const startAngle = 0;\n  const endAngle = 2 * Math.PI;\n  ctx.globalAlpha = min([1 / Math.pow(config.data.length, 1 / 2), 1]);\n  config.data.forEach(d => {\n    entries(config.dimensions).forEach((p, i) => {\n      ctx.beginPath();\n      ctx.arc(\n        position(p),\n        config.dimensions[p.key].yscale(d[p]),\n        r,\n        startAngle,\n        endAngle\n      );\n      ctx.stroke();\n      ctx.fill();\n    });\n  });\n  return this;\n};\n\nexport default axisDots;\n","import { axisBottom, axisLeft, axisRight, axisTop } from 'd3-axis';\n\nconst applyAxisConfig = (axis, dimension) => {\n  let axisCfg;\n\n  switch (dimension.orient) {\n    case 'left':\n      axisCfg = axisLeft(dimension.yscale);\n      break;\n    case 'right':\n      axisCfg = axisRight(dimension.yscale);\n      break;\n    case 'top':\n      axisCfg = axisTop(dimension.yscale);\n      break;\n    case 'bottom':\n      axisCfg = axisBottom(dimension.yscale);\n      break;\n    default:\n      axisCfg = axisLeft(dimension.yscale);\n      break;\n  }\n\n  axisCfg\n    .ticks(dimension.ticks)\n    .tickValues(dimension.tickValues)\n    .tickSizeInner(dimension.innerTickSize)\n    .tickSizeOuter(dimension.outerTickSize)\n    .tickPadding(dimension.tickPadding)\n    .tickFormat(dimension.tickFormat);\n\n  return axisCfg;\n};\n\nexport default applyAxisConfig;\n","import { drag } from 'd3-drag';\nimport { event, select } from 'd3-selection';\n\nimport w from '../util/width';\n\n// Jason Davies, http://bl.ocks.org/1341281\nconst reorderable = (config, pc, xscale, position, dragging, flags) =>\n  function() {\n    if (pc.g() === undefined) pc.createAxes();\n    const g = pc.g();\n\n    g.style('cursor', 'move').call(\n      drag()\n        .on('start', function(d) {\n          dragging[d] = this.__origin__ = xscale(d);\n        })\n        .on('drag', function(d) {\n          dragging[d] = Math.min(\n            w(config),\n            Math.max(0, (this.__origin__ += event.dx))\n          );\n          pc.sortDimensions();\n          xscale.domain(pc.getOrderedDimensionKeys());\n          pc.render();\n          g.attr('transform', d => 'translate(' + position(d) + ')');\n        })\n        .on('end', function(d) {\n          delete this.__origin__;\n          delete dragging[d];\n          select(this)\n            .transition()\n            .attr('transform', 'translate(' + xscale(d) + ')');\n          pc.render();\n        })\n    );\n    flags.reorderable = true;\n    return this;\n  };\n\nexport default reorderable;\n","// rescale for height, width and margins\n// TODO currently assumes chart is brushable, and destroys old brushes\nconst resize = (config, pc, flags, events) => {\n  return function() {\n    // selection size\n    pc.selection\n      .select('svg')\n      .attr('width', config.width)\n      .attr('height', config.height);\n    pc.svg.attr(\n      'transform',\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\n    );\n\n    // FIXME: the current brush state should pass through\n    if (flags.brushable) pc.brushReset();\n\n    // scales\n    pc.autoscale();\n\n    // axes, destroys old brushes.\n    if (pc.g()) pc.createAxes();\n    if (flags.brushable) pc.brushable();\n    if (flags.reorderable) pc.reorderable();\n\n    events.call('resize', this, {\n      width: config.width,\n      height: config.height,\n      margin: config.margin,\n    });\n\n    return this;\n  };\n};\n\nexport default resize;\n","// Reorder dimensions, such that the highest value (visually) is on the left and\n// the lowest on the right. Visual values are determined by the data values in\n// the given row.\nconst reorder = (config, pc, xscale) => rowdata => {\n  const firstDim = pc.getOrderedDimensionKeys()[0];\n\n  pc.sortDimensionsByRowData(rowdata);\n  // NOTE: this is relatively cheap given that:\n  // number of dimensions < number of data items\n  // Thus we check equality of order to prevent rerendering when this is the case.\n  const reordered = firstDim !== pc.getOrderedDimensionKeys()[0];\n\n  if (reordered) {\n    xscale.domain(pc.getOrderedDimensionKeys());\n    const highlighted = config.highlighted.slice(0);\n    pc.unhighlight();\n\n    const g = pc.g();\n    g\n      .transition()\n      .duration(1500)\n      .attr('transform', d => 'translate(' + xscale(d) + ')');\n    pc.render();\n\n    // pc.highlight() does not check whether highlighted is length zero, so we do that here.\n    if (highlighted.length !== 0) {\n      pc.highlight(highlighted);\n    }\n  }\n};\n\nexport default reorder;\n","const sortDimensions = (config, position) => () => {\n  const copy = Object.assign({}, config.dimensions);\n  const positionSortedKeys = Object.keys(config.dimensions).sort(\n    (a, b) => (position(a) - position(b) === 0 ? 1 : position(a) - position(b))\n  );\n  config.dimensions = {};\n  positionSortedKeys.forEach((p, i) => {\n    config.dimensions[p] = copy[p];\n    config.dimensions[p].index = i;\n  });\n};\n\nexport default sortDimensions;\n","const sortDimensionsByRowData = config => rowdata => {\n  const copy = Object.assign({}, config.dimensions);\n  const positionSortedKeys = Object.keys(config.dimensions).sort((a, b) => {\n    const pixelDifference =\n      config.dimensions[a].yscale(rowdata[a]) -\n      config.dimensions[b].yscale(rowdata[b]);\n\n    // Array.sort is not necessarily stable, this means that if pixelDifference is zero\n    // the ordering of dimensions might change unexpectedly. This is solved by sorting on\n    // variable name in that case.\n    return pixelDifference === 0 ? a.localeCompare(b) : pixelDifference;\n  });\n  config.dimensions = {};\n  positionSortedKeys.forEach((p, i) => {\n    config.dimensions[p] = copy[p];\n    config.dimensions[p].index = i;\n  });\n};\n\nexport default sortDimensionsByRowData;\n","const isBrushed = (config, brushGroup) => {\n  if (config.brushed && config.brushed.length !== config.data.length)\n    return true;\n\n  const object = brushGroup.currentMode().brushState();\n\n  for (let key in object) {\n    if (object.hasOwnProperty(key)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport default isBrushed;\n","import isBrushed from '../util/isBrushed';\nimport w from '../util/width';\nimport h from '../util/height';\n\nconst clear = (config, pc, ctx, brushGroup) =>\n  function(layer) {\n    ctx[layer].clearRect(0, 0, w(config) + 2, h(config) + 2);\n\n    // This will make sure that the foreground items are transparent\n    // without the need for changing the opacity style of the foreground canvas\n    // as this would stop the css styling from working\n    if (layer === 'brushed' && isBrushed(config, brushGroup)) {\n      ctx.brushed.fillStyle = pc.selection.style('background-color');\n      ctx.brushed.globalAlpha = 1 - config.alphaOnBrushed;\n      ctx.brushed.fillRect(0, 0, w(config) + 2, h(config) + 2);\n      ctx.brushed.globalAlpha = config.alpha;\n    }\n    return this;\n  };\n\nexport default clear;\n","const computeCentroids = (config, position, row) => {\n  const centroids = [];\n\n  const p = Object.keys(config.dimensions);\n  const cols = p.length;\n  const a = 0.5; // center between axes\n  for (let i = 0; i < cols; ++i) {\n    // centroids on 'real' axes\n    const x = position(p[i]);\n    const y = config.dimensions[p[i]].yscale(row[p[i]]);\n    centroids.push($V([x, y]));\n\n    // centroids on 'virtual' axes\n    if (i < cols - 1) {\n      const cx = x + a * (position(p[i + 1]) - x);\n      let cy = y + a * (config.dimensions[p[i + 1]].yscale(row[p[i + 1]]) - y);\n      if (config.bundleDimension !== null) {\n        const leftCentroid = config.clusterCentroids\n          .get(\n            config.dimensions[config.bundleDimension].yscale(\n              row[config.bundleDimension]\n            )\n          )\n          .get(p[i]);\n        const rightCentroid = config.clusterCentroids\n          .get(\n            config.dimensions[config.bundleDimension].yscale(\n              row[config.bundleDimension]\n            )\n          )\n          .get(p[i + 1]);\n        let centroid = 0.5 * (leftCentroid + rightCentroid);\n        cy = centroid + (1 - config.bundlingStrength) * (cy - centroid);\n      }\n      centroids.push($V([cx, cy]));\n    }\n  }\n\n  return centroids;\n};\n\nexport default computeCentroids;\n","const computeControlPoints = (smoothness, centroids) => {\n  const cols = centroids.length;\n  const a = smoothness;\n  const cps = [];\n\n  cps.push(centroids[0]);\n  cps.push(\n    $V([\n      centroids[0].e(1) + a * 2 * (centroids[1].e(1) - centroids[0].e(1)),\n      centroids[0].e(2),\n    ])\n  );\n  for (let col = 1; col < cols - 1; ++col) {\n    let mid = centroids[col];\n    let left = centroids[col - 1];\n    let right = centroids[col + 1];\n\n    let diff = left.subtract(right);\n    cps.push(mid.add(diff.x(a)));\n    cps.push(mid);\n    cps.push(mid.subtract(diff.x(a)));\n  }\n  cps.push(\n    $V([\n      centroids[cols - 1].e(1) +\n        a * 2 * (centroids[cols - 2].e(1) - centroids[cols - 1].e(1)),\n      centroids[cols - 1].e(2),\n    ])\n  );\n  cps.push(centroids[cols - 1]);\n\n  return cps;\n};\n\nexport default computeControlPoints;\n","// draw single cubic bezier curve\nimport { entries } from 'd3-collection';\nimport computeCentroids from './computeCentroids';\nimport computeControlPoints from './computeControlPoints';\nimport h from './height';\n\nconst singleCurve = (config, position, d, ctx) => {\n  const centroids = computeCentroids(config, position, d);\n  const cps = computeControlPoints(config.smoothness, centroids);\n\n  ctx.moveTo(cps[0].e(1), cps[0].e(2));\n\n  for (let i = 1; i < cps.length; i += 3) {\n    if (config.showControlPoints) {\n      for (let j = 0; j < 3; j++) {\n        ctx.fillRect(cps[i + j].e(1), cps[i + j].e(2), 2, 2);\n      }\n    }\n    ctx.bezierCurveTo(\n      cps[i].e(1),\n      cps[i].e(2),\n      cps[i + 1].e(1),\n      cps[i + 1].e(2),\n      cps[i + 2].e(1),\n      cps[i + 2].e(2)\n    );\n  }\n};\n\n// returns the y-position just beyond the separating null value line\nconst getNullPosition = config => {\n  if (config.nullValueSeparator == 'bottom') {\n    return h(config) + 1;\n  } else if (config.nullValueSeparator == 'top') {\n    return 1;\n  } else {\n    console.log(\n      \"A value is NULL, but nullValueSeparator is not set; set it to 'bottom' or 'top'.\"\n    );\n  }\n  return h(config) + 1;\n};\n\nconst singlePath = (config, position, d, ctx) => {\n  entries(config.dimensions).forEach((p, i) => {\n    //p isn't really p\n    if (i == 0) {\n      ctx.moveTo(\n        position(p.key),\n        typeof d[p.key] == 'undefined'\n          ? getNullPosition(config)\n          : config.dimensions[p.key].yscale(d[p.key])\n      );\n    } else {\n      ctx.lineTo(\n        position(p.key),\n        typeof d[p.key] == 'undefined'\n          ? getNullPosition(config)\n          : config.dimensions[p.key].yscale(d[p.key])\n      );\n    }\n  });\n};\n\n// draw single polyline\nconst colorPath = (config, position, d, ctx) => {\n  ctx.beginPath();\n  if (\n    (config.bundleDimension !== null && config.bundlingStrength > 0) ||\n    config.smoothness > 0\n  ) {\n    singleCurve(config, position, d, ctx);\n  } else {\n    singlePath(config, position, d, ctx);\n  }\n  ctx.stroke();\n};\n\nexport default colorPath;\n","const _functor = v => (typeof v === 'function' ? v : () => v);\n\nexport default _functor;\n","import isBrushed from '../util/isBrushed';\nimport colorPath from '../util/colorPath';\nimport functor from '../util/functor';\n\nconst pathBrushed = (config, ctx, position) => (d, i) => {\n  if (config.brushedColor !== null) {\n    ctx.brushed.strokeStyle = functor(config.brushedColor)(d, i);\n  } else {\n    ctx.brushed.strokeStyle = functor(config.color)(d, i);\n  }\n  return colorPath(config, position, d, ctx.brushed);\n};\n\nconst renderBrushedDefault = (config, ctx, position, pc, brushGroup) => () => {\n  pc.clear('brushed');\n\n  if (isBrushed(config, brushGroup)) {\n    config.brushed.forEach(pathBrushed(config, ctx, position));\n  }\n};\n\nconst renderBrushedQueue = (config, brushGroup, brushedQueue) => () => {\n  if (isBrushed(config, brushGroup)) {\n    brushedQueue(config.brushed);\n  } else {\n    brushedQueue([]); // This is needed to clear the currently brushed items\n  }\n};\n\nconst renderBrushed = (config, pc, events) =>\n  function() {\n    if (!Object.keys(config.dimensions).length) pc.detectDimensions();\n\n    pc.renderBrushed[config.mode]();\n    events.call('render', this);\n    return this;\n  };\n\nexport { pathBrushed, renderBrushed, renderBrushedDefault, renderBrushedQueue };\n","import { select, selectAll } from 'd3-selection';\n\nconst brushReset = config =>\n  function(dimension) {\n    const brushesToKeep = [];\n    for (let j = 0; j < config.brushes.length; j++) {\n      if (config.brushes[j].data !== dimension) {\n        brushesToKeep.push(config.brushes[j]);\n      }\n    }\n\n    config.brushes = brushesToKeep;\n    config.brushed = false;\n\n    if (pc.g() !== undefined) {\n      const nodes = selectAll('.brush').nodes();\n      for (let i = 0; i < nodes.length; i++) {\n        if (nodes[i].__data__ === dimension) {\n          // remove all dummy brushes for this axis or the real brush\n          select(select(nodes[i]).nodes()[0].parentNode)\n            .selectAll('.dummy')\n            .remove();\n          config.dimensions[dimension].brush.move(select(nodes[i], null));\n        }\n      }\n    }\n\n    return this;\n  };\n\nexport default brushReset;\n","// a better \"typeof\" from this post: http://stackoverflow.com/questions/7390426/better-way-to-get-type-of-a-javascript-variable\nconst toType = v => {\n  return {}.toString\n    .call(v)\n    .match(/\\s([a-zA-Z]+)/)[1]\n    .toLowerCase();\n};\n\nexport default toType;\n","// this descriptive text should live with other introspective methods\nconst toString = config => () =>\n  'Parallel Coordinates: ' +\n  Object.keys(config.dimensions).length +\n  ' dimensions (' +\n  Object.keys(config.data[0]).length +\n  ' total) , ' +\n  config.data.length +\n  ' rows';\n\nexport default toString;\n","// pairs of adjacent dimensions\nconst adjacentPairs = arr => {\n  let ret = [];\n  for (let i = 0; i < arr.length - 1; i++) {\n    ret.push([arr[i], arr[i + 1]]);\n  }\n  return ret;\n};\n\nexport default adjacentPairs;\n","import { selectAll } from 'd3-selection';\n\nimport colorPath from '../util/colorPath';\nimport functor from '../util/functor';\n\nconst pathHighlight = (config, ctx, position) => (d, i) => {\n  ctx.highlight.strokeStyle = functor(config.color)(d, i);\n  return colorPath(config, position, d, ctx.highlight);\n};\n\n// highlight an array of data\nconst highlight = (config, pc, canvas, events, ctx, position) =>\n  function(data = null) {\n    if (data === null) {\n      return config.highlighted;\n    }\n\n    config.highlighted = data;\n    pc.clear('highlight');\n    selectAll([canvas.foreground, canvas.brushed]).classed('faded', true);\n    data.forEach(pathHighlight(config, ctx, position));\n    events.call('highlight', this, data);\n    return this;\n  };\n\nexport default highlight;\n","import { selectAll } from 'd3-selection';\n\n// clear highlighting\nconst unhighlight = (config, pc, canvas) =>\n  function() {\n    config.highlighted = [];\n    pc.clear('highlight');\n    selectAll([canvas.foreground, canvas.brushed]).classed('faded', false);\n    return this;\n  };\n\nexport default unhighlight;\n","const removeAxes = pc =>\n  function() {\n    pc._g.remove();\n\n    delete pc._g;\n    return this;\n  };\n\nexport default removeAxes;\n","/**\n * Renders the polylines.\n * If no dimensions have been specified, it will attempt to detect quantitative\n * dimensions based on the first data entry. If scales haven't been set, it will\n * autoscale based on the extent for each dimension.\n *\n * @param config\n * @param pc\n * @param events\n * @returns {Function}\n */\nconst render = (config, pc, events) =>\n  function() {\n    // try to autodetect dimensions and create scales\n    if (!Object.keys(config.dimensions).length) {\n      pc.detectDimensions();\n    }\n    pc.autoscale();\n\n    pc.render[config.mode]();\n\n    events.call('render', this);\n    return this;\n  };\n\nexport default render;\n","import colorPath from '../util/colorPath';\nimport functor from '../util/functor';\n\nconst pathForeground = (config, ctx, position) => (d, i) => {\n  ctx.foreground.strokeStyle = functor(config.color)(d, i);\n  return colorPath(config, position, d, ctx.foreground);\n};\n\nconst renderDefault = (config, pc, ctx, position) => () => {\n  pc.clear('foreground');\n  pc.clear('highlight');\n\n  pc.renderBrushed.default();\n\n  config.data.forEach(pathForeground(config, ctx, position));\n};\n\nconst renderDefaultQueue = (config, pc, foregroundQueue) => () => {\n  pc.renderBrushed.queue();\n  foregroundQueue(config.data);\n};\n\nexport default renderDefault;\n\nexport { pathForeground, renderDefaultQueue };\n","import toType from './toType';\n\n// try to coerce to number before returning type\nconst toTypeCoerceNumbers = v =>\n  parseFloat(v) == v && v != null ? 'number' : toType(v);\n\nexport default toTypeCoerceNumbers;\n","import toTypeCoerceNumbers from './toTypeCoerceNumbers';\n\n// attempt to determine types of each dimension based on first row of data\nconst detectDimensionTypes = data =>\n  Object.keys(data[0]).reduce((acc, cur) => {\n    const key = isNaN(Number(cur)) ? cur : parseInt(cur);\n    acc[key] = toTypeCoerceNumbers(data[0][cur]);\n\n    return acc;\n  }, {});\n\nexport default detectDimensionTypes;\n","import { ascending } from 'd3-array';\n\nconst getOrderedDimensionKeys = config => () =>\n  Object.keys(config.dimensions).sort((x, y) =>\n    ascending(config.dimensions[x].index, config.dimensions[y].index)\n  );\n\nexport default getOrderedDimensionKeys;\n","const interactive = flags =>\n  function() {\n    flags.interactive = true;\n    return this;\n  };\n\nexport default interactive;\n","const shadows = (flags, pc) =>\n  function() {\n    flags.shadows = true;\n    pc.alphaOnBrushed(0.1);\n    pc.render();\n    return this;\n  };\n\nexport default shadows;\n","import { select } from 'd3-selection';\n\n/**\n * Setup a new parallel coordinates chart.\n *\n * @param config\n * @param canvas\n * @param ctx\n * @returns {pc} a parcoords closure\n */\nconst init = (config, canvas, ctx) => {\n  /**\n   * Create the chart within a container. The selector can also be a d3 selection.\n   *\n   * @param selection a d3 selection\n   * @returns {pc} instance for chained api\n   */\n  const pc = function(selection) {\n    selection = pc.selection = select(selection);\n\n    config.width = selection.node().clientWidth;\n    config.height = selection.node().clientHeight;\n    // canvas data layers\n    ['marks', 'foreground', 'brushed', 'highlight'].forEach(layer => {\n      canvas[layer] = selection\n        .append('canvas')\n        .attr('class', layer)\n        .node();\n      ctx[layer] = canvas[layer].getContext('2d');\n    });\n\n    // svg tick and brush layers\n    pc.svg = selection\n      .append('svg')\n      .attr('width', config.width)\n      .attr('height', config.height)\n      .style('font', '14px sans-serif')\n      .style('position', 'absolute')\n\n      .append('svg:g')\n      .attr(\n        'transform',\n        'translate(' + config.margin.left + ',' + config.margin.top + ')'\n      );\n    // for chained api\n    return pc;\n  };\n\n  // for partial-application style programming\n  return pc;\n};\n\nexport default init;\n","const flip = config =>\n  function(d) {\n    //__.dimensions[d].yscale.domain().reverse();                               // does not work\n    config.dimensions[d].yscale.domain(\n      config.dimensions[d].yscale.domain().reverse()\n    ); // works\n\n    return this;\n  };\n\nexport default flip;\n","const detectDimensions = pc =>\n  function() {\n    pc.dimensions(pc.applyDimensionDefaults());\n    return this;\n  };\n\nexport default detectDimensions;\n","const scale = config =>\n  function(d, domain) {\n    config.dimensions[d].yscale.domain(domain);\n\n    return this;\n  };\n\nexport default scale;\n","const DefaultConfig = {\n  data: [],\n  highlighted: [],\n  dimensions: {},\n  dimensionTitleRotation: 0,\n  brushes: [],\n  brushed: false,\n  brushedColor: null,\n  alphaOnBrushed: 0.0,\n  mode: 'default',\n  rate: 20,\n  width: 600,\n  height: 300,\n  margin: { top: 24, right: 20, bottom: 12, left: 20 },\n  nullValueSeparator: 'undefined', // set to \"top\" or \"bottom\"\n  nullValueSeparatorPadding: { top: 8, right: 0, bottom: 8, left: 0 },\n  color: '#069',\n  composite: 'source-over',\n  alpha: 0.7,\n  bundlingStrength: 0.5,\n  bundleDimension: null,\n  smoothness: 0.0,\n  showControlPoints: false,\n  hideAxis: [],\n  flipAxes: [],\n  animationTime: 1100, // How long it takes to flip the axis when you double click\n  rotateLabels: false,\n};\n\nexport default DefaultConfig;\n","import { entries, keys } from 'd3-collection';\nimport { axisLeft } from 'd3-axis';\nimport { dispatch } from 'd3-dispatch';\nimport { scalePoint } from 'd3-scale';\n\nimport DefaultConfig from './defaultConfig';\n\nconst initState = userConfig => {\n  const config = Object.assign({}, DefaultConfig, userConfig);\n\n  if (userConfig && userConfig.dimensionTitles) {\n    console.warn(\n      'dimensionTitles passed in userConfig is deprecated. Add title to dimension object.'\n    );\n    entries(userConfig.dimensionTitles).forEach(d => {\n      if (config.dimensions[d.key]) {\n        config.dimensions[d.key].title = config.dimensions[d.key].title\n          ? config.dimensions[d.key].title\n          : d.value;\n      } else {\n        config.dimensions[d.key] = {\n          title: d.value,\n        };\n      }\n    });\n  }\n\n  const eventTypes = [\n    'render',\n    'resize',\n    'highlight',\n    'brush',\n    'brushend',\n    'brushstart',\n    'axesreorder',\n  ].concat(keys(config));\n\n  const events = dispatch.apply(this, eventTypes),\n    flags = {\n      brushable: false,\n      reorderable: false,\n      axes: false,\n      interactive: false,\n      debug: false,\n    },\n    xscale = scalePoint(),\n    dragging = {},\n    axis = axisLeft().ticks(5),\n    ctx = {},\n    canvas = {};\n\n  const brush = {\n    modes: {\n      None: {\n        install: function(pc) {}, // Nothing to be done.\n        uninstall: function(pc) {}, // Nothing to be done.\n        selected: function() {\n          return [];\n        }, // Nothing to return\n        brushState: function() {\n          return {};\n        },\n      },\n    },\n    mode: 'None',\n    predicate: 'AND',\n    currentMode: function() {\n      return this.modes[this.mode];\n    },\n  };\n\n  return {\n    config,\n    events,\n    eventTypes,\n    flags,\n    xscale,\n    dragging,\n    axis,\n    ctx,\n    canvas,\n    brush,\n  };\n};\n\nexport default initState;\n","const computeClusterCentroids = (config, d) => {\n  const clusterCentroids = new Map();\n  const clusterCounts = new Map();\n  // determine clusterCounts\n  config.data.forEach(function(row) {\n    let scaled = config.dimensions[d].yscale(row[d]);\n    if (!clusterCounts.has(scaled)) {\n      clusterCounts.set(scaled, 0);\n    }\n    let count = clusterCounts.get(scaled);\n    clusterCounts.set(scaled, count + 1);\n  });\n\n  config.data.forEach(function(row) {\n    Object.keys(config.dimensions).map(p => {\n      let scaled = config.dimensions[d].yscale(row[d]);\n      if (!clusterCentroids.has(scaled)) {\n        const _map = new Map();\n        clusterCentroids.set(scaled, _map);\n      }\n      if (!clusterCentroids.get(scaled).has(p)) {\n        clusterCentroids.get(scaled).set(p, 0);\n      }\n      let value = clusterCentroids.get(scaled).get(p);\n      value += config.dimensions[p].yscale(row[p]) / clusterCounts.get(scaled);\n      clusterCentroids.get(scaled).set(p, value);\n    });\n  });\n\n  return clusterCentroids;\n};\n\nexport default computeClusterCentroids;\n","// side effects for setters\nimport { dispatch } from 'd3-dispatch';\nimport computeClusterCentroids from '../util/computeClusterCentroids';\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\n\nconst without = (arr, items) => {\n  items.forEach(el => {\n    delete arr[el];\n  });\n  return arr;\n};\n\nconst sideEffects = (\n  config,\n  ctx,\n  pc,\n  xscale,\n  flags,\n  brushedQueue,\n  foregroundQueue\n) =>\n  dispatch\n    .apply(this, Object.keys(config))\n    .on('composite', d => {\n      ctx.foreground.globalCompositeOperation = d.value;\n      ctx.brushed.globalCompositeOperation = d.value;\n    })\n    .on('alpha', d => {\n      ctx.foreground.globalAlpha = d.value;\n      ctx.brushed.globalAlpha = d.value;\n    })\n    .on('brushedColor', d => {\n      ctx.brushed.strokeStyle = d.value;\n    })\n    .on('width', d => pc.resize())\n    .on('height', d => pc.resize())\n    .on('margin', d => pc.resize())\n    .on('rate', d => {\n      brushedQueue.rate(d.value);\n      foregroundQueue.rate(d.value);\n    })\n    .on('dimensions', d => {\n      config.dimensions = pc.applyDimensionDefaults(Object.keys(d.value));\n      xscale.domain(pc.getOrderedDimensionKeys());\n      pc.sortDimensions();\n      if (flags.interactive) {\n        pc.render().updateAxes();\n      }\n    })\n    .on('bundleDimension', d => {\n      if (!Object.keys(config.dimensions).length) pc.detectDimensions();\n      pc.autoscale();\n      if (typeof d.value === 'number') {\n        if (d.value < Object.keys(config.dimensions).length) {\n          config.bundleDimension = config.dimensions[d.value];\n        } else if (d.value < config.hideAxis.length) {\n          config.bundleDimension = config.hideAxis[d.value];\n        }\n      } else {\n        config.bundleDimension = d.value;\n      }\n\n      config.clusterCentroids = computeClusterCentroids(\n        config,\n        config.bundleDimension\n      );\n      if (flags.interactive) {\n        pc.render();\n      }\n    })\n    .on('hideAxis', d => {\n      pc.dimensions(pc.applyDimensionDefaults());\n      pc.dimensions(without(config.dimensions, d.value));\n    })\n    .on('flipAxes', d => {\n      if (d.value && d.value.length) {\n        d.value.forEach(function(axis) {\n          flipAxisAndUpdatePCP(config, pc, axis);\n        });\n        pc.updateAxes(0);\n      }\n    });\n\nexport default sideEffects;\n","const getset = (obj, state, events, side_effects, pc) => {\n  Object.keys(state).forEach(function(key) {\n    obj[key] = function(x) {\n      if (!arguments.length) {\n        return state[key];\n      }\n      if (\n        key === 'dimensions' &&\n        Object.prototype.toString.call(x) === '[object Array]'\n      ) {\n        console.warn('pc.dimensions([]) is deprecated, use pc.dimensions({})');\n        x = obj.applyDimensionDefaults(x);\n      }\n      let old = state[key];\n      state[key] = x;\n      side_effects.call(key, obj, { value: x, previous: old });\n      events.call(key, obj, { value: x, previous: old });\n      return obj;\n    };\n  });\n};\n\nexport default getset;\n","// side effects for setters\nimport sideEffects from './state/sideEffects';\nimport getset from './util/getset';\n\nconst d3_rebind = (target, source, method) =>\n  function() {\n    const value = method.apply(source, arguments);\n    return value === source ? target : value;\n  };\n\nconst _rebind = (target, source, method) => {\n  target[method] = d3_rebind(target, source, source[method]);\n  return target;\n};\n\nconst bindEvents = (\n  __,\n  ctx,\n  pc,\n  xscale,\n  flags,\n  brushedQueue,\n  foregroundQueue,\n  events,\n  axis\n) => {\n  const side_effects = sideEffects(\n    __,\n    ctx,\n    pc,\n    xscale,\n    flags,\n    brushedQueue,\n    foregroundQueue\n  );\n\n  // create getter/setters\n  getset(pc, __, events, side_effects, pc);\n\n  // expose events\n  // getter/setter with event firing\n  _rebind(pc, events, 'on');\n\n  _rebind(\n    pc,\n    axis,\n    'ticks',\n    'orient',\n    'tickValues',\n    'tickSubdivide',\n    'tickSize',\n    'tickPadding',\n    'tickFormat'\n  );\n};\n\nexport default bindEvents;\n","// misc\nimport renderQueue from './util/renderQueue';\nimport w from './util/width';\n\n// brush\nimport install1DAxes from './brush/1d';\nimport install1DAxesMulti from './brush/1d-multi';\nimport install2DStrums from './brush/strums';\nimport installAngularBrush from './brush/angular';\n\n// api\nimport intersection from './api/intersection';\nimport mergeParcoords from './api/mergeParcoords';\nimport selected from './api/selected';\nimport brushMode from './api/brushMode';\nimport updateAxes from './api/updateAxes';\nimport autoscale from './api/autoscale';\nimport brushable from './api/brushable';\nimport commonScale from './api/commonScale';\nimport computeRealCentroids from './api/computeRealCentroids';\nimport applyDimensionDefaults from './api/applyDimensionDefaults';\nimport createAxes from './api/createAxes';\nimport axisDots from './api/axisDots';\nimport applyAxisConfig from './api/applyAxisConfig';\nimport reorderable from './api/reorderable';\nimport resize from './api/resize';\nimport reorder from './api/reorder';\nimport sortDimensions from './api/sortDimensions';\nimport sortDimensionsByRowData from './api/sortDimensionsByRowData';\nimport clear from './api/clear';\nimport {\n  pathBrushed,\n  renderBrushed,\n  renderBrushedDefault,\n  renderBrushedQueue,\n} from './api/renderBrushed';\nimport brushReset from './api/brushReset';\nimport toType from './api/toType';\nimport toString from './api/toString';\nimport adjacentPairs from './api/adjacentPairs';\nimport highlight from './api/highlight';\nimport unhighlight from './api/unhighlight';\nimport removeAxes from './api/removeAxes';\nimport render from './api/render';\nimport renderDefault, {\n  pathForeground,\n  renderDefaultQueue,\n} from './api/renderDefault';\nimport toTypeCoerceNumbers from './api/toTypeCoerceNumbers';\nimport detectDimensionTypes from './api/detectDimensionTypes';\nimport getOrderedDimensionKeys from './api/getOrderedDimensionKeys';\nimport interactive from './api/interactive';\nimport shadows from './api/shadows';\nimport init from './api/init';\nimport flip from './api/flip';\nimport detectDimensions from './api/detectDimensions';\nimport scale from './api/scale';\n\nimport { version } from '../package.json';\nimport initState from './state';\nimport bindEvents from './bindEvents';\n\n//css\nimport './parallel-coordinates.css';\n\nconst ParCoords = userConfig => {\n  const state = initState(userConfig);\n  const {\n    config,\n    events,\n    flags,\n    xscale,\n    dragging,\n    axis,\n    ctx,\n    canvas,\n    brush,\n  } = state;\n\n  const pc = init(config, canvas, ctx);\n\n  const position = d => {\n    if (xscale.range().length === 0) {\n      xscale.range([0, w(config)], 1);\n    }\n    return dragging[d] == null ? xscale(d) : dragging[d];\n  };\n\n  const brushedQueue = renderQueue(pathBrushed(config, ctx, position))\n    .rate(50)\n    .clear(() => pc.clear('brushed'));\n\n  const foregroundQueue = renderQueue(pathForeground(config, ctx, position))\n    .rate(50)\n    .clear(function() {\n      pc.clear('foreground');\n      pc.clear('highlight');\n    });\n\n  bindEvents(\n    config,\n    ctx,\n    pc,\n    xscale,\n    flags,\n    brushedQueue,\n    foregroundQueue,\n    events,\n    axis\n  );\n\n  // expose the state of the chart\n  pc.state = config;\n  pc.flags = flags;\n\n  pc.autoscale = autoscale(config, pc, xscale, ctx);\n  pc.scale = scale(config);\n  pc.flip = flip(config);\n  pc.commonScale = commonScale(config, pc);\n  pc.detectDimensions = detectDimensions(pc);\n  // attempt to determine types of each dimension based on first row of data\n  pc.detectDimensionTypes = detectDimensionTypes;\n  pc.applyDimensionDefaults = applyDimensionDefaults(config, pc);\n  pc.getOrderedDimensionKeys = getOrderedDimensionKeys(config);\n\n  //Renders the polylines.\n  pc.render = render(config, pc, events);\n  pc.renderBrushed = renderBrushed(config, pc, events);\n  pc.render.default = renderDefault(config, pc, ctx, position);\n  pc.render.queue = renderDefaultQueue(config, pc, foregroundQueue);\n  pc.renderBrushed.default = renderBrushedDefault(\n    config,\n    ctx,\n    position,\n    pc,\n    brush\n  );\n  pc.renderBrushed.queue = renderBrushedQueue(config, brush, brushedQueue);\n\n  pc.compute_real_centroids = computeRealCentroids(config.dimensions, position);\n  pc.shadows = shadows(flags, pc);\n  pc.axisDots = axisDots(config, pc, position);\n  pc.clear = clear(config, pc, ctx, brush);\n  pc.createAxes = createAxes(config, pc, xscale, flags, axis);\n  pc.removeAxes = removeAxes(pc);\n  pc.updateAxes = updateAxes(config, pc, position, axis, flags);\n  pc.applyAxisConfig = applyAxisConfig;\n  pc.brushable = brushable(config, pc, flags);\n  pc.brushReset = brushReset(config);\n  pc.selected = selected(config);\n  pc.reorderable = reorderable(config, pc, xscale, position, dragging, flags);\n\n  // Reorder dimensions, such that the highest value (visually) is on the left and\n  // the lowest on the right. Visual values are determined by the data values in\n  // the given row.\n  pc.reorder = reorder(config, pc, xscale);\n  pc.sortDimensionsByRowData = sortDimensionsByRowData(config);\n  pc.sortDimensions = sortDimensions(config, position);\n\n  // pairs of adjacent dimensions\n  pc.adjacent_pairs = adjacentPairs;\n  pc.interactive = interactive(flags);\n\n  // expose internal state\n  pc.xscale = xscale;\n  pc.ctx = ctx;\n  pc.canvas = canvas;\n  pc.g = () => pc._g;\n\n  // rescale for height, width and margins\n  // TODO currently assumes chart is brushable, and destroys old brushes\n  pc.resize = resize(config, pc, flags, events);\n\n  // highlight an array of data\n  pc.highlight = highlight(config, pc, canvas, events, ctx, position);\n  // clear highlighting\n  pc.unhighlight = unhighlight(config, pc, canvas);\n\n  // calculate 2d intersection of line a->b with line c->d\n  // points are objects with x and y properties\n  pc.intersection = intersection;\n\n  // Merges the canvases and SVG elements into one canvas element which is then passed into the callback\n  // (so you can choose to save it to disk, etc.)\n  pc.mergeParcoords = mergeParcoords(pc);\n  pc.brushModes = () => Object.getOwnPropertyNames(brush.modes);\n  pc.brushMode = brushMode(brush, config, pc);\n\n  // install brushes\n  install1DAxes(brush, config, pc, events);\n  install2DStrums(brush, config, pc, events, xscale);\n  installAngularBrush(brush, config, pc, events, xscale);\n  install1DAxesMulti(brush, config, pc, events);\n\n  pc.version = version;\n  // this descriptive text should live with other introspective methods\n  pc.toString = toString(config);\n  pc.toType = toType;\n  // try to coerce to number before returning type\n  pc.toTypeCoerceNumbers = toTypeCoerceNumbers;\n\n  return pc;\n};\n\nexport default ParCoords;\n"],"names":["renderQueue","func","_queue","_rate","_invalidate","_clear","rq","data","render","valid","invalidate","doFrame","chunk","splice","map","requestAnimationFrame","slice","add","concat","rate","value","arguments","length","remaining","clear","w","config","width","margin","right","left","brushExtents","state","pc","brushes","brushNodes","extents","Object","keys","dimensions","reduce","acc","cur","brush","undefined","brushSelection","extent","brushSelections","g","selectAll","each","d","select","forEach","dim","yExtent","yscale","call","move","reverse","renderBrushed","brushReset","dimension","brushed","event","selected","brushGroup","is_brushed","p","actives","filter","_brushRange","invert","within","date","bandwidth","number","string","predicate","every","type","some","Error","brushPredicate","brushUpdated","events","newSelection","brushFor","axis","_selector","brushRangeMax","range","_brush","brushY","on","sourceEvent","stopPropagation","node","install","createAxes","append","attr","style","uninstall","remove","BrushState","install1DAxes","assign","modes","brushState","drawBrushes","selector","id","enter","insert","indexOf","b","brushObject","exit","pos","axisBrushes","i","document","getElementById","dimExt","e","newBrush","push","lastBrushID","lastBrush","selection","yExtents","_bs","j","ext","f","k","axisBrush","install1DMultiAxes","strumRect","containmentTest","strum","p1","minX","p2","m1","b1","m2","b2","x","y","y1","y2","Math","min","max","crossesStrum","strums","test","d1","dims","d2","point","ids","getOwnPropertyNames","isNaN","crossTest","removeStrum","active","svg","onDragEnd","drawStrum","activePoint","_svg","points","_line","circles","_drag","drag","ev","maxX","minY","maxY","onDrag","top","h","height","bottom","dimensionsForPoint","xscale","getOrderedDimensionKeys","onDragStart","mouse","consecutive","first","second","install2DStrums","hypothenuse","a","sqrt","signedAngle","angle","PI","startAngle","arc","endAngle","tmp","arcs","c","asin","outerRadius","p3","_path","d3Arc","innerRadius","sAngle","uAngle","installAngularBrush","intersection","mergeParcoords","devicePixelRatio","window","mergedCanvas","createElement","canvas","foreground","clientWidth","clientHeight","context","getContext","fillStyle","fillRect","key","drawImage","DOMURL","URL","webkitURL","serializer","XMLSerializer","svgStr","serializeToString","src","btoa","img","Image","onload","callback","ranges","nodes","__data__","values","ranger","domain","includes","flipAxes","unshift","ii","dimRange","dimDomain","category","categoryIndex","categoryRangeValue","multiBrushData","idx","filtered","z","String","toUpperCase","console","log","currentMode","brushMode","mode","brushModes","dimensionLabels","title","flipAxisAndUpdatePCP","flip","parentElement","transition","duration","animationTime","scale","rotateLabels","delta","deltaY","dimensionTitleRotation","preventDefault","updateAxes","position","flags","g_data","axisElement","applyAxisConfig","transform","class","text","brushable","reorderable","getRange","nullValueSeparator","nullValueSeparatorPadding","autoscale","ctx","defaultScales","_extent","getTime","scalePoint","tempDate","val","scaleTime","scaleLinear","counts","sort","tempArr","pop","categoricalRange","addBy","scaleOrdinal","strokeStyle","color","lineWidth","globalCompositeOperation","composite","globalAlpha","alpha","brushedColor","highlight","ctrlKey","html","outerHTML","replace","dat","parentNode","commonScale","global","t","detectDimensions","scales","bundleDimension","computeRealCentroids","row","applyDimensionDefaults","types","detectDimensionTypes","orient","ticks","innerTickSize","outerTickSize","tickPadding","index","removeAxes","_g","axes","axisDots","r","_r","marks","pow","entries","beginPath","stroke","fill","axisCfg","axisLeft","axisRight","axisTop","axisBottom","tickValues","tickSizeInner","tickSizeOuter","tickFormat","dragging","__origin__","dx","sortDimensions","resize","reorder","firstDim","sortDimensionsByRowData","rowdata","reordered","highlighted","unhighlight","copy","positionSortedKeys","pixelDifference","localeCompare","isBrushed","object","hasOwnProperty","layer","clearRect","alphaOnBrushed","computeCentroids","centroids","cols","$V","cx","cy","leftCentroid","clusterCentroids","get","rightCentroid","centroid","bundlingStrength","computeControlPoints","smoothness","cps","col","mid","diff","subtract","singleCurve","moveTo","showControlPoints","bezierCurveTo","getNullPosition","singlePath","lineTo","colorPath","_functor","v","pathBrushed","functor","renderBrushedDefault","renderBrushedQueue","brushedQueue","brushesToKeep","toType","toString","match","toLowerCase","adjacentPairs","ret","arr","pathHighlight","classed","pathForeground","renderDefault","default","renderDefaultQueue","foregroundQueue","queue","toTypeCoerceNumbers","parseFloat","Number","parseInt","ascending","interactive","shadows","init","DefaultConfig","hideAxis","initState","userConfig","dimensionTitles","warn","eventTypes","dispatch","apply","debug","None","computeClusterCentroids","Map","clusterCounts","scaled","has","set","count","_map","without","items","el","sideEffects","getset","obj","side_effects","prototype","old","previous","d3_rebind","target","source","method","_rebind","bindEvents","__","ParCoords","compute_real_centroids","adjacent_pairs","install1DAxesMulti","version"],"mappings":"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"}