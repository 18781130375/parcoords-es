{"version":3,"file":"parcoords.js","sources":["../src/util/renderQueue.js","../src/helper/without.js","../src/helper/rebind.js","../src/helper/functor.js","../src/defaultConfig.js","../src/util/getset.js","../src/util/width.js","../src/util/computeClusterCentroids.js","../src/brush/install1DAxes.js","../src/util/height.js","../src/brush/install2DStrums.js","../src/brush/installAngularBrush.js","../src/api/intersection.js","../src/api/mergeParcoords.js","../src/api/selected.js","../src/api/brushMode.js","../src/util/dimensionLabels.js","../src/util/flipAxisAndUpdatePCP.js","../src/util/rotateLabels.js","../src/api/updateAxes.js","../src/util/getRange.js","../src/api/autoscale.js","../src/api/brushable.js","../src/api/commonScale.js","../src/api/computeRealCentroids.js","../src/api/applyDimensionDefaults.js","../src/api/createAxes.js","../src/api/axisDots.js","../src/api/applyAxisConfig.js","../src/api/reorderable.js","../src/api/resize.js","../src/api/reorder.js","../src/api/sortDimensions.js","../src/api/sortDimensionsByRowData.js","../src/util/isBrushed.js","../src/api/clear.js","../src/util/computeCentroids.js","../src/util/computeControlPoints.js","../src/util/colorPath.js","../src/api/renderBrushed.js","../src/api/brushReset.js","../src/api/toType.js","../src/api/toString.js","../src/api/adjacentPairs.js","../src/api/highlight.js","../src/api/unhighlight.js","../src/api/removeAxes.js","../src/api/render.js","../src/api/renderDefault.js","../src/api/toTypeCoerceNumbers.js","../src/api/detectDimensionTypes.js","../src/index.js"],"sourcesContent":["import 'requestanimationframe';\n\nconst renderQueue = function(func) {\n  let _queue = [], // data to be rendered\n    _rate = 1000, // number of calls per frame\n    _invalidate = function() {}, // invalidate last render queue\n    _clear = function() {}; // clearing function\n\n  let rq = function(data) {\n    if (data) rq.data(data);\n    _invalidate();\n    _clear();\n    rq.render();\n  };\n\n  rq.render = function() {\n    let valid = true;\n    _invalidate = rq.invalidate = function() {\n      valid = false;\n    };\n\n    function doFrame() {\n      if (!valid) return true;\n      let chunk = _queue.splice(0, _rate);\n      chunk.map(func);\n      requestAnimationFrame(doFrame);\n    }\n\n    doFrame();\n  };\n\n  rq.data = function(data) {\n    _invalidate();\n    _queue = data.slice(0); // creates a copy of the data\n    return rq;\n  };\n\n  rq.add = function(data) {\n    _queue = _queue.concat(data);\n  };\n\n  rq.rate = function(value) {\n    if (!arguments.length) return _rate;\n    _rate = value;\n    return rq;\n  };\n\n  rq.remaining = function() {\n    return _queue.length;\n  };\n\n  // clear the canvas\n  rq.clear = function(func) {\n    if (!arguments.length) {\n      _clear();\n      return rq;\n    }\n    _clear = func;\n    return rq;\n  };\n\n  rq.invalidate = _invalidate;\n\n  return rq;\n};\n\nexport default renderQueue;\n","const without = (arr, items) => {\n  items.forEach(el => {\n    delete arr[el];\n  });\n  return arr;\n};\n\nexport default without;\n","const d3_rebind = (target, source, method) => {\n  return function() {\n    let value = method.apply(source, arguments);\n    return value === source ? target : value;\n  };\n};\n\nconst _rebind = (target, source, method) => {\n  target[method] = d3_rebind(target, source, source[method]);\n  return target;\n};\n\nexport default _rebind;\n","const _functor = v => {\n  return typeof v === 'function'\n    ? v\n    : function() {\n        return v;\n      };\n};\n\nexport default _functor;\n","const DefaultConfig = {\n  data: [],\n  highlighted: [],\n  dimensions: {},\n  dimensionTitleRotation: 0,\n  brushes: [],\n  brushed: false,\n  brushedColor: null,\n  alphaOnBrushed: 0.0,\n  mode: 'default',\n  rate: 20,\n  width: 600,\n  height: 300,\n  margin: { top: 24, right: 20, bottom: 12, left: 20 },\n  nullValueSeparator: 'undefined', // set to \"top\" or \"bottom\"\n  nullValueSeparatorPadding: { top: 8, right: 0, bottom: 8, left: 0 },\n  color: '#069',\n  composite: 'source-over',\n  alpha: 0.7,\n  bundlingStrength: 0.5,\n  bundleDimension: null,\n  smoothness: 0.0,\n  showControlPoints: false,\n  hideAxis: [],\n  flipAxes: [],\n  animationTime: 1100, // How long it takes to flip the axis when you double click\n  rotateLabels: false,\n};\n\nexport default DefaultConfig;\n","import { keys } from 'd3-collection';\n\nconst getset = (obj, state, events, side_effects) => {\n  keys(state).forEach(function(key) {\n    obj[key] = function(x) {\n      if (!arguments.length) {\n        return state[key];\n      }\n      if (\n        key === 'dimensions' &&\n        Object.prototype.toString.call(x) === '[object Array]'\n      ) {\n        console.warn('pc.dimensions([]) is deprecated, use pc.dimensions({})');\n        x = pc.applyDimensionDefaults(x);\n      }\n      let old = state[key];\n      state[key] = x;\n      side_effects.call(key, obj, { value: x, previous: old });\n      events.call(key, obj, { value: x, previous: old });\n      return obj;\n    };\n  });\n};\n\nexport default getset;\n","const w = config => config.width - config.margin.right - config.margin.left;\n\nexport default w;\n","import { keys, map } from 'd3-collection';\n\nconst computeClusterCentroids = (config, d) => {\n  let clusterCentroids = map();\n  let clusterCounts = map();\n  // determine clusterCounts\n  config.data.forEach(function(row) {\n    let scaled = config.dimensions[d].yscale(row[d]);\n    if (!clusterCounts.has(scaled)) {\n      clusterCounts.set(scaled, 0);\n    }\n    let count = clusterCounts.get(scaled);\n    clusterCounts.set(scaled, count + 1);\n  });\n\n  config.data.forEach(function(row) {\n    keys(config.dimensions).map(function(p, i) {\n      let scaled = config.dimensions[d].yscale(row[d]);\n      if (!clusterCentroids.has(scaled)) {\n        let _map = map();\n        clusterCentroids.set(scaled, _map);\n      }\n      if (!clusterCentroids.get(scaled).has(p)) {\n        clusterCentroids.get(scaled).set(p, 0);\n      }\n      let value = clusterCentroids.get(scaled).get(p);\n      value += config.dimensions[p].yscale(row[p]) / clusterCounts.get(scaled);\n      clusterCentroids.get(scaled).set(p, value);\n    });\n  });\n\n  return clusterCentroids;\n};\n\nexport default computeClusterCentroids;\n","// brush mode: 1D-Axes\nimport { keys } from 'd3-collection';\nimport { brushSelection, brushY } from 'd3-brush';\nimport { event, select } from 'd3-selection';\n\n// This function can be used for 'live' updates of brushes. That is, during the\n// specification of a brush, this method can be called to update the view.\n//\n// @param newSelection - The new set of data items that is currently contained\n//                       by the brushes\nconst brushUpdated = (config, pc, events) => newSelection => {\n  config.brushed = newSelection;\n  events.call('brush', pc, config.brushed);\n  pc.renderBrushed();\n};\n\nconst install1DAxes = (brushGroup, config, pc, events) => {\n  let brushes = {};\n  let brushNodes = {};\n  let g = null;\n\n  //https://github.com/d3/d3-brush/issues/10\n  function is_brushed(p) {\n    return brushSelection(brushNodes[p]) !== null;\n  }\n\n  // data within extents\n  function selected() {\n    let actives = keys(config.dimensions).filter(is_brushed),\n      extents = actives.map(function(p) {\n        const _brushRange = brushSelection(brushNodes[p]);\n\n        if (typeof config.dimensions[p].yscale.invert === 'function') {\n          return [\n            config.dimensions[p].yscale.invert(_brushRange[1]),\n            config.dimensions[p].yscale.invert(_brushRange[0]),\n          ];\n        } else {\n          return _brushRange;\n        }\n      });\n    // We don't want to return the full data set when there are no axes brushed.\n    // Actually, when there are no axes brushed, by definition, no items are\n    // selected. So, let's avoid the filtering and just return false.\n    //if (actives.length === 0) return false;\n\n    // Resolves broken examples for now. They expect to get the full dataset back from empty brushes\n    if (actives.length === 0) return config.data;\n\n    // test if within range\n    let within = {\n      date: function(d, p, dimension) {\n        if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\n          // if it is ordinal\n          return (\n            extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\n            config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n          );\n        } else {\n          return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\n        }\n      },\n      number: function(d, p, dimension) {\n        if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\n          // if it is ordinal\n          return (\n            extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\n            config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n          );\n        } else {\n          return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\n        }\n      },\n      string: function(d, p, dimension) {\n        return (\n          extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\n          config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n        );\n      },\n    };\n\n    return config.data.filter(function(d) {\n      switch (brushGroup.predicate) {\n        case 'AND':\n          return actives.every(function(p, dimension) {\n            return within[config.dimensions[p].type](d, p, dimension);\n          });\n        case 'OR':\n          return actives.some(function(p, dimension) {\n            return within[config.dimensions[p].type](d, p, dimension);\n          });\n        default:\n          throw new Error('Unknown brush predicate ' + config.brushPredicate);\n      }\n    });\n  }\n\n  function brushExtents(extents) {\n    if (typeof extents === 'undefined') {\n      let extents = {};\n      keys(config.dimensions).forEach(function(d) {\n        let brush = brushes[d];\n        //todo: brush check\n        if (brush !== undefined && brushSelection(brushNodes[d]) !== null) {\n          extents[d] = brush.extent();\n        }\n      });\n      return extents;\n    } else {\n      //first get all the brush selections\n      let brushSelections = {};\n      g.selectAll('.brush').each(function(d) {\n        brushSelections[d] = select(this);\n      });\n\n      // loop over each dimension and update appropriately (if it was passed in through extents)\n      keys(config.dimensions).forEach(function(d) {\n        if (extents[d] === undefined) {\n          return;\n        }\n\n        let brush = brushes[d];\n        if (brush !== undefined) {\n          //update the extent\n          brush.extent(extents[d]);\n\n          //redraw the brush\n          brushSelections[d]\n            .transition()\n            .duration(0)\n            .call(brush);\n\n          //fire some events\n          brush.event(brushSelections[d]);\n        }\n      });\n\n      //redraw the chart\n      pc.renderBrushed();\n\n      return pc;\n    }\n  }\n\n  function brushFor(axis, _selector) {\n    const brushRangeMax =\n      config.dimensions[axis].type === 'string'\n        ? config.dimensions[axis].yscale.range()[\n            config.dimensions[axis].yscale.range().length - 1\n          ]\n        : config.dimensions[axis].yscale.range()[0];\n\n    let _brush = brushY(_selector).extent([[-15, 0], [15, brushRangeMax]]);\n\n    _brush\n      .on('start', function() {\n        if (event.sourceEvent !== null) {\n          events.call('brushstart', pc, config.brushed);\n          event.sourceEvent.stopPropagation();\n        }\n      })\n      .on('brush', function() {\n        brushUpdated(config, pc, events)(selected());\n      })\n      .on('end', function() {\n        brushUpdated(config, pc, events)(selected());\n        events.call('brushend', pc, config.brushed);\n      });\n\n    brushes[axis] = _brush;\n    brushNodes[axis] = _selector.node();\n    return _brush;\n  }\n\n  function brushReset(dimension) {\n    if (dimension === undefined) {\n      config.brushed = false;\n      if (g) {\n        g.selectAll('.brush').each(function(d) {\n          select(this).call(brushes[d].move, null);\n        });\n        pc.renderBrushed();\n      }\n    } else {\n      if (g) {\n        g.selectAll('.brush').each(function(d) {\n          if (d != dimension) return;\n          select(this).call(brushes[d].move, null);\n          brushes[d].event(select(this));\n        });\n        pc.renderBrushed();\n      }\n    }\n    return this;\n  }\n\n  function install() {\n    g = pc.g();\n    if (!g) {\n      pc.createAxes();\n      g = pc.g();\n    }\n\n    // Add and store a brush for each axis.\n    let brush = g\n      .append('svg:g')\n      .attr('class', 'brush')\n      .each(function(d) {\n        select(this).call(brushFor(d, select(this)));\n      });\n    brush\n      .selectAll('rect')\n      .style('visibility', null)\n      .attr('x', -15)\n      .attr('width', 30);\n\n    brush.selectAll('rect.background').style('fill', 'transparent');\n\n    brush\n      .selectAll('rect.extent')\n      .style('fill', 'rgba(255,255,255,0.25)')\n      .style('stroke', 'rgba(0,0,0,0.6)');\n\n    brush.selectAll('.resize rect').style('fill', 'rgba(0,0,0,0.1)');\n\n    pc.brushExtents = brushExtents;\n    pc.brushReset = brushReset;\n    return pc;\n  }\n\n  brushGroup.modes['1D-axes'] = {\n    install: install,\n    uninstall: function() {\n      g.selectAll('.brush').remove();\n      brushes = {};\n      delete pc.brushExtents;\n      delete pc.brushReset;\n    },\n    selected: selected,\n    brushState: brushExtents,\n  };\n};\n\nexport default install1DAxes;\n","const h = config => config.height - config.margin.top - config.margin.bottom;\n\nexport default h;\n","// brush mode: 2D-strums\n// bl.ocks.org/syntagmatic/5441022\nimport { keys } from 'd3-collection';\nimport { drag } from 'd3-drag';\nimport { event, mouse, select } from 'd3-selection';\n\nimport w from '../util/width';\nimport h from '../util/height';\n\nconst install2DStrums = (brushGroup, config, pc, events, xscale) => {\n  let strums = {},\n    strumRect;\n\n  let g;\n\n  function drawStrum(strum, activePoint) {\n    let _svg = pc.selection.select('svg').select('g#strums'),\n      id = strum.dims.i,\n      points = [strum.p1, strum.p2],\n      _line = _svg.selectAll('line#strum-' + id).data([strum]),\n      circles = _svg.selectAll('circle#strum-' + id).data(points),\n      _drag = drag();\n\n    _line\n      .enter()\n      .append('line')\n      .attr('id', 'strum-' + id)\n      .attr('class', 'strum');\n\n    _line\n      .attr('x1', function(d) {\n        return d.p1[0];\n      })\n      .attr('y1', function(d) {\n        return d.p1[1];\n      })\n      .attr('x2', function(d) {\n        return d.p2[0];\n      })\n      .attr('y2', function(d) {\n        return d.p2[1];\n      })\n      .attr('stroke', 'black')\n      .attr('stroke-width', 2);\n\n    _drag\n      .on('drag', function(d, i) {\n        let ev = event;\n        i = i + 1;\n        strum['p' + i][0] = Math.min(\n          Math.max(strum.minX + 1, ev.x),\n          strum.maxX\n        );\n        strum['p' + i][1] = Math.min(Math.max(strum.minY, ev.y), strum.maxY);\n        drawStrum(strum, i - 1);\n      })\n      .on('end', onDragEnd());\n\n    circles\n      .enter()\n      .append('circle')\n      .attr('id', 'strum-' + id)\n      .attr('class', 'strum');\n\n    circles\n      .attr('cx', function(d) {\n        return d[0];\n      })\n      .attr('cy', function(d) {\n        return d[1];\n      })\n      .attr('r', 5)\n      .style('opacity', function(d, i) {\n        return activePoint !== undefined && i === activePoint ? 0.8 : 0;\n      })\n      .on('mouseover', function() {\n        select(this).style('opacity', 0.8);\n      })\n      .on('mouseout', function() {\n        select(this).style('opacity', 0);\n      })\n      .call(_drag);\n  }\n\n  function dimensionsForPoint(p) {\n    let dims = { i: -1, left: undefined, right: undefined };\n    keys(config.dimensions).some(function(dim, i) {\n      if (xscale(dim) < p[0]) {\n        let next = keys(config.dimensions)[\n          pc.getOrderedDimensionKeys().indexOf(dim) + 1\n        ];\n        dims.i = i;\n        dims.left = dim;\n        dims.right = next;\n        return false;\n      }\n      return true;\n    });\n\n    if (dims.left === undefined) {\n      // Event on the left side of the first axis.\n      dims.i = 0;\n      dims.left = pc.getOrderedDimensionKeys()[0];\n      dims.right = pc.getOrderedDimensionKeys()[1];\n    } else if (dims.right === undefined) {\n      // Event on the right side of the last axis\n      dims.i = keys(config.dimensions).length - 1;\n      dims.right = dims.left;\n      dims.left = pc.getOrderedDimensionKeys()[\n        keys(config.dimensions).length - 2\n      ];\n    }\n\n    return dims;\n  }\n\n  function onDragStart() {\n    // First we need to determine between which two axes the sturm was started.\n    // This will determine the freedom of movement, because a strum can\n    // logically only happen between two axes, so no movement outside these axes\n    // should be allowed.\n    return function() {\n      let p = mouse(strumRect.node()),\n        dims,\n        strum;\n\n      p[0] = p[0] - config.margin.left;\n      p[1] = p[1] - config.margin.top;\n\n      (dims = dimensionsForPoint(p)),\n        (strum = {\n          p1: p,\n          dims: dims,\n          minX: xscale(dims.left),\n          maxX: xscale(dims.right),\n          minY: 0,\n          maxY: h(config),\n        });\n\n      strums[dims.i] = strum;\n      strums.active = dims.i;\n\n      // Make sure that the point is within the bounds\n      strum.p1[0] = Math.min(Math.max(strum.minX, p[0]), strum.maxX);\n      strum.p2 = strum.p1.slice();\n    };\n  }\n\n  function onDrag() {\n    return function() {\n      let ev = event,\n        strum = strums[strums.active];\n\n      // Make sure that the point is within the bounds\n      strum.p2[0] = Math.min(\n        Math.max(strum.minX + 1, ev.x - config.margin.left),\n        strum.maxX\n      );\n      strum.p2[1] = Math.min(\n        Math.max(strum.minY, ev.y - config.margin.top),\n        strum.maxY\n      );\n      drawStrum(strum, 1);\n    };\n  }\n\n  function containmentTest(strum, width) {\n    let p1 = [strum.p1[0] - strum.minX, strum.p1[1] - strum.minX],\n      p2 = [strum.p2[0] - strum.minX, strum.p2[1] - strum.minX],\n      m1 = 1 - width / p1[0],\n      b1 = p1[1] * (1 - m1),\n      m2 = 1 - width / p2[0],\n      b2 = p2[1] * (1 - m2);\n\n    // test if point falls between lines\n    return function(p) {\n      let x = p[0],\n        y = p[1],\n        y1 = m1 * x + b1,\n        y2 = m2 * x + b2;\n\n      if (y > Math.min(y1, y2) && y < Math.max(y1, y2)) {\n        return true;\n      }\n\n      return false;\n    };\n  }\n\n  function selected() {\n    let ids = Object.getOwnPropertyNames(strums),\n      brushed = config.data;\n\n    // Get the ids of the currently active strums.\n    ids = ids.filter(function(d) {\n      return !isNaN(d);\n    });\n\n    function crossesStrum(d, id) {\n      let strum = strums[id],\n        test = containmentTest(strum, strums.width(id)),\n        d1 = strum.dims.left,\n        d2 = strum.dims.right,\n        y1 = config.dimensions[d1].yscale,\n        y2 = config.dimensions[d2].yscale,\n        point = [y1(d[d1]) - strum.minX, y2(d[d2]) - strum.minX];\n      return test(point);\n    }\n\n    if (ids.length === 0) {\n      return brushed;\n    }\n\n    return brushed.filter(function(d) {\n      switch (brushGroup.predicate) {\n        case 'AND':\n          return ids.every(function(id) {\n            return crossesStrum(d, id);\n          });\n        case 'OR':\n          return ids.some(function(id) {\n            return crossesStrum(d, id);\n          });\n        default:\n          throw new Error('Unknown brush predicate ' + config.brushPredicate);\n      }\n    });\n  }\n\n  function removeStrum() {\n    let strum = strums[strums.active],\n      svg = pc.selection.select('svg').select('g#strums');\n\n    delete strums[strums.active];\n    strums.active = undefined;\n    svg.selectAll('line#strum-' + strum.dims.i).remove();\n    svg.selectAll('circle#strum-' + strum.dims.i).remove();\n  }\n\n  function onDragEnd() {\n    return function() {\n      let brushed = config.data,\n        strum = strums[strums.active];\n\n      // Okay, somewhat unexpected, but not totally unsurprising, a mousclick is\n      // considered a drag without move. So we have to deal with that case\n      if (strum && strum.p1[0] === strum.p2[0] && strum.p1[1] === strum.p2[1]) {\n        removeStrum(strums);\n      }\n\n      brushed = selected(strums);\n      strums.active = undefined;\n      config.brushed = brushed;\n      pc.renderBrushed();\n      events.call('brushend', pc, config.brushed);\n    };\n  }\n\n  function brushReset(strums) {\n    return function() {\n      let ids = Object.getOwnPropertyNames(strums).filter(function(d) {\n        return !isNaN(d);\n      });\n\n      ids.forEach(function(d) {\n        strums.active = d;\n        removeStrum(strums);\n      });\n      onDragEnd(strums)();\n    };\n  }\n\n  function install() {\n    g = pc.g();\n    if (!g) {\n      pc.createAxes();\n      g = pc.g();\n    }\n\n    let _drag = drag();\n\n    // Map of current strums. Strums are stored per segment of the PC. A segment,\n    // being the area between two axes. The left most area is indexed at 0.\n    strums.active = undefined;\n    // Returns the width of the PC segment where currently a strum is being\n    // placed. NOTE: even though they are evenly spaced in our current\n    // implementation, we keep for when non-even spaced segments are supported as\n    // well.\n    strums.width = function(id) {\n      let strum = strums[id];\n\n      if (strum === undefined) {\n        return undefined;\n      }\n\n      return strum.maxX - strum.minX;\n    };\n\n    pc.on('axesreorder.strums', function() {\n      let ids = Object.getOwnPropertyNames(strums).filter(function(d) {\n        return !isNaN(d);\n      });\n\n      // Checks if the first dimension is directly left of the second dimension.\n      function consecutive(first, second) {\n        let length = keys(config.dimensions).length;\n        return keys(config.dimensions).some(function(d, i) {\n          return d === first\n            ? i + i < length && config.dimensions[i + 1] === second\n            : false;\n        });\n      }\n\n      if (ids.length > 0) {\n        // We have some strums, which might need to be removed.\n        ids.forEach(function(d) {\n          let dims = strums[d].dims;\n          strums.active = d;\n          // If the two dimensions of the current strum are not next to each other\n          // any more, than we'll need to remove the strum. Otherwise we keep it.\n          if (!consecutive(dims.left, dims.right)) {\n            removeStrum(strums);\n          }\n        });\n        onDragEnd(strums)();\n      }\n    });\n\n    // Add a new svg group in which we draw the strums.\n    pc.selection\n      .select('svg')\n      .append('g')\n      .attr('id', 'strums')\n      .attr(\n        'transform',\n        'translate(' + config.margin.left + ',' + config.margin.top + ')'\n      );\n\n    // Install the required brushReset function\n    pc.brushReset = brushReset(strums);\n\n    _drag\n      .on('start', onDragStart(strums))\n      .on('drag', onDrag(strums))\n      .on('end', onDragEnd(strums));\n\n    // NOTE: The styling needs to be done here and not in the css. This is because\n    //       for 1D brushing, the canvas layers should not listen to\n    //       pointer-events._.\n    strumRect = pc.selection\n      .select('svg')\n      .insert('rect', 'g#strums')\n      .attr('id', 'strum-events')\n      .attr('x', config.margin.left)\n      .attr('y', config.margin.top)\n      .attr('width', w(config))\n      .attr('height', h(config) + 2)\n      .style('opacity', 0)\n      .call(_drag);\n  }\n\n  brushGroup.modes['2D-strums'] = {\n    install: install,\n    uninstall: function() {\n      pc.selection\n        .select('svg')\n        .select('g#strums')\n        .remove();\n      pc.selection\n        .select('svg')\n        .select('rect#strum-events')\n        .remove();\n      pc.on('axesreorder.strums', undefined);\n      delete pc.brushReset;\n\n      strumRect = undefined;\n    },\n    selected: selected,\n    brushState: function() {\n      return strums;\n    },\n  };\n};\n\nexport default install2DStrums;\n","// brush mode: angular\n// code based on 2D.strums.js\n\nimport { arc as d3Arc } from 'd3-shape';\nimport { keys } from 'd3-collection';\nimport { drag } from 'd3-drag';\nimport { event, mouse, select } from 'd3-selection';\n\nimport w from '../util/width';\nimport h from '../util/height';\n\nconst installAngularBrush = (brushGroup, config, pc, events, xscale) => {\n  let arcs = {},\n    strumRect;\n\n  let g;\n\n  function drawStrum(arc, activePoint) {\n    let svg = pc.selection.select('svg').select('g#arcs'),\n      id = arc.dims.i,\n      points = [arc.p2, arc.p3],\n      _line = svg\n        .selectAll('line#arc-' + id)\n        .data([{ p1: arc.p1, p2: arc.p2 }, { p1: arc.p1, p2: arc.p3 }]),\n      circles = svg.selectAll('circle#arc-' + id).data(points),\n      _drag = drag(),\n      _path = svg.selectAll('path#arc-' + id).data([arc]);\n\n    _path\n      .enter()\n      .append('path')\n      .attr('id', 'arc-' + id)\n      .attr('class', 'arc')\n      .style('fill', 'orange')\n      .style('opacity', 0.5);\n\n    _path\n      .attr('d', arc.arc)\n      .attr('transform', 'translate(' + arc.p1[0] + ',' + arc.p1[1] + ')');\n\n    _line\n      .enter()\n      .append('line')\n      .attr('id', 'arc-' + id)\n      .attr('class', 'arc');\n\n    _line\n      .attr('x1', function(d) {\n        return d.p1[0];\n      })\n      .attr('y1', function(d) {\n        return d.p1[1];\n      })\n      .attr('x2', function(d) {\n        return d.p2[0];\n      })\n      .attr('y2', function(d) {\n        return d.p2[1];\n      })\n      .attr('stroke', 'black')\n      .attr('stroke-width', 2);\n\n    _drag\n      .on('drag', function(d, i) {\n        let ev = event,\n          angle = 0;\n\n        i = i + 2;\n\n        arc['p' + i][0] = Math.min(Math.max(arc.minX + 1, ev.x), arc.maxX);\n        arc['p' + i][1] = Math.min(Math.max(arc.minY, ev.y), arc.maxY);\n\n        angle = i === 3 ? arcs.startAngle(id) : arcs.endAngle(id);\n\n        if (\n          (arc.startAngle < Math.PI &&\n            arc.endAngle < Math.PI &&\n            angle < Math.PI) ||\n          (arc.startAngle >= Math.PI &&\n            arc.endAngle >= Math.PI &&\n            angle >= Math.PI)\n        ) {\n          if (i === 2) {\n            arc.endAngle = angle;\n            arc.arc.endAngle(angle);\n          } else if (i === 3) {\n            arc.startAngle = angle;\n            arc.arc.startAngle(angle);\n          }\n        }\n\n        drawStrum(arc, i - 2);\n      })\n      .on('end', onDragEnd());\n\n    circles\n      .enter()\n      .append('circle')\n      .attr('id', 'arc-' + id)\n      .attr('class', 'arc');\n\n    circles\n      .attr('cx', function(d) {\n        return d[0];\n      })\n      .attr('cy', function(d) {\n        return d[1];\n      })\n      .attr('r', 5)\n      .style('opacity', function(d, i) {\n        return activePoint !== undefined && i === activePoint ? 0.8 : 0;\n      })\n      .on('mouseover', function() {\n        select(this).style('opacity', 0.8);\n      })\n      .on('mouseout', function() {\n        select(this).style('opacity', 0);\n      })\n      .call(_drag);\n  }\n\n  function dimensionsForPoint(p) {\n    let dims = { i: -1, left: undefined, right: undefined };\n    keys(config.dimensions).some(function(dim, i) {\n      if (xscale(dim) < p[0]) {\n        let next = keys(config.dimensions)[\n          pc.getOrderedDimensionKeys().indexOf(dim) + 1\n        ];\n        dims.i = i;\n        dims.left = dim;\n        dims.right = next;\n        return false;\n      }\n      return true;\n    });\n\n    if (dims.left === undefined) {\n      // Event on the left side of the first axis.\n      dims.i = 0;\n      dims.left = pc.getOrderedDimensionKeys()[0];\n      dims.right = pc.getOrderedDimensionKeys()[1];\n    } else if (dims.right === undefined) {\n      // Event on the right side of the last axis\n      dims.i = keys(config.dimensions).length - 1;\n      dims.right = dims.left;\n      dims.left = pc.getOrderedDimensionKeys()[\n        keys(config.dimensions).length - 2\n      ];\n    }\n\n    return dims;\n  }\n\n  function onDragStart() {\n    // First we need to determine between which two axes the arc was started.\n    // This will determine the freedom of movement, because a arc can\n    // logically only happen between two axes, so no movement outside these axes\n    // should be allowed.\n    return function() {\n      let p = mouse(strumRect.node()),\n        dims,\n        arc;\n\n      p[0] = p[0] - config.margin.left;\n      p[1] = p[1] - config.margin.top;\n\n      (dims = dimensionsForPoint(p)),\n        (arc = {\n          p1: p,\n          dims: dims,\n          minX: xscale(dims.left),\n          maxX: xscale(dims.right),\n          minY: 0,\n          maxY: h(config),\n          startAngle: undefined,\n          endAngle: undefined,\n          arc: d3Arc().innerRadius(0),\n        });\n\n      arcs[dims.i] = arc;\n      arcs.active = dims.i;\n\n      // Make sure that the point is within the bounds\n      arc.p1[0] = Math.min(Math.max(arc.minX, p[0]), arc.maxX);\n      arc.p2 = arc.p1.slice();\n      arc.p3 = arc.p1.slice();\n    };\n  }\n\n  function onDrag() {\n    return function() {\n      let ev = event,\n        arc = arcs[arcs.active];\n\n      // Make sure that the point is within the bounds\n      arc.p2[0] = Math.min(\n        Math.max(arc.minX + 1, ev.x - config.margin.left),\n        arc.maxX\n      );\n      arc.p2[1] = Math.min(\n        Math.max(arc.minY, ev.y - config.margin.top),\n        arc.maxY\n      );\n      arc.p3 = arc.p2.slice();\n      // console.log(arcs.angle(arcs.active));\n      // console.log(signedAngle(arcs.unsignedAngle(arcs.active)));\n      drawStrum(arc, 1);\n    };\n  }\n\n  // some helper functions\n  function hypothenuse(a, b) {\n    return Math.sqrt(a * a + b * b);\n  }\n\n  let rad = (function() {\n    let c = Math.PI / 180;\n    return function(angle) {\n      return angle * c;\n    };\n  })();\n\n  let deg = (function() {\n    let c = 180 / Math.PI;\n    return function(angle) {\n      return angle * c;\n    };\n  })();\n\n  // [0, 2*PI] -> [-PI/2, PI/2]\n  let signedAngle = function(angle) {\n    let ret = angle;\n    if (angle > Math.PI) {\n      ret = angle - 1.5 * Math.PI;\n      ret = angle - 1.5 * Math.PI;\n    } else {\n      ret = angle - 0.5 * Math.PI;\n      ret = angle - 0.5 * Math.PI;\n    }\n    return -ret;\n  };\n\n  /**\n   * angles are stored in radians from in [0, 2*PI], where 0 in 12 o'clock.\n   * However, one can only select lines from 0 to PI, so we compute the\n   * 'signed' angle, where 0 is the horizontal line (3 o'clock), and +/- PI/2\n   * are 12 and 6 o'clock respectively.\n   */\n  function containmentTest(arc) {\n    let startAngle = signedAngle(arc.startAngle);\n    let endAngle = signedAngle(arc.endAngle);\n\n    if (startAngle > endAngle) {\n      let tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    // test if segment angle is contained in angle interval\n    return function(a) {\n      if (a >= startAngle && a <= endAngle) {\n        return true;\n      }\n\n      return false;\n    };\n  }\n\n  function selected() {\n    let ids = Object.getOwnPropertyNames(arcs),\n      brushed = config.data;\n\n    // Get the ids of the currently active arcs.\n    ids = ids.filter(function(d) {\n      return !isNaN(d);\n    });\n\n    function crossesStrum(d, id) {\n      let arc = arcs[id],\n        test = containmentTest(arc),\n        d1 = arc.dims.left,\n        d2 = arc.dims.right,\n        y1 = config.dimensions[d1].yscale,\n        y2 = config.dimensions[d2].yscale,\n        a = arcs.width(id),\n        b = y1(d[d1]) - y2(d[d2]),\n        c = hypothenuse(a, b),\n        angle = Math.asin(b / c); // rad in [-PI/2, PI/2]\n      return test(angle);\n    }\n\n    if (ids.length === 0) {\n      return brushed;\n    }\n\n    return brushed.filter(function(d) {\n      switch (brushGroup.predicate) {\n        case 'AND':\n          return ids.every(function(id) {\n            return crossesStrum(d, id);\n          });\n        case 'OR':\n          return ids.some(function(id) {\n            return crossesStrum(d, id);\n          });\n        default:\n          throw new Error('Unknown brush predicate ' + config.brushPredicate);\n      }\n    });\n  }\n\n  function removeStrum() {\n    let arc = arcs[arcs.active],\n      svg = pc.selection.select('svg').select('g#arcs');\n\n    delete arcs[arcs.active];\n    arcs.active = undefined;\n    svg.selectAll('line#arc-' + arc.dims.i).remove();\n    svg.selectAll('circle#arc-' + arc.dims.i).remove();\n    svg.selectAll('path#arc-' + arc.dims.i).remove();\n  }\n\n  function onDragEnd() {\n    return function() {\n      let brushed = config.data,\n        arc = arcs[arcs.active];\n\n      // Okay, somewhat unexpected, but not totally unsurprising, a mousclick is\n      // considered a drag without move. So we have to deal with that case\n      if (arc && arc.p1[0] === arc.p2[0] && arc.p1[1] === arc.p2[1]) {\n        removeStrum(arcs);\n      }\n\n      if (arc) {\n        let angle = arcs.startAngle(arcs.active);\n\n        arc.startAngle = angle;\n        arc.endAngle = angle;\n        arc.arc\n          .outerRadius(arcs.length(arcs.active))\n          .startAngle(angle)\n          .endAngle(angle);\n      }\n\n      brushed = selected(arcs);\n      arcs.active = undefined;\n      config.brushed = brushed;\n      pc.renderBrushed();\n      events.call('brushend', pc, config.brushed);\n    };\n  }\n\n  function brushReset(arcs) {\n    return function() {\n      let ids = Object.getOwnPropertyNames(arcs).filter(function(d) {\n        return !isNaN(d);\n      });\n\n      ids.forEach(function(d) {\n        arcs.active = d;\n        removeStrum(arcs);\n      });\n      onDragEnd(arcs)();\n    };\n  }\n\n  function install() {\n    g = pc.g();\n    if (!g) {\n      pc.createAxes();\n      g = pc.g();\n    }\n\n    let _drag = drag();\n\n    // Map of current arcs. arcs are stored per segment of the PC. A segment,\n    // being the area between two axes. The left most area is indexed at 0.\n    arcs.active = undefined;\n    // Returns the width of the PC segment where currently a arc is being\n    // placed. NOTE: even though they are evenly spaced in our current\n    // implementation, we keep for when non-even spaced segments are supported as\n    // well.\n    arcs.width = function(id) {\n      let arc = arcs[id];\n\n      if (arc === undefined) {\n        return undefined;\n      }\n\n      return arc.maxX - arc.minX;\n    };\n\n    // returns angles in [-PI/2, PI/2]\n    let angle = function(p1, p2) {\n      let a = p1[0] - p2[0],\n        b = p1[1] - p2[1],\n        c = hypothenuse(a, b);\n\n      return Math.asin(b / c);\n    };\n\n    // returns angles in [0, 2 * PI]\n    arcs.endAngle = function(id) {\n      let arc = arcs[id];\n      if (arc === undefined) {\n        return undefined;\n      }\n      let sAngle = angle(arc.p1, arc.p2),\n        uAngle = -sAngle + Math.PI / 2;\n\n      if (arc.p1[0] > arc.p2[0]) {\n        uAngle = 2 * Math.PI - uAngle;\n      }\n\n      return uAngle;\n    };\n\n    arcs.startAngle = function(id) {\n      let arc = arcs[id];\n      if (arc === undefined) {\n        return undefined;\n      }\n\n      let sAngle = angle(arc.p1, arc.p3),\n        uAngle = -sAngle + Math.PI / 2;\n\n      if (arc.p1[0] > arc.p3[0]) {\n        uAngle = 2 * Math.PI - uAngle;\n      }\n\n      return uAngle;\n    };\n\n    arcs.length = function(id) {\n      let arc = arcs[id];\n\n      if (arc === undefined) {\n        return undefined;\n      }\n\n      let a = arc.p1[0] - arc.p2[0],\n        b = arc.p1[1] - arc.p2[1],\n        c = hypothenuse(a, b);\n\n      return c;\n    };\n\n    pc.on('axesreorder.arcs', function() {\n      let ids = Object.getOwnPropertyNames(arcs).filter(function(d) {\n        return !isNaN(d);\n      });\n\n      // Checks if the first dimension is directly left of the second dimension.\n      function consecutive(first, second) {\n        let length = keys(config.dimensions).length;\n        return keys(config.dimensions).some(function(d, i) {\n          return d === first\n            ? i + i < length && config.dimensions[i + 1] === second\n            : false;\n        });\n      }\n\n      if (ids.length > 0) {\n        // We have some arcs, which might need to be removed.\n        ids.forEach(function(d) {\n          let dims = arcs[d].dims;\n          arcs.active = d;\n          // If the two dimensions of the current arc are not next to each other\n          // any more, than we'll need to remove the arc. Otherwise we keep it.\n          if (!consecutive(dims.left, dims.right)) {\n            removeStrum(arcs);\n          }\n        });\n        onDragEnd(arcs)();\n      }\n    });\n\n    // Add a new svg group in which we draw the arcs.\n    pc.selection\n      .select('svg')\n      .append('g')\n      .attr('id', 'arcs')\n      .attr(\n        'transform',\n        'translate(' + config.margin.left + ',' + config.margin.top + ')'\n      );\n\n    // Install the required brushReset function\n    pc.brushReset = brushReset(arcs);\n\n    _drag\n      .on('start', onDragStart(arcs))\n      .on('drag', onDrag(arcs))\n      .on('end', onDragEnd(arcs));\n\n    // NOTE: The styling needs to be done here and not in the css. This is because\n    //       for 1D brushing, the canvas layers should not listen to\n    //       pointer-events._.\n    strumRect = pc.selection\n      .select('svg')\n      .insert('rect', 'g#arcs')\n      .attr('id', 'arc-events')\n      .attr('x', config.margin.left)\n      .attr('y', config.margin.top)\n      .attr('width', w(config))\n      .attr('height', h(config) + 2)\n      .style('opacity', 0)\n      .call(_drag);\n  }\n\n  brushGroup.modes['angular'] = {\n    install: install,\n    uninstall: function() {\n      pc.selection\n        .select('svg')\n        .select('g#arcs')\n        .remove();\n      pc.selection\n        .select('svg')\n        .select('rect#arc-events')\n        .remove();\n      pc.on('axesreorder.arcs', undefined);\n      delete pc.brushReset;\n\n      strumRect = undefined;\n    },\n    selected: selected,\n    brushState: function() {\n      return arcs;\n    },\n  };\n};\n\nexport default installAngularBrush;\n","const intersection = (a, b, c, d) => {\n  return {\n    x:\n      ((a.x * b.y - a.y * b.x) * (c.x - d.x) -\n        (a.x - b.x) * (c.x * d.y - c.y * d.x)) /\n      ((a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x)),\n    y:\n      ((a.x * b.y - a.y * b.x) * (c.y - d.y) -\n        (a.y - b.y) * (c.x * d.y - c.y * d.x)) /\n      ((a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x)),\n  };\n};\n\nexport default intersection;\n","const mergeParcoords = pc => callback => {\n  // Retina display, etc.\n  const devicePixelRatio = window.devicePixelRatio || 1;\n\n  // Create a canvas element to store the merged canvases\n  const mergedCanvas = document.createElement('canvas');\n  mergedCanvas.width = pc.canvas.foreground.clientWidth * devicePixelRatio;\n  mergedCanvas.height =\n    (pc.canvas.foreground.clientHeight + 30) * devicePixelRatio;\n  mergedCanvas.style.width = mergedCanvas.width / devicePixelRatio + 'px';\n  mergedCanvas.style.height = mergedCanvas.height / devicePixelRatio + 'px';\n\n  // Give the canvas a white background\n  const context = mergedCanvas.getContext('2d');\n  context.fillStyle = '#ffffff';\n  context.fillRect(0, 0, mergedCanvas.width, mergedCanvas.height);\n\n  // Merge all the canvases\n  for (const key in pc.canvas) {\n    context.drawImage(\n      pc.canvas[key],\n      0,\n      24 * devicePixelRatio,\n      mergedCanvas.width,\n      mergedCanvas.height - 30 * devicePixelRatio\n    );\n  }\n\n  // Add SVG elements to canvas\n  const DOMURL = window.URL || window.webkitURL || window;\n  const serializer = new XMLSerializer();\n  const svgStr = serializer.serializeToString(\n    pc.selection.select('svg').node()\n  );\n\n  // Create a Data URI.\n  const src = 'data:image/svg+xml;base64,' + window.btoa(svgStr);\n  const img = new Image();\n  img.onload = () => {\n    context.drawImage(\n      img,\n      0,\n      0,\n      img.width * devicePixelRatio,\n      img.height * devicePixelRatio\n    );\n    if (typeof callback === 'function') {\n      callback(mergedCanvas);\n    }\n  };\n  img.src = src;\n};\n\nexport default mergeParcoords;\n","import { brushSelection } from 'd3-brush';\nimport { selectAll } from 'd3-selection';\n\nconst selected = config => {\n  let actives = [];\n  let extents = [];\n  let ranges = {};\n  //get brush selections from each node, convert to actual values\n  //invert order of values in array to comply with the parcoords architecture\n  if (config.brushes.length === 0) {\n    let nodes = selectAll('.brush').nodes();\n    for (let k = 0; k < nodes.length; k++) {\n      if (brushSelection(nodes[k]) !== null) {\n        actives.push(nodes[k].__data__);\n        let values = [];\n        let ranger = brushSelection(nodes[k]);\n        if (\n          typeof config.dimensions[nodes[k].__data__].yscale.domain()[0] ===\n          'number'\n        ) {\n          for (let i = 0; i < ranger.length; i++) {\n            if (\n              actives.includes(nodes[k].__data__) &&\n              config.flipAxes.includes(nodes[k].__data__)\n            ) {\n              values.push(\n                config.dimensions[nodes[k].__data__].yscale.invert(ranger[i])\n              );\n            } else if (config.dimensions[nodes[k].__data__].yscale() !== 1) {\n              values.unshift(\n                config.dimensions[nodes[k].__data__].yscale.invert(ranger[i])\n              );\n            }\n          }\n          extents.push(values);\n          for (let ii = 0; ii < extents.length; ii++) {\n            if (extents[ii].length === 0) {\n              extents[ii] = [1, 1];\n            }\n          }\n        } else {\n          ranges[nodes[k].__data__] = brushSelection(nodes[k]);\n          let dimRange = config.dimensions[nodes[k].__data__].yscale.range();\n          let dimDomain = config.dimensions[nodes[k].__data__].yscale.domain();\n          for (let j = 0; j < dimRange.length; j++) {\n            if (\n              dimRange[j] >= ranger[0] &&\n              dimRange[j] <= ranger[1] &&\n              actives.includes(nodes[k].__data__) &&\n              config.flipAxes.includes(nodes[k].__data__)\n            ) {\n              values.push(dimRange[j]);\n            } else if (dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) {\n              values.unshift(dimRange[j]);\n            }\n          }\n          extents.push(values);\n          for (let ii = 0; ii < extents.length; ii++) {\n            if (extents[ii].length === 0) {\n              extents[ii] = [1, 1];\n            }\n          }\n        }\n      }\n    }\n    // test if within range\n    const within = {\n      date: function(d, p, dimension) {\n        let category = d[p];\n        let categoryIndex = config.dimensions[p].yscale\n          .domain()\n          .indexOf(category);\n        let categoryRangeValue = config.dimensions[p].yscale.range()[\n          categoryIndex\n        ];\n        return (\n          categoryRangeValue >= ranges[p][0] &&\n          categoryRangeValue <= ranges[p][1]\n        );\n      },\n      number: function(d, p, dimension) {\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\n      },\n      string: function(d, p, dimension) {\n        let category = d[p];\n        let categoryIndex = config.dimensions[p].yscale\n          .domain()\n          .indexOf(category);\n        let categoryRangeValue = config.dimensions[p].yscale.range()[\n          categoryIndex\n        ];\n        return (\n          categoryRangeValue >= ranges[p][0] &&\n          categoryRangeValue <= ranges[p][1]\n        );\n      },\n    };\n    return config.data.filter(function(d) {\n      return actives.every(function(p, dimension) {\n        return within[config.dimensions[p].type](d, p, dimension);\n      });\n    });\n  } else {\n    // need to get data from each brush instead of each axis\n    // first must find active axes by iterating through all brushes\n    // then go through similiar process as above.\n    let multiBrushData = [];\n    for (let idx = 0; idx < config.brushes.length; idx++) {\n      let brush = config.brushes[idx];\n      let values = [];\n      let ranger = brush.extent;\n      let actives = [brush.data];\n      if (\n        typeof config.dimensions[brush.data].yscale.domain()[0] === 'number'\n      ) {\n        for (let i = 0; i < ranger.length; i++) {\n          if (\n            actives.includes(brush.data) &&\n            config.flipAxes.includes(brush.data)\n          ) {\n            values.push(config.dimensions[brush.data].yscale.invert(ranger[i]));\n          } else if (config.dimensions[brush.data].yscale() !== 1) {\n            values.unshift(\n              config.dimensions[brush.data].yscale.invert(ranger[i])\n            );\n          }\n        }\n        extents.push(values);\n        for (let ii = 0; ii < extents.length; ii++) {\n          if (extents[ii].length === 0) {\n            extents[ii] = [1, 1];\n          }\n        }\n      } else {\n        ranges[brush.data] = brush.extent;\n        let dimRange = config.dimensions[brush.data].yscale.range();\n        let dimDomain = config.dimensions[brush.data].yscale.domain();\n        for (let j = 0; j < dimRange.length; j++) {\n          if (\n            dimRange[j] >= ranger[0] &&\n            dimRange[j] <= ranger[1] &&\n            actives.includes(brush.data) &&\n            config.flipAxes.includes(brush.data)\n          ) {\n            values.push(dimRange[j]);\n          } else if (dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) {\n            values.unshift(dimRange[j]);\n          }\n        }\n        extents.push(values);\n        for (let ii = 0; ii < extents.length; ii++) {\n          if (extents[ii].length === 0) {\n            extents[ii] = [1, 1];\n          }\n        }\n      }\n      let within = {\n        date: function(d, p, dimension) {\n          let category = d[p];\n          let categoryIndex = config.dimensions[p].yscale\n            .domain()\n            .indexOf(category);\n          let categoryRangeValue = config.dimensions[p].yscale.range()[\n            categoryIndex\n          ];\n          return (\n            categoryRangeValue >= ranges[p][0] &&\n            categoryRangeValue <= ranges[p][1]\n          );\n        },\n        number: function(d, p, dimension) {\n          return extents[idx][0] <= d[p] && d[p] <= extents[idx][1];\n        },\n        string: function(d, p, dimension) {\n          let category = d[p];\n          let categoryIndex = config.dimensions[p].yscale\n            .domain()\n            .indexOf(category);\n          let categoryRangeValue = config.dimensions[p].yscale.range()[\n            categoryIndex\n          ];\n          return (\n            categoryRangeValue >= ranges[p][0] &&\n            categoryRangeValue <= ranges[p][1]\n          );\n        },\n      };\n\n      // filter data, but instead of returning it now,\n      // put it into multiBrush data which is returned after\n      // all brushes are iterated through.\n      let filtered = config.data.filter(function(d) {\n        return actives.every(function(p, dimension) {\n          return within[config.dimensions[p].type](d, p, dimension);\n        });\n      });\n      for (let z = 0; z < filtered.length; z++) {\n        multiBrushData.push(filtered[z]);\n      }\n      actives = [];\n      ranges = {};\n    }\n    return multiBrushData;\n  }\n};\n\nexport default selected;\n","const brushPredicate = (brushGroup, config, pc) => (predicate = null) => {\n  if (predicate === null) {\n    return brushGroup.predicate;\n  }\n\n  predicate = String(predicate).toUpperCase();\n  if (predicate !== 'AND' && predicate !== 'OR') {\n    throw new Error('Invalid predicate ' + predicate);\n  }\n\n  brushGroup.predicate = predicate;\n  config.brushed = brushGroup.currentMode().selected();\n  pc.renderBrushed();\n  return pc;\n};\n\nconst brushMode = (brushGroup, config, pc) => (mode = null) => {\n  if (mode === null) {\n    return brushGroup.mode;\n  }\n\n  if (pc.brushModes().indexOf(mode) === -1) {\n    throw new Error('pc.brushmode: Unsupported brush mode: ' + mode);\n  }\n\n  // Make sure that we don't trigger unnecessary events by checking if the mode\n  // actually changes.\n  if (mode !== brushGroup.mode) {\n    // When changing brush modes, the first thing we need to do is clearing any\n    // brushes from the current mode, if any.\n    if (brushGroup.mode !== 'None') {\n      pc.brushReset();\n    }\n\n    // Next, we need to 'uninstall' the current brushMode.\n    brushGroup.modes[brushGroup.mode].uninstall(pc);\n    // Finally, we can install the requested one.\n    brushGroup.mode = mode;\n    brushGroup.modes[brushGroup.mode].install();\n    if (mode === 'None') {\n      delete pc.brushPredicate;\n    } else {\n      pc.brushPredicate = brushPredicate(brushGroup, config, pc);\n    }\n  }\n\n  return pc;\n};\n\nexport default brushMode;\n","/**\n * dimension display names\n *\n * @param config\n * @param d\n * @returns {*}\n */\nconst dimensionLabels = config => d =>\n  config.dimensions[d].title ? config.dimensions[d].title : d;\n\nexport default dimensionLabels;\n","import { select } from 'd3-selection';\n\nconst flipAxisAndUpdatePCP = (config, pc, axis) =>\n  function(dimension) {\n    pc.flip(dimension);\n    pc.brushReset(dimension);\n    select(this.parentElement)\n      .transition()\n      .duration(config.animationTime)\n      .call(axis.scale(config.dimensions[dimension].yscale));\n    pc.render();\n  };\n\nexport default flipAxisAndUpdatePCP;\n","import { event } from 'd3-selection';\n\nconst rotateLabels = (config, pc) => {\n  if (!config.rotateLabels) return;\n\n  let delta = event.deltaY;\n  delta = delta < 0 ? -5 : delta;\n  delta = delta > 0 ? 5 : delta;\n\n  config.dimensionTitleRotation += delta;\n  pc.svg\n    .selectAll('text.label')\n    .attr(\n      'transform',\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\n    );\n  event.preventDefault();\n};\n\nexport default rotateLabels;\n","import { select } from 'd3-selection';\nimport dimensionLabels from '../util/dimensionLabels';\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\nimport rotateLabels from '../util/rotateLabels';\n\nconst updateAxes = (config, pc, position, axis, flags) => (\n  animationTime = null\n) => {\n  if (animationTime === null) {\n    animationTime = config.animationTime;\n  }\n\n  const g_data = pc.svg\n    .selectAll('.dimension')\n    .data(pc.getOrderedDimensionKeys());\n  // Enter\n  g_data\n    .enter()\n    .append('svg:g')\n    .attr('class', 'dimension')\n    .attr('transform', p => 'translate(' + position(p) + ')')\n    .style('opacity', 0)\n    .append('svg:g')\n    .attr('class', 'axis')\n    .attr('transform', 'translate(0,0)')\n    .each(function(d) {\n      const axisElement = select(this).call(\n        pc.applyAxisConfig(axis, config.dimensions[d])\n      );\n\n      axisElement\n        .selectAll('path')\n        .style('fill', 'none')\n        .style('stroke', '#222')\n        .style('shape-rendering', 'crispEdges');\n\n      axisElement\n        .selectAll('line')\n        .style('fill', 'none')\n        .style('stroke', '#222')\n        .style('shape-rendering', 'crispEdges');\n    })\n    .append('svg:text')\n    .attr({\n      'text-anchor': 'middle',\n      y: 0,\n      transform:\n        'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')',\n      x: 0,\n      class: 'label',\n    })\n    .text(dimensionLabels(config))\n    .on('dblclick', flipAxisAndUpdatePCP(config, pc, axis))\n    .on('wheel', rotateLabels(config, pc));\n\n  // Update\n  g_data.attr('opacity', 0);\n  g_data\n    .select('.axis')\n    .transition()\n    .duration(animationTime)\n    .each(function(d) {\n      select(this).call(pc.applyAxisConfig(axis, config.dimensions[d]));\n    });\n  g_data\n    .select('.label')\n    .transition()\n    .duration(animationTime)\n    .text(dimensionLabels(config))\n    .attr(\n      'transform',\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\n    );\n\n  // Exit\n  g_data.exit().remove();\n\n  g = pc.svg.selectAll('.dimension');\n  g\n    .transition()\n    .duration(animationTime)\n    .attr('transform', function(p) {\n      return 'translate(' + position(p) + ')';\n    })\n    .style('opacity', 1);\n\n  pc.svg\n    .selectAll('.axis')\n    .transition()\n    .duration(animationTime)\n    .each(function(d) {\n      select(this).call(pc.applyAxisConfig(axis, config.dimensions[d]));\n    });\n\n  if (flags.brushable) pc.brushable();\n  if (flags.reorderable) pc.reorderable();\n  if (pc.brushMode() !== 'None') {\n    let mode = pc.brushMode();\n    pc.brushMode('None');\n    pc.brushMode(mode);\n  }\n  return this;\n};\n\nexport default updateAxes;\n","/** adjusts an axis' default range [h()+1, 1] if a NullValueSeparator is set */\nconst getRange = config => {\n  const h = config.height - config.margin.top - config.margin.bottom;\n\n  if (config.nullValueSeparator == 'bottom') {\n    return [\n      h +\n        1 -\n        config.nullValueSeparatorPadding.bottom -\n        config.nullValueSeparatorPadding.top,\n      1,\n    ];\n  } else if (config.nullValueSeparator == 'top') {\n    return [\n      h + 1,\n      1 +\n        config.nullValueSeparatorPadding.bottom +\n        config.nullValueSeparatorPadding.top,\n    ];\n  }\n  return [h + 1, 1];\n};\n\nexport default getRange;\n","import { scaleLinear, scaleOrdinal, scalePoint, scaleTime } from 'd3-scale';\nimport { keys } from 'd3-collection';\nimport { extent } from 'd3-array';\nimport getRange from '../util/getRange';\nimport w from '../util/width';\nimport h from '../util/height';\n\nconst autoscale = (config, pc, xscale, ctx) =>\n  function() {\n    // yscale\n    let defaultScales = {\n      date: function(k) {\n        let _extent = extent(config.data, function(d) {\n          return d[k] ? d[k].getTime() : null;\n        });\n        // special case if single value\n        if (_extent[0] === _extent[1]) {\n          return scalePoint()\n            .domain(_extent)\n            .range(getRange(config));\n        }\n        if (config.flipAxes.includes(k)) {\n          let tempDate = [];\n          _extent.forEach(function(val) {\n            tempDate.unshift(val);\n          });\n          _extent = tempDate;\n        }\n        return scaleTime()\n          .domain(_extent)\n          .range(getRange(config));\n      },\n      number: function(k) {\n        let _extent = extent(config.data, function(d) {\n          return +d[k];\n        });\n        // special case if single value\n        if (_extent[0] === _extent[1]) {\n          return scalePoint()\n            .domain(_extent)\n            .range(getRange(config));\n        }\n        if (config.flipAxes.includes(k)) {\n          let temp = [];\n          _extent.forEach(function(val) {\n            temp.unshift(val);\n          });\n          _extent = temp;\n        }\n        return scaleLinear()\n          .domain(_extent)\n          .range(getRange(config));\n      },\n      string: function(k) {\n        let counts = {},\n          domain = [];\n        // Let's get the count for each value so that we can sort the domain based\n        // on the number of items for each value.\n        config.data.map(function(p) {\n          if (p[k] === undefined && config.nullValueSeparator !== 'undefined') {\n            return; // null values will be drawn beyond the horizontal null value separator!\n          }\n          if (counts[p[k]] === undefined) {\n            counts[p[k]] = 1;\n          } else {\n            counts[p[k]] = counts[p[k]] + 1;\n          }\n        });\n        if (config.flipAxes.includes(k)) {\n          domain = Object.getOwnPropertyNames(counts).sort();\n        } else {\n          let tempArr = Object.getOwnPropertyNames(counts).sort();\n          for (let i = 0; i < Object.getOwnPropertyNames(counts).length; i++) {\n            domain.push(tempArr.pop());\n          }\n        }\n\n        //need to create an ordinal scale for categorical data\n        let categoricalRange = [];\n        if (domain.length === 1) {\n          //edge case\n          domain = [' ', domain[0], ' '];\n        }\n        let addBy = getRange(config)[0] / (domain.length - 1);\n        for (let j = 0; j < domain.length; j++) {\n          if (categoricalRange.length === 0) {\n            categoricalRange.push(0);\n            continue;\n          }\n          categoricalRange.push(categoricalRange[j - 1] + addBy);\n        }\n        return scaleOrdinal()\n          .domain(domain)\n          .range(categoricalRange);\n      },\n    };\n    keys(config.dimensions).forEach(function(k) {\n      config.dimensions[k].yscale = defaultScales[config.dimensions[k].type](k);\n    });\n\n    // xscale\n    xscale.range([0, w(config)], 1);\n    // Retina display, etc.\n    let devicePixelRatio = window.devicePixelRatio || 1;\n\n    // canvas sizes\n    pc.selection\n      .selectAll('canvas')\n      .style('margin-top', config.margin.top + 'px')\n      .style('margin-left', config.margin.left + 'px')\n      .style('width', w(config) + 2 + 'px')\n      .style('height', h(config) + 2 + 'px')\n      .attr('width', (w(config) + 2) * devicePixelRatio)\n      .attr('height', (h(config) + 2) * devicePixelRatio);\n    // default styles, needs to be set when canvas width changes\n    ctx.foreground.strokeStyle = config.color;\n    ctx.foreground.lineWidth = 1.4;\n    ctx.foreground.globalCompositeOperation = config.composite;\n    ctx.foreground.globalAlpha = config.alpha;\n    ctx.foreground.scale(devicePixelRatio, devicePixelRatio);\n    ctx.brushed.strokeStyle = config.brushedColor;\n    ctx.brushed.lineWidth = 1.4;\n    ctx.brushed.globalCompositeOperation = config.composite;\n    ctx.brushed.globalAlpha = config.alpha;\n    ctx.brushed.scale(devicePixelRatio, devicePixelRatio);\n    ctx.highlight.lineWidth = 3;\n    ctx.highlight.scale(devicePixelRatio, devicePixelRatio);\n\n    return this;\n  };\n\nexport default autoscale;\n","import { brushSelection, brushY } from 'd3-brush';\nimport { event, select } from 'd3-selection';\n\nconst brushable = (config, pc, flags) =>\n  function() {\n    let g = pc.g();\n    if (!g) {\n      pc.createAxes();\n      g = pc.g();\n    }\n\n    // Add and store a brush for each axis.\n    g\n      .append('svg:g')\n      .attr('class', 'brush')\n      .each(function(d) {\n        if (config.dimensions[d] !== undefined) {\n          config.dimensions[d]['brush'] = brushY(select(this)).extent([\n            [-15, 0],\n            [15, config.dimensions[d].yscale.range()[0]],\n          ]);\n          select(this).call(\n            config.dimensions[d]['brush']\n              .on('start', function() {\n                if (event.sourceEvent !== null && !event.sourceEvent.ctrlKey) {\n                  pc.brushReset();\n                }\n              })\n              .on('brush', function() {\n                if (!event.sourceEvent.ctrlKey) {\n                  pc.brush();\n                }\n              })\n              .on('end', function() {\n                // save brush selection is ctrl key is held\n                // store important brush information and\n                // the html element of the selection,\n                // to make a dummy selection element\n                if (event.sourceEvent.ctrlKey) {\n                  let html = select(this)\n                    .select('.selection')\n                    .nodes()[0].outerHTML;\n                  html = html.replace(\n                    'class=\"selection\"',\n                    'class=\"selection dummy' +\n                      ' selection-' +\n                      config.brushes.length +\n                      '\"'\n                  );\n                  let dat = select(this).nodes()[0].__data__;\n                  let brush = {\n                    id: config.brushes.length,\n                    extent: brushSelection(this),\n                    html: html,\n                    data: dat,\n                  };\n                  config.brushes.push(brush);\n                  select(select(this).nodes()[0].parentNode)\n                    .select('.axis')\n                    .nodes()[0].outerHTML += html;\n                  pc.brush();\n                  config.dimensions[d].brush.move(select(this, null));\n                  select(this)\n                    .select('.selection')\n                    .attr('style', 'display:none');\n                  pc.brushable();\n                } else {\n                  pc.brush();\n                }\n              })\n          );\n          select(this).on('dblclick', function() {\n            pc.brushReset(d);\n          });\n        }\n      });\n\n    flags.brushable = true;\n    return this;\n  };\n\nexport default brushable;\n","import { keys } from 'd3-collection';\nimport { extent } from 'd3-array';\n\nconst commonScale = (config, pc) =>\n  function(global, type) {\n    let t = type || 'number';\n    if (typeof global === 'undefined') {\n      global = true;\n    }\n\n    // try to autodetect dimensions and create scales\n    if (!keys(config.dimensions).length) {\n      pc.detectDimensions();\n    }\n    pc.autoscale();\n\n    // scales of the same type\n    let scales = keys(config.dimensions).filter(function(p) {\n      return config.dimensions[p].type == t;\n    });\n\n    if (global) {\n      let _extent = extent(\n        scales\n          .map(function(d, i) {\n            return config.dimensions[d].yscale.domain();\n          })\n          .reduce(function(a, b) {\n            return a.concat(b);\n          })\n      );\n\n      scales.forEach(function(d) {\n        config.dimensions[d].yscale.domain(_extent);\n      });\n    } else {\n      scales.forEach(function(d) {\n        config.dimensions[d].yscale.domain(\n          extent(config.data, function(d) {\n            return +d[k];\n          })\n        );\n      });\n    }\n\n    // update centroids\n    if (config.bundleDimension !== null) {\n      pc.bundleDimension(config.bundleDimension);\n    }\n\n    return this;\n  };\n\nexport default commonScale;\n","import { keys } from 'd3-collection';\n\nconst computeRealCentroids = (dimensions, position) => row => {\n  let realCentroids = [];\n\n  let p = keys(dimensions);\n  let cols = p.length;\n  let a = 0.5;\n\n  for (let i = 0; i < cols; ++i) {\n    let x = position(p[i]);\n    let y = dimensions[p[i]].yscale(row[p[i]]);\n    realCentroids.push([x, y]);\n  }\n\n  return realCentroids;\n};\n\nexport default computeRealCentroids;\n","import { keys } from 'd3-collection';\n\nconst applyDimensionDefaults = (config, pc) =>\n  function(dims) {\n    let types = pc.detectDimensionTypes(config.data);\n    dims = dims ? dims : keys(types);\n    let newDims = {};\n    let currIndex = 0;\n    dims.forEach(function(k) {\n      newDims[k] = config.dimensions[k] ? config.dimensions[k] : {};\n      //Set up defaults\n      newDims[k].orient = newDims[k].orient ? newDims[k].orient : 'left';\n      newDims[k].ticks = newDims[k].ticks != null ? newDims[k].ticks : 5;\n      newDims[k].innerTickSize =\n        newDims[k].innerTickSize != null ? newDims[k].innerTickSize : 6;\n      newDims[k].outerTickSize =\n        newDims[k].outerTickSize != null ? newDims[k].outerTickSize : 0;\n      newDims[k].tickPadding =\n        newDims[k].tickPadding != null ? newDims[k].tickPadding : 3;\n      newDims[k].type = newDims[k].type ? newDims[k].type : types[k];\n\n      newDims[k].index =\n        newDims[k].index != null ? newDims[k].index : currIndex;\n      currIndex++;\n    });\n    return newDims;\n  };\n\nexport default applyDimensionDefaults;\n","import { select } from 'd3-selection';\nimport dimensionLabels from '../util/dimensionLabels';\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\nimport rotateLabels from '../util/rotateLabels';\n\nconst createAxes = (config, pc, xscale, flags, axis) =>\n  function() {\n    if (pc.g() !== undefined) {\n      pc.removeAxes();\n    }\n    // Add a group element for each dimension.\n    pc._g = pc.svg\n      .selectAll('.dimension')\n      .data(pc.getOrderedDimensionKeys(), function(d) {\n        return d;\n      })\n      .enter()\n      .append('svg:g')\n      .attr('class', 'dimension')\n      .attr('transform', function(d) {\n        return 'translate(' + xscale(d) + ')';\n      });\n    // Add an axis and title.\n    pc._g\n      .append('svg:g')\n      .attr('class', 'axis')\n      .attr('transform', 'translate(0,0)')\n      .each(function(d) {\n        let axisElement = select(this).call(\n          pc.applyAxisConfig(axis, config.dimensions[d])\n        );\n\n        axisElement\n          .selectAll('path')\n          .style('fill', 'none')\n          .style('stroke', '#222')\n          .style('shape-rendering', 'crispEdges');\n\n        axisElement\n          .selectAll('line')\n          .style('fill', 'none')\n          .style('stroke', '#222')\n          .style('shape-rendering', 'crispEdges');\n      })\n\n      .append('svg:text')\n      .attr('text-anchor', 'middle')\n      .attr('y', 0)\n      .attr(\n        'transform',\n        'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\n      )\n      .attr('x', 0)\n      .attr('class', 'label')\n      .text(dimensionLabels(config))\n      .on('dblclick', flipAxisAndUpdatePCP(config, pc, axis))\n      .on('wheel', rotateLabels(config, pc));\n\n    if (config.nullValueSeparator == 'top') {\n      pc.svg\n        .append('line')\n        .attr('x1', 0)\n        .attr('y1', 1 + config.nullValueSeparatorPadding.top)\n        .attr('x2', w())\n        .attr('y2', 1 + config.nullValueSeparatorPadding.top)\n        .attr('stroke-width', 1)\n        .attr('stroke', '#777')\n        .attr('fill', 'none')\n        .attr('shape-rendering', 'crispEdges');\n    } else if (config.nullValueSeparator == 'bottom') {\n      pc.svg\n        .append('line')\n        .attr('x1', 0)\n        .attr('y1', h() + 1 - config.nullValueSeparatorPadding.bottom)\n        .attr('x2', w())\n        .attr('y2', h() + 1 - config.nullValueSeparatorPadding.bottom)\n        .attr('stroke-width', 1)\n        .attr('stroke', '#777')\n        .attr('fill', 'none')\n        .attr('shape-rendering', 'crispEdges');\n    }\n\n    flags.axes = true;\n    return this;\n  };\n\nexport default createAxes;\n","import { entries } from 'd3-collection';\nimport { min } from 'd3-array';\n\nconst axisDots = (config, pc, position) => _r => {\n  const r = _r || 0.1;\n  const ctx = pc.ctx.marks;\n  const startAngle = 0;\n  const endAngle = 2 * Math.PI;\n  ctx.globalAlpha = min([1 / Math.pow(config.data.length, 1 / 2), 1]);\n  config.data.forEach(d => {\n    entries(config.dimensions).forEach((p, i) => {\n      ctx.beginPath();\n      ctx.arc(\n        position(p),\n        config.dimensions[p.key].yscale(d[p]),\n        r,\n        startAngle,\n        endAngle\n      );\n      ctx.stroke();\n      ctx.fill();\n    });\n  });\n  return this;\n};\n\nexport default axisDots;\n","import { axisBottom, axisLeft, axisRight, axisTop } from 'd3-axis';\n\nconst applyAxisConfig = (axis, dimension) => {\n  let axisCfg;\n\n  switch (dimension.orient) {\n    case 'left':\n      axisCfg = axisLeft(dimension.yscale);\n      break;\n    case 'right':\n      axisCfg = axisRight(dimension.yscale);\n      break;\n    case 'top':\n      axisCfg = axisTop(dimension.yscale);\n      break;\n    case 'bottom':\n      axisCfg = axisBottom(dimension.yscale);\n      break;\n    default:\n      axisCfg = axisLeft(dimension.yscale);\n      break;\n  }\n\n  axisCfg\n    .ticks(dimension.ticks)\n    .tickValues(dimension.tickValues)\n    .tickSizeInner(dimension.innerTickSize)\n    .tickSizeOuter(dimension.outerTickSize)\n    .tickPadding(dimension.tickPadding)\n    .tickFormat(dimension.tickFormat);\n\n  return axisCfg;\n};\n\nexport default applyAxisConfig;\n","import { drag } from 'd3-drag';\nimport { event, select } from 'd3-selection';\nimport w from '../util/width';\n\n// Jason Davies, http://bl.ocks.org/1341281\nconst reorderable = (config, pc, xscale, position, dragging, flags) =>\n  function() {\n    if (pc.g() === undefined) pc.createAxes();\n    const g = pc.g();\n\n    g.style('cursor', 'move').call(\n      drag()\n        .on('start', function(d) {\n          dragging[d] = this.__origin__ = xscale(d);\n        })\n        .on('drag', function(d) {\n          dragging[d] = Math.min(\n            w(__),\n            Math.max(0, (this.__origin__ += event.dx))\n          );\n          pc.sortDimensions();\n          xscale.domain(pc.getOrderedDimensionKeys());\n          pc.render();\n          g.attr('transform', d => 'translate(' + position(d) + ')');\n        })\n        .on('end', function(d) {\n          delete this.__origin__;\n          delete dragging[d];\n          select(this)\n            .transition()\n            .attr('transform', 'translate(' + xscale(d) + ')');\n          pc.render();\n        })\n    );\n    flags.reorderable = true;\n    return this;\n  };\n\nexport default reorderable;\n","// rescale for height, width and margins\n// TODO currently assumes chart is brushable, and destroys old brushes\nconst resize = (config, pc, flags, events) => {\n  return function() {\n    // selection size\n    pc.selection\n      .select('svg')\n      .attr('width', config.width)\n      .attr('height', config.height);\n    pc.svg.attr(\n      'transform',\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\n    );\n\n    // FIXME: the current brush state should pass through\n    if (flags.brushable) pc.brushReset();\n\n    // scales\n    pc.autoscale();\n\n    // axes, destroys old brushes.\n    if (pc.g()) pc.createAxes();\n    if (flags.brushable) pc.brushable();\n    if (flags.reorderable) pc.reorderable();\n\n    events.call('resize', this, {\n      width: config.width,\n      height: config.height,\n      margin: config.margin,\n    });\n\n    return this;\n  };\n};\n\nexport default resize;\n","// Reorder dimensions, such that the highest value (visually) is on the left and\n// the lowest on the right. Visual values are determined by the data values in\n// the given row.\nconst reorder = (config, pc, xscale) => rowdata => {\n  const firstDim = pc.getOrderedDimensionKeys()[0];\n\n  pc.sortDimensionsByRowData(rowdata);\n  // NOTE: this is relatively cheap given that:\n  // number of dimensions < number of data items\n  // Thus we check equality of order to prevent rerendering when this is the case.\n  let reordered = firstDim !== pc.getOrderedDimensionKeys()[0];\n\n  if (reordered) {\n    xscale.domain(pc.getOrderedDimensionKeys());\n    const highlighted = config.highlighted.slice(0);\n    pc.unhighlight();\n\n    const g = pc.g();\n    g\n      .transition()\n      .duration(1500)\n      .attr('transform', d => 'translate(' + xscale(d) + ')');\n    pc.render();\n\n    // pc.highlight() does not check whether highlighted is length zero, so we do that here.\n    if (highlighted.length !== 0) {\n      pc.highlight(highlighted);\n    }\n  }\n};\n\nexport default reorder;\n","import { keys } from 'd3-collection';\n\nconst sortDimensions = (config, position) => () => {\n  const copy = Object.assign({}, config.dimensions);\n  const positionSortedKeys = keys(config.dimensions).sort(\n    (a, b) => (position(a) - position(b) === 0 ? 1 : position(a) - position(b))\n  );\n  config.dimensions = {};\n  positionSortedKeys.forEach((p, i) => {\n    config.dimensions[p] = copy[p];\n    config.dimensions[p].index = i;\n  });\n};\n\nexport default sortDimensions;\n","import { keys } from 'd3-collection';\n\nconst sortDimensionsByRowData = config => rowdata => {\n  const copy = Object.assign({}, config.dimensions);\n  const positionSortedKeys = keys(config.dimensions).sort((a, b) => {\n    const pixelDifference =\n      config.dimensions[a].yscale(rowdata[a]) -\n      config.dimensions[b].yscale(rowdata[b]);\n\n    // Array.sort is not necessarily stable, this means that if pixelDifference is zero\n    // the ordering of dimensions might change unexpectedly. This is solved by sorting on\n    // variable name in that case.\n    return pixelDifference === 0 ? a.localeCompare(b) : pixelDifference;\n  });\n  config.dimensions = {};\n  positionSortedKeys.forEach((p, i) => {\n    config.dimensions[p] = copy[p];\n    config.dimensions[p].index = i;\n  });\n};\n\nexport default sortDimensionsByRowData;\n","const isBrushed = (config, brushGroup) => {\n  if (config.brushed && config.brushed.length !== config.data.length)\n    return true;\n\n  const object = brushGroup.currentMode().brushState();\n\n  for (let key in object) {\n    if (object.hasOwnProperty(key)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport default isBrushed;\n","import h from '../util/height';\nimport w from '../util/width';\nimport isBrushed from '../util/isBrushed';\n\nconst clear = (config, pc, ctx, brushGroup) =>\n  function(layer) {\n    ctx[layer].clearRect(0, 0, w(config) + 2, h(config) + 2);\n\n    // This will make sure that the foreground items are transparent\n    // without the need for changing the opacity style of the foreground canvas\n    // as this would stop the css styling from working\n    if (layer === 'brushed' && isBrushed(config, brushGroup)) {\n      ctx.brushed.fillStyle = pc.selection.style('background-color');\n      ctx.brushed.globalAlpha = 1 - config.alphaOnBrushed;\n      ctx.brushed.fillRect(0, 0, w(config) + 2, h(config) + 2);\n      ctx.brushed.globalAlpha = config.alpha;\n    }\n    return this;\n  };\n\nexport default clear;\n","import { keys } from 'd3-collection';\n\nconst computeCentroids = (config, position, row) => {\n  let centroids = [];\n\n  let p = keys(config.dimensions);\n  let cols = p.length;\n  let a = 0.5; // center between axes\n  for (let i = 0; i < cols; ++i) {\n    // centroids on 'real' axes\n    let x = position(p[i]);\n    let y = config.dimensions[p[i]].yscale(row[p[i]]);\n    centroids.push($V([x, y]));\n\n    // centroids on 'virtual' axes\n    if (i < cols - 1) {\n      let cx = x + a * (position(p[i + 1]) - x);\n      let cy = y + a * (config.dimensions[p[i + 1]].yscale(row[p[i + 1]]) - y);\n      if (config.bundleDimension !== null) {\n        let leftCentroid = config.clusterCentroids\n          .get(\n            config.dimensions[config.bundleDimension].yscale(\n              row[config.bundleDimension]\n            )\n          )\n          .get(p[i]);\n        let rightCentroid = config.clusterCentroids\n          .get(\n            config.dimensions[config.bundleDimension].yscale(\n              row[config.bundleDimension]\n            )\n          )\n          .get(p[i + 1]);\n        let centroid = 0.5 * (leftCentroid + rightCentroid);\n        cy = centroid + (1 - config.bundlingStrength) * (cy - centroid);\n      }\n      centroids.push($V([cx, cy]));\n    }\n  }\n\n  return centroids;\n};\n\nexport default computeCentroids;\n","const computeControlPoints = (smoothness, centroids) => {\n  let cols = centroids.length;\n  let a = smoothness;\n  let cps = [];\n\n  cps.push(centroids[0]);\n  cps.push(\n    $V([\n      centroids[0].e(1) + a * 2 * (centroids[1].e(1) - centroids[0].e(1)),\n      centroids[0].e(2),\n    ])\n  );\n  for (let col = 1; col < cols - 1; ++col) {\n    let mid = centroids[col];\n    let left = centroids[col - 1];\n    let right = centroids[col + 1];\n\n    let diff = left.subtract(right);\n    cps.push(mid.add(diff.x(a)));\n    cps.push(mid);\n    cps.push(mid.subtract(diff.x(a)));\n  }\n  cps.push(\n    $V([\n      centroids[cols - 1].e(1) +\n        a * 2 * (centroids[cols - 2].e(1) - centroids[cols - 1].e(1)),\n      centroids[cols - 1].e(2),\n    ])\n  );\n  cps.push(centroids[cols - 1]);\n\n  return cps;\n};\n\nexport default computeControlPoints;\n","// draw single cubic bezier curve\nimport { entries } from 'd3-collection';\nimport computeCentroids from './computeCentroids';\nimport computeControlPoints from './computeControlPoints';\nimport h from './height';\n\nconst singleCurve = (config, position, d, ctx) => {\n  const centroids = computeCentroids(config, position, d);\n  const cps = computeControlPoints(config.smoothness, centroids);\n\n  ctx.moveTo(cps[0].e(1), cps[0].e(2));\n\n  for (let i = 1; i < cps.length; i += 3) {\n    if (config.showControlPoints) {\n      for (let j = 0; j < 3; j++) {\n        ctx.fillRect(cps[i + j].e(1), cps[i + j].e(2), 2, 2);\n      }\n    }\n    ctx.bezierCurveTo(\n      cps[i].e(1),\n      cps[i].e(2),\n      cps[i + 1].e(1),\n      cps[i + 1].e(2),\n      cps[i + 2].e(1),\n      cps[i + 2].e(2)\n    );\n  }\n};\n\n// returns the y-position just beyond the separating null value line\nconst getNullPosition = config => {\n  if (config.nullValueSeparator == 'bottom') {\n    return h(config) + 1;\n  } else if (config.nullValueSeparator == 'top') {\n    return 1;\n  } else {\n    console.log(\n      \"A value is NULL, but nullValueSeparator is not set; set it to 'bottom' or 'top'.\"\n    );\n  }\n  return h(config) + 1;\n};\n\nconst singlePath = (config, position, d, ctx) => {\n  entries(config.dimensions).forEach((p, i) => {\n    //p isn't really p\n    if (i == 0) {\n      ctx.moveTo(\n        position(p.key),\n        typeof d[p.key] == 'undefined'\n          ? getNullPosition(config)\n          : config.dimensions[p.key].yscale(d[p.key])\n      );\n    } else {\n      ctx.lineTo(\n        position(p.key),\n        typeof d[p.key] == 'undefined'\n          ? getNullPosition(config)\n          : config.dimensions[p.key].yscale(d[p.key])\n      );\n    }\n  });\n};\n\n// draw single polyline\nconst colorPath = (config, position, d, ctx) => {\n  ctx.beginPath();\n  if (\n    (config.bundleDimension !== null && config.bundlingStrength > 0) ||\n    config.smoothness > 0\n  ) {\n    singleCurve(config, position, d, ctx);\n  } else {\n    singlePath(config, position, d, ctx);\n  }\n  ctx.stroke();\n};\n\nexport default colorPath;\n","import isBrushed from '../util/isBrushed';\nimport colorPath from '../util/colorPath';\nimport { _functor } from '../helper';\nimport { keys } from 'd3-collection';\n\nconst pathBrushed = (config, ctx, position) => (d, i) => {\n  if (config.brushedColor !== null) {\n    ctx.brushed.strokeStyle = _functor(config.brushedColor)(d, i);\n  } else {\n    ctx.brushed.strokeStyle = _functor(config.color)(d, i);\n  }\n  return colorPath(config, position, d, ctx.brushed);\n};\n\nconst renderBrushedDefault = (config, ctx, position, pc, brushGroup) => () => {\n  pc.clear('brushed');\n\n  if (isBrushed(config, brushGroup)) {\n    config.brushed.forEach(pathBrushed(config, ctx, position));\n  }\n};\n\nconst renderBrushedQueue = (config, brushGroup, brushedQueue) => () => {\n  if (isBrushed(config, brushGroup)) {\n    brushedQueue(config.brushed);\n  } else {\n    brushedQueue([]); // This is needed to clear the currently brushed items\n  }\n};\n\nconst renderBrushed = (config, pc, events) =>\n  function() {\n    if (!keys(config.dimensions).length) pc.detectDimensions();\n\n    pc.renderBrushed[config.mode]();\n    events.call('render', this);\n    return this;\n  };\n\nexport { pathBrushed, renderBrushed, renderBrushedDefault, renderBrushedQueue };\n","import { select, selectAll } from 'd3-selection';\n\nconst brushReset = config =>\n  function(dimension) {\n    let brushesToKeep = [];\n    for (let j = 0; j < config.brushes.length; j++) {\n      if (config.brushes[j].data !== dimension) {\n        brushesToKeep.push(config.brushes[j]);\n      }\n    }\n\n    config.brushes = brushesToKeep;\n    config.brushed = false;\n\n    if (pc.g() !== undefined) {\n      const nodes = selectAll('.brush').nodes();\n      for (let i = 0; i < nodes.length; i++) {\n        if (nodes[i].__data__ === dimension) {\n          // remove all dummy brushes for this axis or the real brush\n          select(select(nodes[i]).nodes()[0].parentNode)\n            .selectAll('.dummy')\n            .remove();\n          config.dimensions[dimension].brush.move(select(nodes[i], null));\n        }\n      }\n    }\n\n    return this;\n  };\n\nexport default brushReset;\n","// a better \"typeof\" from this post: http://stackoverflow.com/questions/7390426/better-way-to-get-type-of-a-javascript-variable\nconst toType = v => {\n  return {}.toString\n    .call(v)\n    .match(/\\s([a-zA-Z]+)/)[1]\n    .toLowerCase();\n};\n\nexport default toType;\n","import { keys } from 'd3-collection';\n\nconst toString = config => () => {\n  return (\n    'Parallel Coordinates: ' +\n    keys(config.dimensions).length +\n    ' dimensions (' +\n    keys(config.data[0]).length +\n    ' total) , ' +\n    config.data.length +\n    ' rows'\n  );\n};\n\nexport default toString;\n","const adjacentPairs = arr => {\n  let ret = [];\n  for (let i = 0; i < arr.length - 1; i++) {\n    ret.push([arr[i], arr[i + 1]]);\n  }\n  return ret;\n};\n\nexport default adjacentPairs;\n","import { selectAll } from 'd3-selection';\nimport colorPath from '../util/colorPath';\nimport { _functor } from '../helper';\n\nconst pathHighlight = (config, ctx, position) => (d, i) => {\n  ctx.highlight.strokeStyle = _functor(config.color)(d, i);\n  return colorPath(config, position, d, ctx.highlight);\n};\n\nconst highlight = (config, pc, canvas, events, ctx, position) =>\n  function(data = null) {\n    if (data === null) {\n      return config.highlighted;\n    }\n\n    config.highlighted = data;\n    pc.clear('highlight');\n    selectAll([canvas.foreground, canvas.brushed]).classed('faded', true);\n    data.forEach(pathHighlight(config, ctx, position));\n    events.call('highlight', this, data);\n    return this;\n  };\n\nexport default highlight;\n","import { selectAll } from 'd3-selection';\n\nconst unhighlight = (config, pc, canvas) =>\n  function() {\n    config.highlighted = [];\n    pc.clear('highlight');\n    selectAll([canvas.foreground, canvas.brushed]).classed('faded', false);\n    return this;\n  };\n\nexport default unhighlight;\n","const removeAxes = pc =>\n  function() {\n    pc._g.remove();\n\n    delete pc._g;\n    return this;\n  };\n\nexport default removeAxes;\n","import { keys } from 'd3-collection';\n\nconst render = (config, pc, events) =>\n  function() {\n    // try to autodetect dimensions and create scales\n    if (!keys(config.dimensions).length) {\n      pc.detectDimensions();\n    }\n    pc.autoscale();\n\n    pc.render[config.mode]();\n\n    events.call('render', this);\n    return this;\n  };\n\nexport default render;\n","import colorPath from '../util/colorPath';\nimport { _functor } from '../helper';\n\nconst pathForeground = (config, ctx, position) => (d, i) => {\n  ctx.foreground.strokeStyle = _functor(config.color)(d, i);\n  return colorPath(config, position, d, ctx.foreground);\n};\n\nconst renderDefault = (config, pc, ctx, position) => () => {\n  pc.clear('foreground');\n  pc.clear('highlight');\n\n  pc.renderBrushed.default();\n\n  config.data.forEach(pathForeground(config, ctx, position));\n};\n\nexport default renderDefault;\n\nexport { pathForeground };\n","import toType from './toType';\n// try to coerce to number before returning type\nconst toTypeCoerceNumbers = v => {\n  if (parseFloat(v) == v && v != null) {\n    return 'number';\n  }\n  return toType(v);\n};\n\nexport default toTypeCoerceNumbers;\n","import { keys } from 'd3-collection';\n\nimport toTypeCoerceNumbers from './toTypeCoerceNumbers';\n// attempt to determine types of each dimension based on first row of data\n\nconst detectDimensionTypes = data => {\n  let types = {};\n  keys(data[0]).forEach(col => {\n    types[isNaN(Number(col)) ? col : parseInt(col)] = toTypeCoerceNumbers(\n      data[0][col]\n    );\n  });\n  return types;\n};\n\nexport default detectDimensionTypes;\n","import { select } from 'd3-selection';\nimport { keys, entries } from 'd3-collection';\nimport { dispatch } from 'd3-dispatch';\nimport { ascending } from 'd3-array';\nimport { scalePoint } from 'd3-scale';\nimport { axisLeft } from 'd3-axis';\n\n// misc\nimport renderQueue from './util/renderQueue';\nimport { _rebind, without } from './helper';\nimport DefaultConfig from './defaultConfig';\nimport getset from './util/getset';\nimport w from './util/width';\nimport computeClusterCentroids from './util/computeClusterCentroids';\n\n// brush\nimport install1DAxes from './brush/install1DAxes';\nimport install2DStrums from './brush/install2DStrums';\nimport installAngularBrush from './brush/installAngularBrush';\n\n// api\nimport intersection from './api/intersection';\nimport mergeParcoords from './api/mergeParcoords';\nimport selected from './api/selected';\nimport brushMode from './api/brushMode';\nimport updateAxes from './api/updateAxes';\nimport autoscale from './api/autoscale';\nimport brushable from './api/brushable';\nimport commonScale from './api/commonScale';\nimport computeRealCentroids from './api/computeRealCentroids';\nimport applyDimensionDefaults from './api/applyDimensionDefaults';\nimport createAxes from './api/createAxes';\nimport axisDots from './api/axisDots';\nimport applyAxisConfig from './api/applyAxisConfig';\nimport reorderable from './api/reorderable';\nimport resize from './api/resize';\nimport reorder from './api/reorder';\nimport sortDimensions from './api/sortDimensions';\nimport sortDimensionsByRowData from './api/sortDimensionsByRowData';\nimport clear from './api/clear';\nimport {\n  pathBrushed,\n  renderBrushed,\n  renderBrushedDefault,\n  renderBrushedQueue,\n} from './api/renderBrushed';\nimport brushReset from './api/brushReset';\nimport toType from './api/toType';\nimport toString from './api/toString';\nimport adjacentPairs from './api/adjacentPairs';\nimport highlight from './api/highlight';\nimport unhighlight from './api/unhighlight';\nimport removeAxes from './api/removeAxes';\nimport render from './api/render';\nimport renderDefault, { pathForeground } from './api/renderDefault';\nimport toTypeCoerceNumbers from './api/toTypeCoerceNumbers';\nimport detectDimensionTypes from './api/detectDimensionTypes';\n\nimport { version } from '../package.json';\n\n//css\nimport './parallel-coordinates.css';\n\nconst ParCoords = config => {\n    const f = ()=> {\n        console.log(f);\n        f.a = '1';\n    }\n\n    f();\n    console.log(f.a);\n\n\n  const __ = Object.assign({}, DefaultConfig, config);\n\n  if (config && config.dimensionTitles) {\n    console.warn(\n      'dimensionTitles passed in config is deprecated. Add title to dimension object.'\n    );\n    entries(config.dimensionTitles).forEach(d => {\n      if (__.dimensions[d.key]) {\n        __.dimensions[d.key].title = __.dimensions[d.key].title\n          ? __.dimensions[d.key].title\n          : d.value;\n      } else {\n        __.dimensions[d.key] = {\n          title: d.value,\n        };\n      }\n    });\n  }\n\n  const eventTypes = [\n    'render',\n    'resize',\n    'highlight',\n    'brush',\n    'brushend',\n    'brushstart',\n    'axesreorder',\n  ].concat(keys(__));\n\n  const events = dispatch.apply(this, eventTypes),\n    flags = {\n      brushable: false,\n      reorderable: false,\n      axes: false,\n      interactive: false,\n      debug: false,\n    },\n    xscale = scalePoint(),\n    dragging = {},\n    axis = axisLeft().ticks(5),\n    ctx = {},\n    canvas = {};\n\n  const brush = {\n    modes: {\n      None: {\n        install: function(pc) {}, // Nothing to be done.\n        uninstall: function(pc) {}, // Nothing to be done.\n        selected: function() {\n          return [];\n        }, // Nothing to return\n        brushState: function() {\n          return {};\n        },\n      },\n    },\n    mode: 'None',\n    predicate: 'AND',\n    currentMode: function() {\n      return this.modes[this.mode];\n    },\n  };\n\n  const pc = function(selection) {\n    selection = pc.selection = select(selection);\n\n    __.width = selection.node().clientWidth;\n    __.height = selection.node().clientHeight;\n    // canvas data layers\n    ['marks', 'foreground', 'brushed', 'highlight'].forEach(function(layer) {\n      canvas[layer] = selection\n        .append('canvas')\n        .attr('class', layer)\n        .node();\n      ctx[layer] = canvas[layer].getContext('2d');\n    });\n\n    // svg tick and brush layers\n    pc.svg = selection\n      .append('svg')\n      .attr('width', __.width)\n      .attr('height', __.height)\n      .style('font', '14px sans-serif')\n      .style('position', 'absolute')\n\n      .append('svg:g')\n      .attr(\n        'transform',\n        'translate(' + __.margin.left + ',' + __.margin.top + ')'\n      );\n\n    return pc;\n  };\n\n  const brushedQueue = renderQueue(pathBrushed(__, ctx, position))\n    .rate(50)\n    .clear(() => pc.clear('brushed'));\n\n  function position(d) {\n    if (xscale.range().length === 0) {\n      xscale.range([0, w(__)], 1);\n    }\n    let v = dragging[d];\n    return v == null ? xscale(d) : v;\n  }\n\n  const foregroundQueue = renderQueue(pathForeground(__, ctx, position))\n    .rate(50)\n    .clear(function() {\n      pc.clear('foreground');\n      pc.clear('highlight');\n    });\n\n  // side effects for setters\n  const side_effects = dispatch\n    .apply(this, keys(__))\n    .on('composite', function(d) {\n      ctx.foreground.globalCompositeOperation = d.value;\n      ctx.brushed.globalCompositeOperation = d.value;\n    })\n    .on('alpha', function(d) {\n      ctx.foreground.globalAlpha = d.value;\n      ctx.brushed.globalAlpha = d.value;\n    })\n    .on('brushedColor', function(d) {\n      ctx.brushed.strokeStyle = d.value;\n    })\n    .on('width', function(d) {\n      pc.resize();\n    })\n    .on('height', function(d) {\n      pc.resize();\n    })\n    .on('margin', function(d) {\n      pc.resize();\n    })\n    .on('rate', function(d) {\n      brushedQueue.rate(d.value);\n      foregroundQueue.rate(d.value);\n    })\n    .on('dimensions', function(d) {\n      __.dimensions = pc.applyDimensionDefaults(keys(d.value));\n      xscale.domain(pc.getOrderedDimensionKeys());\n      pc.sortDimensions();\n      if (flags.interactive) {\n        pc.render().updateAxes();\n      }\n    })\n    .on('bundleDimension', function(d) {\n      if (!keys(__.dimensions).length) pc.detectDimensions();\n      pc.autoscale();\n      if (typeof d.value === 'number') {\n        if (d.value < keys(__.dimensions).length) {\n          __.bundleDimension = __.dimensions[d.value];\n        } else if (d.value < __.hideAxis.length) {\n          __.bundleDimension = __.hideAxis[d.value];\n        }\n      } else {\n        __.bundleDimension = d.value;\n      }\n\n      __.clusterCentroids = computeClusterCentroids(__, __.bundleDimension);\n      if (flags.interactive) {\n        pc.render();\n      }\n    })\n    .on('hideAxis', function(d) {\n      pc.dimensions(pc.applyDimensionDefaults());\n      pc.dimensions(without(__.dimensions, d.value));\n    })\n    .on('flipAxes', function(d) {\n      if (d.value && d.value.length) {\n        d.value.forEach(function(axis) {\n          flipAxisAndUpdatePCP(__, pc, axis);\n        });\n        pc.updateAxes(0);\n      }\n    });\n\n  // expose the state of the chart\n  pc.state = __;\n  pc.flags = flags;\n\n  // create getter/setters\n  getset(pc, __, events, side_effects);\n\n  // expose events\n  _rebind(pc, events, 'on');\n\n  // getter/setter with event firing\n\n  pc.autoscale = autoscale(__, pc, xscale, ctx);\n\n  pc.scale = function(d, domain) {\n    __.dimensions[d].yscale.domain(domain);\n\n    return this;\n  };\n\n  pc.flip = function(d) {\n    //__.dimensions[d].yscale.domain().reverse();                               // does not work\n    __.dimensions[d].yscale.domain(__.dimensions[d].yscale.domain().reverse()); // works\n\n    return this;\n  };\n\n  pc.commonScale = commonScale(__, pc);\n  pc.detectDimensions = function() {\n    pc.dimensions(pc.applyDimensionDefaults());\n    return this;\n  };\n\n  pc.applyDimensionDefaults = applyDimensionDefaults(__, pc);\n\n  pc.getOrderedDimensionKeys = function() {\n    return keys(__.dimensions).sort(function(x, y) {\n      return ascending(__.dimensions[x].index, __.dimensions[y].index);\n    });\n  };\n\n  pc.toType = toType;\n\n  // try to coerce to number before returning type\n  pc.toTypeCoerceNumbers = toTypeCoerceNumbers;\n  // attempt to determine types of each dimension based on first row of data\n  pc.detectDimensionTypes = detectDimensionTypes;\n\n  pc.render = render(__, pc, events);\n  pc.renderBrushed = renderBrushed(__, pc, events);\n\n  pc.render.default = renderDefault(__, pc, ctx, position);\n  pc.render.queue = function() {\n    pc.renderBrushed.queue();\n\n    foregroundQueue(__.data);\n  };\n\n  pc.renderBrushed.default = renderBrushedDefault(__, ctx, position, pc, brush);\n  pc.renderBrushed.queue = renderBrushedQueue(__, brush, brushedQueue);\n  pc.compute_real_centroids = computeRealCentroids(__.dimensions, position);\n\n  pc.shadows = function() {\n    flags.shadows = true;\n    pc.alphaOnBrushed(0.1);\n    pc.render();\n    return this;\n  };\n\n  // draw dots with radius r on the axis line where data intersects\n  pc.axisDots = axisDots(__, pc, position);\n\n  pc.clear = clear(__, pc, ctx, brush);\n\n  _rebind(\n    pc,\n    axis,\n    'ticks',\n    'orient',\n    'tickValues',\n    'tickSubdivide',\n    'tickSize',\n    'tickPadding',\n    'tickFormat'\n  );\n\n  pc.createAxes = createAxes(__, pc, xscale, flags, axis);\n\n  pc.removeAxes = removeAxes(pc);\n\n  pc.updateAxes = updateAxes(__, pc, position, axis, flags);\n  pc.applyAxisConfig = applyAxisConfig;\n  pc.brushable = brushable(__, pc, flags);\n  pc.brushReset = brushReset(__);\n  pc.selected = selected(__);\n  pc.reorderable = reorderable(__, pc, xscale, position, dragging, flags);\n  pc.reorder = reorder(__, pc, xscale);\n  pc.sortDimensionsByRowData = sortDimensionsByRowData(__);\n  pc.sortDimensions = sortDimensions(__, position);\n\n  // pairs of adjacent dimensions\n  pc.adjacent_pairs = adjacentPairs;\n\n  pc.interactive = function() {\n    flags.interactive = true;\n    return this;\n  };\n\n  // expose a few objects\n  pc.xscale = xscale;\n  pc.ctx = ctx;\n  pc.canvas = canvas;\n  pc.g = () => pc._g;\n\n  pc.resize = resize(__, pc, flags, events);\n\n  // highlight an array of data\n  pc.highlight = highlight(__, pc, canvas, events, ctx, position);\n\n  // clear highlighting\n  pc.unhighlight = unhighlight(__, pc, canvas);\n\n  // calculate 2d intersection of line a->b with line c->d\n  // points are objects with x and y properties\n  pc.intersection = intersection;\n\n  // Merges the canvases and SVG elements into one canvas element which is then passed into the callback\n  // (so you can choose to save it to disk, etc.)\n  pc.mergeParcoords = mergeParcoords(pc);\n  pc.brushModes = () => Object.getOwnPropertyNames(brush.modes);\n  pc.brushMode = brushMode(brush, __, pc);\n  install1DAxes(brush, __, pc, events);\n  install2DStrums(brush, __, pc, events, xscale);\n  installAngularBrush(brush, __, pc, events, xscale);\n\n  pc.version = version;\n  // this descriptive text should live with other introspective methods\n  pc.toString = toString(__);\n\n  return pc;\n};\n\nexport default ParCoords;\n"],"names":["renderQueue","func","_queue","rq","data","render","valid","invalidate","doFrame","chunk","splice","_rate","map","slice","add","concat","rate","value","arguments","length","remaining","clear","_invalidate","without","arr","items","forEach","el","d3_rebind","target","source","method","apply","_rebind","_functor","v","DefaultConfig","top","right","bottom","left","getset","obj","state","events","side_effects","key","x","Object","prototype","toString","call","warn","pc","applyDimensionDefaults","old","previous","w","config","width","margin","computeClusterCentroids","d","clusterCentroids","clusterCounts","row","scaled","dimensions","yscale","has","set","count","get","p","i","_map","brushUpdated","brushed","newSelection","renderBrushed","install1DAxes","brushGroup","brushes","brushNodes","g","is_brushed","brushSelection","selected","actives","keys","filter","extents","_brushRange","invert","within","dimension","bandwidth","predicate","every","type","some","Error","brushPredicate","brushExtents","brush","undefined","extent","brushSelections","selectAll","each","select","transition","duration","event","brushFor","axis","_selector","brushRangeMax","range","_brush","brushY","on","sourceEvent","stopPropagation","node","brushReset","move","install","createAxes","append","attr","style","modes","remove","h","height","install2DStrums","xscale","strums","strumRect","drawStrum","strum","activePoint","_svg","selection","id","dims","points","p1","p2","_line","circles","_drag","drag","enter","ev","Math","min","max","minX","maxX","minY","y","maxY","onDragEnd","dimensionsForPoint","dim","next","getOrderedDimensionKeys","indexOf","onDragStart","mouse","active","onDrag","containmentTest","m1","b1","m2","b2","y1","y2","ids","getOwnPropertyNames","isNaN","crossesStrum","test","d1","d2","point","removeStrum","svg","consecutive","first","second","insert","installAngularBrush","arcs","arc","p3","_path","angle","startAngle","endAngle","PI","d3Arc","innerRadius","hypothenuse","a","b","sqrt","rad","c","deg","signedAngle","ret","tmp","asin","outerRadius","sAngle","uAngle","intersection","mergeParcoords","devicePixelRatio","window","mergedCanvas","document","createElement","canvas","foreground","clientWidth","clientHeight","context","getContext","fillStyle","fillRect","drawImage","DOMURL","URL","webkitURL","serializer","XMLSerializer","svgStr","serializeToString","src","btoa","img","Image","onload","callback","ranges","nodes","k","push","__data__","values","ranger","domain","includes","flipAxes","unshift","ii","dimRange","dimDomain","j","category","categoryIndex","categoryRangeValue","multiBrushData","idx","filtered","z","String","toUpperCase","currentMode","brushMode","mode","brushModes","uninstall","dimensionLabels","title","flipAxisAndUpdatePCP","flip","parentElement","animationTime","scale","rotateLabels","delta","deltaY","dimensionTitleRotation","preventDefault","updateAxes","position","flags","g_data","axisElement","applyAxisConfig","text","exit","brushable","reorderable","getRange","nullValueSeparator","nullValueSeparatorPadding","autoscale","ctx","defaultScales","_extent","getTime","scalePoint","tempDate","val","scaleTime","temp","scaleLinear","counts","sort","tempArr","pop","categoricalRange","addBy","scaleOrdinal","strokeStyle","color","lineWidth","globalCompositeOperation","composite","globalAlpha","alpha","brushedColor","highlight","ctrlKey","html","outerHTML","replace","dat","parentNode","commonScale","global","t","detectDimensions","scales","reduce","bundleDimension","computeRealCentroids","realCentroids","cols","types","detectDimensionTypes","newDims","currIndex","orient","ticks","innerTickSize","outerTickSize","tickPadding","index","removeAxes","_g","axes","axisDots","r","_r","marks","pow","beginPath","stroke","fill","axisCfg","axisLeft","axisRight","axisTop","axisBottom","tickValues","tickSizeInner","tickSizeOuter","tickFormat","dragging","__origin__","__","dx","sortDimensions","resize","reorder","firstDim","sortDimensionsByRowData","rowdata","reordered","highlighted","unhighlight","copy","assign","positionSortedKeys","pixelDifference","localeCompare","isBrushed","object","brushState","hasOwnProperty","layer","clearRect","alphaOnBrushed","computeCentroids","centroids","$V","cx","cy","leftCentroid","rightCentroid","centroid","bundlingStrength","computeControlPoints","smoothness","cps","e","col","mid","diff","subtract","singleCurve","moveTo","showControlPoints","bezierCurveTo","getNullPosition","log","singlePath","lineTo","colorPath","pathBrushed","renderBrushedDefault","renderBrushedQueue","brushedQueue","brushesToKeep","toType","match","toLowerCase","adjacentPairs","pathHighlight","classed","pathForeground","renderDefault","default","toTypeCoerceNumbers","parseFloat","Number","parseInt","ParCoords","f","dimensionTitles","eventTypes","dispatch","foregroundQueue","interactive","hideAxis","reverse","ascending","queue","compute_real_centroids","shadows","adjacent_pairs","version"],"mappings":"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"}