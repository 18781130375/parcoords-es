{"version":3,"file":"parcoords.js","sources":["../src/util/renderQueue.js","../src/util/width.js","../src/brush/1d/brushExtents.js","../src/brush/1d/brushReset.js","../src/brush/1d/selected.js","../src/brush/1d/brushFor.js","../src/brush/1d/install.js","../src/brush/1d/uninstall.js","../src/brush/1d/index.js","../src/brush/strums/uninstall.js","../src/brush/strums/selected.js","../src/brush/strums/removeStrum.js","../src/brush/strums/onDragEnd.js","../src/brush/strums/onDrag.js","../src/util/height.js","../src/brush/dimensionsForPoint.js","../src/brush/strums/onDragStart.js","../src/brush/strums/brushReset.js","../src/brush/consecutive.js","../src/brush/strums/install.js","../src/brush/strums/index.js","../src/brush/angular/uninstall.js","../src/brush/angular/util/hypothenuse.js","../src/brush/angular/selected.js","../src/brush/angular/removeStrum.js","../src/brush/angular/onDragEnd.js","../src/brush/angular/onDrag.js","../src/brush/angular/onDragStart.js","../src/brush/angular/brushReset.js","../src/brush/angular/install.js","../src/brush/angular/index.js","../src/api/intersection.js","../src/api/mergeParcoords.js","../src/api/selected.js","../src/api/brushMode.js","../src/util/dimensionLabels.js","../src/util/flipAxisAndUpdatePCP.js","../src/util/rotateLabels.js","../src/api/updateAxes.js","../src/util/getRange.js","../src/api/autoscale.js","../src/api/brushable.js","../src/api/commonScale.js","../src/api/computeRealCentroids.js","../src/api/applyDimensionDefaults.js","../src/api/createAxes.js","../src/api/axisDots.js","../src/api/applyAxisConfig.js","../src/api/reorderable.js","../src/api/resize.js","../src/api/reorder.js","../src/api/sortDimensions.js","../src/api/sortDimensionsByRowData.js","../src/util/isBrushed.js","../src/api/clear.js","../src/util/computeCentroids.js","../src/util/computeControlPoints.js","../src/util/colorPath.js","../src/util/functor.js","../src/api/renderBrushed.js","../src/api/brushReset.js","../src/api/toType.js","../src/api/toString.js","../src/api/adjacentPairs.js","../src/api/highlight.js","../src/api/unhighlight.js","../src/api/removeAxes.js","../src/api/render.js","../src/api/renderDefault.js","../src/api/toTypeCoerceNumbers.js","../src/api/detectDimensionTypes.js","../src/api/getOrderedDimensionKeys.js","../src/api/interactive.js","../src/api/shadows.js","../src/api/init.js","../src/api/flip.js","../src/api/detectDimensions.js","../src/api/scale.js","../src/state/defaultConfig.js","../src/state/index.js","../src/util/computeClusterCentroids.js","../src/state/sideEffects.js","../src/util/getset.js","../src/bindEvents.js","../src/index.js"],"sourcesContent":["import 'requestanimationframe';\n\nconst renderQueue = function(func) {\n  let _queue = [], // data to be rendered\n    _rate = 1000, // number of calls per frame\n    _invalidate = function() {}, // invalidate last render queue\n    _clear = function() {}; // clearing function\n\n  let rq = function(data) {\n    if (data) rq.data(data);\n    _invalidate();\n    _clear();\n    rq.render();\n  };\n\n  rq.render = function() {\n    let valid = true;\n    _invalidate = rq.invalidate = function() {\n      valid = false;\n    };\n\n    function doFrame() {\n      if (!valid) return true;\n      let chunk = _queue.splice(0, _rate);\n      chunk.map(func);\n      requestAnimationFrame(doFrame);\n    }\n\n    doFrame();\n  };\n\n  rq.data = function(data) {\n    _invalidate();\n    _queue = data.slice(0); // creates a copy of the data\n    return rq;\n  };\n\n  rq.add = function(data) {\n    _queue = _queue.concat(data);\n  };\n\n  rq.rate = function(value) {\n    if (!arguments.length) return _rate;\n    _rate = value;\n    return rq;\n  };\n\n  rq.remaining = function() {\n    return _queue.length;\n  };\n\n  // clear the canvas\n  rq.clear = function(func) {\n    if (!arguments.length) {\n      _clear();\n      return rq;\n    }\n    _clear = func;\n    return rq;\n  };\n\n  rq.invalidate = _invalidate;\n\n  return rq;\n};\n\nexport default renderQueue;\n","const w = config => config.width - config.margin.right - config.margin.left;\n\nexport default w;\n","import { keys } from 'd3-collection';\nimport { brushSelection } from 'd3-brush';\n\nconst brushExtents = (state, config, pc) => extents => {\n  const { brushes } = state;\n\n  if (typeof extents === 'undefined') {\n    return keys(config.dimensions).reduce((acc, cur) => {\n      const brush = brushes[cur];\n      //todo: brush check\n      if (brush !== undefined && brushSelection(brushNodes[cur]) !== null) {\n        acc[d] = brush.extent();\n      }\n\n      return acc;\n    }, {});\n  } else {\n    //first get all the brush selections\n    const brushSelections = pc\n      .g()\n      .selectAll('.brush')\n      .reduce(function(acc, cur) {\n        acc[cur] = select(this);\n        return acc;\n      });\n\n    // loop over each dimension and update appropriately (if it was passed in through extents)\n    keys(config.dimensions).forEach(function(d) {\n      if (extents[d] === undefined) {\n        return;\n      }\n\n      const brush = brushes[d];\n      if (brush !== undefined) {\n        //update the extent\n        brush.extent(extents[d]);\n\n        //redraw the brush\n        brushSelections[d]\n          .transition()\n          .duration(0)\n          .call(brush);\n\n        //fire some events\n        brush.event(brushSelections[d]);\n      }\n    });\n\n    //redraw the chart\n    pc.renderBrushed();\n\n    return pc;\n  }\n};\n\nexport default brushExtents;\n","import { select } from 'd3-selection';\n\nconst brushReset = (state, config, pc) => dimension => {\n  const { brushes } = state;\n\n  if (dimension === undefined) {\n    config.brushed = false;\n    if (pc.g() !== undefined && pc.g() !== null) {\n      pc\n        .g()\n        .selectAll('.brush')\n        .each(function(d) {\n          select(this).call(brushes[d].move, null);\n        });\n      pc.renderBrushed();\n    }\n  } else {\n    if (pc.g() !== undefined && pc.g() !== null) {\n      pc\n        .g()\n        .selectAll('.brush')\n        .each(function(d) {\n          if (d != dimension) return;\n          select(this).call(brushes[d].move, null);\n          brushes[d].event(select(this));\n        });\n      pc.renderBrushed();\n    }\n  }\n  return this;\n};\n\nexport default brushReset;\n","import { brushSelection } from 'd3-brush';\n//https://github.com/d3/d3-brush/issues/10\nimport { keys } from 'd3-collection';\n\n// data within extents\nconst selected = (state, config, brushGroup) => () => {\n  const { brushNodes } = state;\n  const is_brushed = p => brushSelection(brushNodes[p]) !== null;\n\n  const actives = keys(config.dimensions).filter(is_brushed);\n  const extents = actives.map(p => {\n    const _brushRange = brushSelection(brushNodes[p]);\n\n    if (typeof config.dimensions[p].yscale.invert === 'function') {\n      return [\n        config.dimensions[p].yscale.invert(_brushRange[1]),\n        config.dimensions[p].yscale.invert(_brushRange[0]),\n      ];\n    } else {\n      return _brushRange;\n    }\n  });\n  // We don't want to return the full data set when there are no axes brushed.\n  // Actually, when there are no axes brushed, by definition, no items are\n  // selected. So, let's avoid the filtering and just return false.\n  //if (actives.length === 0) return false;\n\n  // Resolves broken examples for now. They expect to get the full dataset back from empty brushes\n  if (actives.length === 0) return config.data;\n\n  // test if within range\n  const within = {\n    date: (d, p, dimension) => {\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\n        // if it is ordinal\n        return (\n          extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\n          config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n        );\n      } else {\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\n      }\n    },\n    number: (d, p, dimension) => {\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\n        // if it is ordinal\n        return (\n          extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\n          config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n        );\n      } else {\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\n      }\n    },\n    string: (d, p, dimension) => {\n      return (\n        extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\n        config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n      );\n    },\n  };\n\n  return config.data.filter(d => {\n    switch (brushGroup.predicate) {\n      case 'AND':\n        return actives.every(function(p, dimension) {\n          return within[config.dimensions[p].type](d, p, dimension);\n        });\n      case 'OR':\n        return actives.some(function(p, dimension) {\n          return within[config.dimensions[p].type](d, p, dimension);\n        });\n      default:\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\n    }\n  });\n};\n\nexport default selected;\n","import { brushY } from 'd3-brush';\nimport { event } from 'd3-selection';\n\nimport selected from './selected';\n\nconst brushUpdated = (config, pc, events) => newSelection => {\n  config.brushed = newSelection;\n  events.call('brush', pc, config.brushed);\n  pc.renderBrushed();\n};\n\nconst brushFor = (state, config, pc, events, brushGroup) => (\n  axis,\n  _selector\n) => {\n  const brushRangeMax =\n    config.dimensions[axis].type === 'string'\n      ? config.dimensions[axis].yscale.range()[\n          config.dimensions[axis].yscale.range().length - 1\n        ]\n      : config.dimensions[axis].yscale.range()[0];\n\n  const _brush = brushY(_selector).extent([[-15, 0], [15, brushRangeMax]]);\n\n  _brush\n    .on('start', function() {\n      if (event.sourceEvent !== null) {\n        events.call('brushstart', pc, config.brushed);\n        event.sourceEvent.stopPropagation();\n      }\n    })\n    .on('brush', function() {\n      brushUpdated(config, pc, events)(selected(state, config, brushGroup)());\n    })\n    .on('end', function() {\n      brushUpdated(config, pc, events)(selected(state, config, brushGroup)());\n      events.call('brushend', pc, config.brushed);\n    });\n\n  state.brushes[axis] = _brush;\n  state.brushNodes[axis] = _selector.node();\n\n  return _brush;\n};\n\nexport default brushFor;\n","import { select } from 'd3-selection';\nimport brushExtents from './brushExtents';\nimport brushReset from './brushReset';\nimport brushFor from './brushFor';\n\nconst install = (state, config, pc, events, brushGroup) => () => {\n  if (!pc.g()) {\n    pc.createAxes();\n  }\n\n  // Add and store a brush for each axis.\n  const brush = pc\n    .g()\n    .append('svg:g')\n    .attr('class', 'brush')\n    .each(function(d) {\n      select(this).call(\n        brushFor(state, config, pc, events, brushGroup)(d, select(this))\n      );\n    });\n  brush\n    .selectAll('rect')\n    .style('visibility', null)\n    .attr('x', -15)\n    .attr('width', 30);\n\n  brush.selectAll('rect.background').style('fill', 'transparent');\n\n  brush\n    .selectAll('rect.extent')\n    .style('fill', 'rgba(255,255,255,0.25)')\n    .style('stroke', 'rgba(0,0,0,0.6)');\n\n  brush.selectAll('.resize rect').style('fill', 'rgba(0,0,0,0.1)');\n\n  pc.brushExtents = brushExtents(state, config, pc);\n  pc.brushReset = brushReset(state, config, pc);\n  return pc;\n};\n\nexport default install;\n","const uninstall = (state, pc) => () => {\n  if (pc.g() !== undefined && pc.g() !== null)\n    pc\n      .g()\n      .selectAll('.brush')\n      .remove();\n\n  state.brushes = {};\n  delete pc.brushExtents;\n  delete pc.brushReset;\n};\n\nexport default uninstall;\n","import brushExtents from './brushExtents';\nimport install from './install';\nimport selected from './selected';\nimport uninstall from './uninstall';\n\nconst BrushState = {\n  brushes: {},\n  brushNodes: {},\n};\n\nconst install1DAxes = (brushGroup, config, pc, events) => {\n  const state = Object.assign({}, BrushState);\n\n  brushGroup.modes['1D-axes'] = {\n    install: install(state, config, pc, events, brushGroup),\n    uninstall: uninstall(state, pc),\n    selected: selected(state, config, brushGroup),\n    brushState: brushExtents(state, pc),\n  };\n};\n\nexport default install1DAxes;\n","const uninstall = (state, pc) => () => {\n  pc.selection\n    .select('svg')\n    .select('g#strums')\n    .remove();\n  pc.selection\n    .select('svg')\n    .select('rect#strum-events')\n    .remove();\n  pc.on('axesreorder.strums', undefined);\n  delete pc.brushReset;\n\n  state.strumRect = undefined;\n};\n\nexport default uninstall;\n","// test if point falls between lines\nconst containmentTest = (strum, width) => p => {\n  const p1 = [strum.p1[0] - strum.minX, strum.p1[1] - strum.minX],\n    p2 = [strum.p2[0] - strum.minX, strum.p2[1] - strum.minX],\n    m1 = 1 - width / p1[0],\n    b1 = p1[1] * (1 - m1),\n    m2 = 1 - width / p2[0],\n    b2 = p2[1] * (1 - m2);\n\n  const x = p[0],\n    y = p[1],\n    y1 = m1 * x + b1,\n    y2 = m2 * x + b2;\n\n  return y > Math.min(y1, y2) && y < Math.max(y1, y2);\n};\n\nconst crossesStrum = (state, config) => (d, id) => {\n  let strum = state.strums[id],\n    test = containmentTest(strum, state.strums.width(id)),\n    d1 = strum.dims.left,\n    d2 = strum.dims.right,\n    y1 = config.dimensions[d1].yscale,\n    y2 = config.dimensions[d2].yscale,\n    point = [y1(d[d1]) - strum.minX, y2(d[d2]) - strum.minX];\n  return test(point);\n};\n\nconst selected = (brushGroup, state, config) => {\n  // Get the ids of the currently active strums.\n  const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d)),\n    brushed = config.data;\n\n  if (ids.length === 0) {\n    return brushed;\n  }\n\n  const crossTest = crossesStrum(state, config);\n\n  return brushed.filter(d => {\n    switch (brushGroup.predicate) {\n      case 'AND':\n        return ids.every(id => crossTest(d, id));\n      case 'OR':\n        return ids.some(id => crossTest(d, id));\n      default:\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\n    }\n  });\n};\n\nexport default selected;\n","const removeStrum = (state, pc) => {\n  const strum = state.strums[state.strums.active],\n    svg = pc.selection.select('svg').select('g#strums');\n\n  delete state.strums[state.strums.active];\n  svg.selectAll('line#strum-' + strum.dims.i).remove();\n  svg.selectAll('circle#strum-' + strum.dims.i).remove();\n};\n\nexport default removeStrum;\n","import selected from './selected';\nimport removeStrum from './removeStrum';\n\nconst onDragEnd = (brushGroup, state, config, pc, events) => () => {\n  const strum = state.strums[state.strums.active];\n\n  // Okay, somewhat unexpected, but not totally unsurprising, a mousclick is\n  // considered a drag without move. So we have to deal with that case\n  if (strum && strum.p1[0] === strum.p2[0] && strum.p1[1] === strum.p2[1]) {\n    removeStrum(state, pc);\n  }\n\n  const brushed = selected(brushGroup, state, config);\n  state.strums.active = undefined;\n  config.brushed = brushed;\n  pc.renderBrushed();\n  events.call('brushend', pc, config.brushed);\n};\n\nexport default onDragEnd;\n","import { event, select } from 'd3-selection';\nimport { drag } from 'd3-drag';\nimport onDragEnd from './onDragEnd';\n\nconst drawStrum = (\n  brushGroup,\n  state,\n  config,\n  pc,\n  events,\n  strum,\n  activePoint\n) => {\n  let _svg = pc.selection.select('svg').select('g#strums'),\n    id = strum.dims.i,\n    points = [strum.p1, strum.p2],\n    _line = _svg.selectAll('line#strum-' + id).data([strum]),\n    circles = _svg.selectAll('circle#strum-' + id).data(points),\n    _drag = drag();\n\n  _line\n    .enter()\n    .append('line')\n    .attr('id', 'strum-' + id)\n    .attr('class', 'strum');\n\n  _line\n    .attr('x1', d => d.p1[0])\n    .attr('y1', d => d.p1[1])\n    .attr('x2', d => d.p2[0])\n    .attr('y2', d => d.p2[1])\n    .attr('stroke', 'black')\n    .attr('stroke-width', 2);\n\n  _drag\n    .on('drag', function(d, i) {\n      const ev = event;\n      i = i + 1;\n      strum['p' + i][0] = Math.min(Math.max(strum.minX + 1, ev.x), strum.maxX);\n      strum['p' + i][1] = Math.min(Math.max(strum.minY, ev.y), strum.maxY);\n      drawStrum(brushGroup, state, config, pc, events, strum, i - 1);\n    })\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\n\n  circles\n    .enter()\n    .append('circle')\n    .attr('id', 'strum-' + id)\n    .attr('class', 'strum');\n\n  circles\n    .attr('cx', d => d[0])\n    .attr('cy', d => d[1])\n    .attr('r', 5)\n    .style(\n      'opacity',\n      (d, i) => (activePoint !== undefined && i === activePoint ? 0.8 : 0)\n    )\n    .on('mouseover', function() {\n      select(this).style('opacity', 0.8);\n    })\n    .on('mouseout', function() {\n      select(this).style('opacity', 0);\n    })\n    .call(_drag);\n};\n\nconst onDrag = (brushGroup, state, config, pc, events) => () => {\n  const ev = event,\n    strum = state.strums[state.strums.active];\n\n  // Make sure that the point is within the bounds\n  strum.p2[0] = Math.min(\n    Math.max(strum.minX + 1, ev.x - config.margin.left),\n    strum.maxX\n  );\n  strum.p2[1] = Math.min(\n    Math.max(strum.minY, ev.y - config.margin.top),\n    strum.maxY\n  );\n\n  drawStrum(brushGroup, state, config, pc, events, strum, 1);\n};\n\nexport default onDrag;\n","const h = config => config.height - config.margin.top - config.margin.bottom;\n\nexport default h;\n","import { keys } from 'd3-collection';\n\nconst dimensionsForPoint = (config, pc, xscale, p) => {\n  const dims = { i: -1, left: undefined, right: undefined };\n  keys(config.dimensions).some((dim, i) => {\n    if (xscale(dim) < p[0]) {\n      dims.i = i;\n      dims.left = dim;\n      dims.right = keys(config.dimensions)[\n        pc.getOrderedDimensionKeys().indexOf(dim) + 1\n      ];\n      return false;\n    }\n    return true;\n  });\n\n  if (dims.left === undefined) {\n    // Event on the left side of the first axis.\n    dims.i = 0;\n    dims.left = pc.getOrderedDimensionKeys()[0];\n    dims.right = pc.getOrderedDimensionKeys()[1];\n  } else if (dims.right === undefined) {\n    // Event on the right side of the last axis\n    dims.i = keys(config.dimensions).length - 1;\n    dims.right = dims.left;\n    dims.left = pc.getOrderedDimensionKeys()[\n      keys(config.dimensions).length - 2\n    ];\n  }\n\n  return dims;\n};\n\nexport default dimensionsForPoint;\n","import { mouse } from 'd3-selection';\nimport h from '../../util/height';\nimport dimensionsForPoint from '../dimensionsForPoint';\n\n// First we need to determine between which two axes the sturm was started.\n// This will determine the freedom of movement, because a strum can\n// logically only happen between two axes, so no movement outside these axes\n// should be allowed.\nconst onDragStart = (state, config, pc, xscale) => () => {\n  let p = mouse(state.strumRect.node());\n\n  p[0] = p[0] - config.margin.left;\n  p[1] = p[1] - config.margin.top;\n\n  const dims = dimensionsForPoint(config, pc, xscale, p);\n  const strum = {\n    p1: p,\n    dims: dims,\n    minX: xscale(dims.left),\n    maxX: xscale(dims.right),\n    minY: 0,\n    maxY: h(config),\n  };\n\n  // Make sure that the point is within the bounds\n  strum.p1[0] = Math.min(Math.max(strum.minX, p[0]), strum.maxX);\n  strum.p2 = strum.p1.slice();\n\n  state.strums[dims.i] = strum;\n  state.strums.active = dims.i;\n};\n\nexport default onDragStart;\n","import onDragEnd from './onDragEnd';\nimport removeStrum from './removeStrum';\n\nconst brushReset = (brushGroup, state, config, pc, events) => () => {\n  const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d));\n\n  ids.forEach(d => {\n    state.strums.active = d;\n    removeStrum(state, pc);\n  });\n  onDragEnd(brushGroup, state, config, pc, events)();\n};\n\nexport default brushReset;\n","// Checks if the first dimension is directly left of the second dimension.\nimport {keys} from \"d3-collection\";\n\nconst consecutive = dimensions => (first, second) => {\n    const keys = keys(dimensions);\n\n    return keys.some(\n        (d, i) =>\n            d === first ? i + i < keys.length && dimensions[i + 1] === second : false\n    );\n};\n\nexport default consecutive;","import { drag } from 'd3-drag';\nimport onDragEnd from './onDragEnd';\nimport onDrag from './onDrag';\nimport onDragStart from './onDragStart';\nimport removeStrum from './removeStrum';\nimport brushReset from './brushReset';\nimport w from '../../util/width';\nimport h from '../../util/height';\nimport consecutive from '../consecutive';\n\n\nconst install = (brushGroup, state, config, pc, events, xscale) => () => {\n  if (pc.g() === undefined || pc.g() === null) {\n    pc.createAxes();\n  }\n\n  const _drag = drag();\n\n  // Map of current strums. Strums are stored per segment of the PC. A segment,\n  // being the area between two axes. The left most area is indexed at 0.\n  state.strums.active = undefined;\n  // Returns the width of the PC segment where currently a strum is being\n  // placed. NOTE: even though they are evenly spaced in our current\n  // implementation, we keep for when non-even spaced segments are supported as\n  // well.\n  state.strums.width = id =>\n    state.strums[id] === undefined\n      ? undefined\n      : state.strums[id].maxX - state.strums[id].minX;\n\n  pc.on('axesreorder.strums', () => {\n    const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d));\n\n    if (ids.length > 0) {\n      // We have some strums, which might need to be removed.\n      ids.forEach(d => {\n        const dims = state.strums[d].dims;\n        state.strums.active = d;\n        // If the two dimensions of the current strum are not next to each other\n        // any more, than we'll need to remove the strum. Otherwise we keep it.\n        if (!consecutive(config.dimensions)(dims.left, dims.right)) {\n          removeStrum(state, pc);\n        }\n      });\n      onDragEnd(brushGroup, state, config, pc, events)();\n    }\n  });\n\n  // Add a new svg group in which we draw the strums.\n  pc.selection\n    .select('svg')\n    .append('g')\n    .attr('id', 'strums')\n    .attr(\n      'transform',\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\n    );\n\n  // Install the required brushReset function\n  pc.brushReset = brushReset(brushGroup, state, config, pc, events);\n\n  _drag\n    .on('start', onDragStart(state, config, pc, xscale))\n    .on('drag', onDrag(brushGroup, state, config, pc, events))\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\n\n  // NOTE: The styling needs to be done here and not in the css. This is because\n  //       for 1D brushing, the canvas layers should not listen to\n  //       pointer-events._.\n  state.strumRect = pc.selection\n    .select('svg')\n    .insert('rect', 'g#strums')\n    .attr('id', 'strum-events')\n    .attr('x', config.margin.left)\n    .attr('y', config.margin.top)\n    .attr('width', w(config))\n    .attr('height', h(config) + 2)\n    .style('opacity', 0)\n    .call(_drag);\n};\n\nexport default install;\n","import uninstall from './uninstall';\nimport install from './install';\nimport selected from './selected';\n\nconst BrushState = {\n  strums: {},\n  strumRect: {},\n};\n\nconst install2DStrums = (brushGroup, config, pc, events, xscale) => {\n  const state = Object.assign({}, BrushState);\n\n  brushGroup.modes['2D-strums'] = {\n    install: install(brushGroup, state, config, pc, events, xscale),\n    uninstall: uninstall(state, pc),\n    selected: selected(brushGroup, state, config),\n    brushState: () => state.strums,\n  };\n};\n\nexport default install2DStrums;\n","const uninstall = (state, pc) => () => {\n  pc.selection\n    .select('svg')\n    .select('g#arcs')\n    .remove();\n  pc.selection\n    .select('svg')\n    .select('rect#arc-events')\n    .remove();\n  pc.on('axesreorder.arcs', undefined);\n\n  delete pc.brushReset;\n\n  state.strumRect = undefined;\n};\n\nexport default uninstall;\n","const hypothenuse = (a, b) => Math.sqrt(a * a + b * b);\n\nexport default hypothenuse;\n","import hypothenuse from './util/hypothenuse';\n\n// [0, 2*PI] -> [-PI/2, PI/2]\nconst signedAngle = angle =>\n  angle > Math.PI ? 1.5 * Math.PI - angle : 0.5 * Math.PI - angle;\n\n/**\n * angles are stored in radians from in [0, 2*PI], where 0 in 12 o'clock.\n * However, one can only select lines from 0 to PI, so we compute the\n * 'signed' angle, where 0 is the horizontal line (3 o'clock), and +/- PI/2\n * are 12 and 6 o'clock respectively.\n */\nconst containmentTest = arc => a => {\n  let startAngle = signedAngle(arc.startAngle);\n  let endAngle = signedAngle(arc.endAngle);\n\n  if (startAngle > endAngle) {\n    const tmp = startAngle;\n    startAngle = endAngle;\n    endAngle = tmp;\n  }\n\n  // test if segment angle is contained in angle interval\n  return a >= startAngle && a <= endAngle;\n};\n\nconst crossesStrum = (state, config) => (d, id) => {\n  const arc = state.arcs[id],\n    test = containmentTest(arc),\n    d1 = arc.dims.left,\n    d2 = arc.dims.right,\n    y1 = config.dimensions[d1].yscale,\n    y2 = config.dimensions[d2].yscale,\n    a = state.arcs.width(id),\n    b = y1(d[d1]) - y2(d[d2]),\n    c = hypothenuse(a, b),\n    angle = Math.asin(b / c); // rad in [-PI/2, PI/2]\n  return test(angle);\n};\n\nconst selected = (brushGroup, state, config) => {\n  const ids = Object.getOwnPropertyNames(state.arcs).filter(d => !isNaN(d));\n  const brushed = config.data;\n\n  if (ids.length === 0) {\n    return brushed;\n  }\n\n  const crossTest = crossesStrum(state, config);\n\n  return brushed.filter(d => {\n    switch (brushGroup.predicate) {\n      case 'AND':\n        return ids.every(id => crossTest(d, id));\n      case 'OR':\n        return ids.some(id => crossTest(d, id));\n      default:\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\n    }\n  });\n};\n\nexport default selected;\n","const removeStrum = (state, pc) => {\n  const arc = state.arcs[state.arcs.active],\n    svg = pc.selection.select('svg').select('g#arcs');\n\n  delete state.arcs[state.arcs.active];\n  state.arcs.active = undefined;\n  svg.selectAll('line#arc-' + arc.dims.i).remove();\n  svg.selectAll('circle#arc-' + arc.dims.i).remove();\n  svg.selectAll('path#arc-' + arc.dims.i).remove();\n};\n\nexport default removeStrum;\n","import selected from './selected';\nimport removeStrum from './removeStrum';\n\nconst onDragEnd = (brushGroup, state, config, pc, events) => () => {\n  const arc = state.arcs[state.arcs.active];\n\n  // Okay, somewhat unexpected, but not totally unsurprising, a mousclick is\n  // considered a drag without move. So we have to deal with that case\n  if (arc && arc.p1[0] === arc.p2[0] && arc.p1[1] === arc.p2[1]) {\n    removeStrum(state, pc);\n  }\n\n  if (arc) {\n    const angle = state.arcs.startAngle(state.arcs.active);\n\n    arc.startAngle = angle;\n    arc.endAngle = angle;\n    arc.arc\n      .outerRadius(state.arcs.length(state.arcs.active))\n      .startAngle(angle)\n      .endAngle(angle);\n  }\n\n  state.arcs.active = undefined;\n  config.brushed = selected(brushGroup, state, config);\n  pc.renderBrushed();\n  events.call('brushend', pc, config.brushed);\n};\n\nexport default onDragEnd;\n","import { event, select } from 'd3-selection';\nimport { drag } from 'd3-drag';\nimport onDragEnd from './onDragEnd';\n\nconst drawStrum = (brushGroup, state, config, pc, events, arc, activePoint) => {\n  const svg = pc.selection.select('svg').select('g#arcs'),\n    id = arc.dims.i,\n    points = [arc.p2, arc.p3],\n    _line = svg\n      .selectAll('line#arc-' + id)\n      .data([{ p1: arc.p1, p2: arc.p2 }, { p1: arc.p1, p2: arc.p3 }]),\n    circles = svg.selectAll('circle#arc-' + id).data(points),\n    _drag = drag(),\n    _path = svg.selectAll('path#arc-' + id).data([arc]);\n\n  _path\n    .enter()\n    .append('path')\n    .attr('id', 'arc-' + id)\n    .attr('class', 'arc')\n    .style('fill', 'orange')\n    .style('opacity', 0.5);\n\n  _path\n    .attr('d', arc.arc)\n    .attr('transform', 'translate(' + arc.p1[0] + ',' + arc.p1[1] + ')');\n\n  _line\n    .enter()\n    .append('line')\n    .attr('id', 'arc-' + id)\n    .attr('class', 'arc');\n\n  _line\n    .attr('x1', d => d.p1[0])\n    .attr('y1', d => d.p1[1])\n    .attr('x2', d => d.p2[0])\n    .attr('y2', d => d.p2[1])\n    .attr('stroke', 'black')\n    .attr('stroke-width', 2);\n\n  _drag\n    .on('drag', (d, i) => {\n      const ev = event;\n      i = i + 2;\n\n      arc['p' + i][0] = Math.min(Math.max(arc.minX + 1, ev.x), arc.maxX);\n      arc['p' + i][1] = Math.min(Math.max(arc.minY, ev.y), arc.maxY);\n\n      const angle =\n        i === 3 ? state.arcs.startAngle(id) : state.arcs.endAngle(id);\n\n      if (\n        (arc.startAngle < Math.PI &&\n          arc.endAngle < Math.PI &&\n          angle < Math.PI) ||\n        (arc.startAngle >= Math.PI &&\n          arc.endAngle >= Math.PI &&\n          angle >= Math.PI)\n      ) {\n        if (i === 2) {\n          arc.endAngle = angle;\n          arc.arc.endAngle(angle);\n        } else if (i === 3) {\n          arc.startAngle = angle;\n          arc.arc.startAngle(angle);\n        }\n      }\n\n      drawStrum(brushGroup, state, config, pc, events, arc, i - 2);\n    })\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\n\n  circles\n    .enter()\n    .append('circle')\n    .attr('id', 'arc-' + id)\n    .attr('class', 'arc');\n\n  circles\n    .attr('cx', d => d[0])\n    .attr('cy', d => d[1])\n    .attr('r', 5)\n    .style(\n      'opacity',\n      (d, i) => (activePoint !== undefined && i === activePoint ? 0.8 : 0)\n    )\n    .on('mouseover', function() {\n      select(this).style('opacity', 0.8);\n    })\n    .on('mouseout', function() {\n      select(this).style('opacity', 0);\n    })\n    .call(_drag);\n};\n\nconst onDrag = (brushGroup, state, config, pc, events) => () => {\n  const ev = event,\n    arc = state.arcs[state.arcs.active];\n\n  // Make sure that the point is within the bounds\n  arc.p2[0] = Math.min(\n    Math.max(arc.minX + 1, ev.x - config.margin.left),\n    arc.maxX\n  );\n  arc.p2[1] = Math.min(Math.max(arc.minY, ev.y - config.margin.top), arc.maxY);\n  arc.p3 = arc.p2.slice();\n  drawStrum(brushGroup, state, config, pc, events, arc, 1);\n};\n\nexport default onDrag;\n","import { mouse } from 'd3-selection';\nimport h from '../../util/height';\nimport { arc as d3Arc } from 'd3-shape';\nimport dimensionsForPoint from '../dimensionsForPoint';\n\n// First we need to determine between which two axes the arc was started.\n// This will determine the freedom of movement, because a arc can\n// logically only happen between two axes, so no movement outside these axes\n// should be allowed.\nconst onDragStart = (state, config, pc, xscale) => () => {\n  const p = mouse(state.strumRect.node());\n\n  p[0] = p[0] - config.margin.left;\n  p[1] = p[1] - config.margin.top;\n\n  const dims = dimensionsForPoint(config, pc, xscale, p);\n  const arc = {\n    p1: p,\n    dims: dims,\n    minX: xscale(dims.left),\n    maxX: xscale(dims.right),\n    minY: 0,\n    maxY: h(config),\n    startAngle: undefined,\n    endAngle: undefined,\n    arc: d3Arc().innerRadius(0),\n  };\n\n  // Make sure that the point is within the bounds\n  arc.p1[0] = Math.min(Math.max(arc.minX, p[0]), arc.maxX);\n  arc.p2 = arc.p1.slice();\n  arc.p3 = arc.p1.slice();\n\n  state.arcs[dims.i] = arc;\n  state.arcs.active = dims.i;\n};\n\nexport default onDragStart;\n","import onDragEnd from './onDragEnd';\nimport removeStrum from './removeStrum';\n\nconst brushReset = (brushGroup, state, config, pc, events) => () => {\n  const ids = Object.getOwnPropertyNames(state.arcs).filter(d => !isNaN(d));\n\n  ids.forEach(d => {\n    state.arcs.active = d;\n    removeStrum(state, pc);\n  });\n  onDragEnd(brushGroup, state, config, pc, events)();\n};\n\nexport default brushReset;\n","import { drag } from 'd3-drag';\nimport onDragEnd from './onDragEnd';\nimport onDrag from './onDrag';\nimport onDragStart from './onDragStart';\nimport removeStrum from './removeStrum';\nimport brushReset from './brushReset';\nimport w from '../../util/width';\nimport h from '../../util/height';\n\nimport hypothenuse from './util/hypothenuse';\nimport consecutive from '../consecutive';\n\n\n// returns angles in [-PI/2, PI/2]\nconst angle = (p1, p2) => {\n  const a = p1[0] - p2[0],\n    b = p1[1] - p2[1],\n    c = hypothenuse(a, b);\n\n  return Math.asin(b / c);\n};\n\nconst endAngle = state => id => {\n  const arc = state.arcs[id];\n  if (arc === undefined) {\n    return undefined;\n  }\n  let sAngle = angle(arc.p1, arc.p2),\n    uAngle = -sAngle + Math.PI / 2;\n\n  if (arc.p1[0] > arc.p2[0]) {\n    uAngle = 2 * Math.PI - uAngle;\n  }\n\n  return uAngle;\n};\n\nconst startAngle = state => id => {\n  const arc = state.arcs[id];\n  if (arc === undefined) {\n    return undefined;\n  }\n\n  let sAngle = angle(arc.p1, arc.p3),\n    uAngle = -sAngle + Math.PI / 2;\n\n  if (arc.p1[0] > arc.p3[0]) {\n    uAngle = 2 * Math.PI - uAngle;\n  }\n\n  return uAngle;\n};\n\nconst length = state => id => {\n  const arc = state.arcs[id];\n\n  if (arc === undefined) {\n    return undefined;\n  }\n\n  const a = arc.p1[0] - arc.p2[0],\n    b = arc.p1[1] - arc.p2[1];\n\n  return hypothenuse(a, b);\n};\n\nconst install = (brushGroup, state, config, pc, events, xscale) => () => {\n  if (!pc.g()) {\n    pc.createAxes();\n  }\n\n  const _drag = drag();\n\n  // Map of current arcs. arcs are stored per segment of the PC. A segment,\n  // being the area between two axes. The left most area is indexed at 0.\n  state.arcs.active = undefined;\n  // Returns the width of the PC segment where currently a arc is being\n  // placed. NOTE: even though they are evenly spaced in our current\n  // implementation, we keep for when non-even spaced segments are supported as\n  // well.\n  state.arcs.width = id => {\n    const arc = state.arcs[id];\n    return arc === undefined ? undefined : arc.maxX - arc.minX;\n  };\n\n  // returns angles in [0, 2 * PI]\n  state.arcs.endAngle = endAngle(state);\n  state.arcs.startAngle = startAngle(state);\n  state.arcs.length = length(state);\n\n  pc.on('axesreorder.arcs', () => {\n    const ids = Object.getOwnPropertyNames(arcs).filter(d => !isNaN(d));\n\n    if (ids.length > 0) {\n      // We have some arcs, which might need to be removed.\n      ids.forEach(d => {\n        const dims = arcs[d].dims;\n        state.arcs.active = d;\n        // If the two dimensions of the current arc are not next to each other\n        // any more, than we'll need to remove the arc. Otherwise we keep it.\n        if (!consecutive(dims)(dims.left, dims.right)) {\n          removeStrum(state, pc);\n        }\n      });\n      onDragEnd(brushGroup, state, config, pc, events)();\n    }\n  });\n\n  // Add a new svg group in which we draw the arcs.\n  pc.selection\n    .select('svg')\n    .append('g')\n    .attr('id', 'arcs')\n    .attr(\n      'transform',\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\n    );\n\n  // Install the required brushReset function\n  pc.brushReset = brushReset(brushGroup, state, config, pc, events);\n\n  _drag\n    .on('start', onDragStart(state, config, pc, xscale))\n    .on('drag',onDrag(brushGroup, state, config, pc, events))\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\n\n  // NOTE: The styling needs to be done here and not in the css. This is because\n  //       for 1D brushing, the canvas layers should not listen to\n  //       pointer-events._.\n  state.strumRect = pc.selection\n    .select('svg')\n    .insert('rect', 'g#arcs')\n    .attr('id', 'arc-events')\n    .attr('x', config.margin.left)\n    .attr('y', config.margin.top)\n    .attr('width', w(config))\n    .attr('height', h(config) + 2)\n    .style('opacity', 0)\n    .call(_drag);\n};\n\nexport default install;\n","import uninstall from './uninstall';\nimport install from './install';\nimport selected from './selected';\n\nconst BrushState = {\n  arcs: {},\n  strumRect: {},\n};\n\nconst installAngularBrush = (brushGroup, config, pc, events, xscale) => {\n  const state = Object.assign({}, BrushState);\n\n  brushGroup.modes['angular'] = {\n    install: install(brushGroup, state, config, pc, events, xscale),\n    uninstall: uninstall(state, pc),\n    selected: selected(brushGroup, state, config),\n    brushState: () => state.arcs,\n  };\n};\n\nexport default installAngularBrush;\n","// calculate 2d intersection of line a->b with line c->d\n// points are objects with x and y properties\nconst intersection = (a, b, c, d) => {\n  return {\n    x:\n      ((a.x * b.y - a.y * b.x) * (c.x - d.x) -\n        (a.x - b.x) * (c.x * d.y - c.y * d.x)) /\n      ((a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x)),\n    y:\n      ((a.x * b.y - a.y * b.x) * (c.y - d.y) -\n        (a.y - b.y) * (c.x * d.y - c.y * d.x)) /\n      ((a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x)),\n  };\n};\n\nexport default intersection;\n","// Merges the canvases and SVG elements into one canvas element which is then passed into the callback\n// (so you can choose to save it to disk, etc.)\nconst mergeParcoords = pc => callback => {\n  // Retina display, etc.\n  const devicePixelRatio = window.devicePixelRatio || 1;\n\n  // Create a canvas element to store the merged canvases\n  const mergedCanvas = document.createElement('canvas');\n  mergedCanvas.width = pc.canvas.foreground.clientWidth * devicePixelRatio;\n  mergedCanvas.height =\n    (pc.canvas.foreground.clientHeight + 30) * devicePixelRatio;\n  mergedCanvas.style.width = mergedCanvas.width / devicePixelRatio + 'px';\n  mergedCanvas.style.height = mergedCanvas.height / devicePixelRatio + 'px';\n\n  // Give the canvas a white background\n  const context = mergedCanvas.getContext('2d');\n  context.fillStyle = '#ffffff';\n  context.fillRect(0, 0, mergedCanvas.width, mergedCanvas.height);\n\n  // Merge all the canvases\n  for (const key in pc.canvas) {\n    context.drawImage(\n      pc.canvas[key],\n      0,\n      24 * devicePixelRatio,\n      mergedCanvas.width,\n      mergedCanvas.height - 30 * devicePixelRatio\n    );\n  }\n\n  // Add SVG elements to canvas\n  const DOMURL = window.URL || window.webkitURL || window;\n  const serializer = new XMLSerializer();\n  const svgStr = serializer.serializeToString(\n    pc.selection.select('svg').node()\n  );\n\n  // Create a Data URI.\n  const src = 'data:image/svg+xml;base64,' + window.btoa(svgStr);\n  const img = new Image();\n  img.onload = () => {\n    context.drawImage(\n      img,\n      0,\n      0,\n      img.width * devicePixelRatio,\n      img.height * devicePixelRatio\n    );\n    if (typeof callback === 'function') {\n      callback(mergedCanvas);\n    }\n  };\n  img.src = src;\n};\n\nexport default mergeParcoords;\n","import { brushSelection } from 'd3-brush';\nimport { selectAll } from 'd3-selection';\n\nconst selected = config => {\n  let actives = [];\n  let extents = [];\n  let ranges = {};\n  //get brush selections from each node, convert to actual values\n  //invert order of values in array to comply with the parcoords architecture\n  if (config.brushes.length === 0) {\n    let nodes = selectAll('.brush').nodes();\n    for (let k = 0; k < nodes.length; k++) {\n      if (brushSelection(nodes[k]) !== null) {\n        actives.push(nodes[k].__data__);\n        let values = [];\n        let ranger = brushSelection(nodes[k]);\n        if (\n          typeof config.dimensions[nodes[k].__data__].yscale.domain()[0] ===\n          'number'\n        ) {\n          for (let i = 0; i < ranger.length; i++) {\n            if (\n              actives.includes(nodes[k].__data__) &&\n              config.flipAxes.includes(nodes[k].__data__)\n            ) {\n              values.push(\n                config.dimensions[nodes[k].__data__].yscale.invert(ranger[i])\n              );\n            } else if (config.dimensions[nodes[k].__data__].yscale() !== 1) {\n              values.unshift(\n                config.dimensions[nodes[k].__data__].yscale.invert(ranger[i])\n              );\n            }\n          }\n          extents.push(values);\n          for (let ii = 0; ii < extents.length; ii++) {\n            if (extents[ii].length === 0) {\n              extents[ii] = [1, 1];\n            }\n          }\n        } else {\n          ranges[nodes[k].__data__] = brushSelection(nodes[k]);\n          let dimRange = config.dimensions[nodes[k].__data__].yscale.range();\n          let dimDomain = config.dimensions[nodes[k].__data__].yscale.domain();\n          for (let j = 0; j < dimRange.length; j++) {\n            if (\n              dimRange[j] >= ranger[0] &&\n              dimRange[j] <= ranger[1] &&\n              actives.includes(nodes[k].__data__) &&\n              config.flipAxes.includes(nodes[k].__data__)\n            ) {\n              values.push(dimRange[j]);\n            } else if (dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) {\n              values.unshift(dimRange[j]);\n            }\n          }\n          extents.push(values);\n          for (let ii = 0; ii < extents.length; ii++) {\n            if (extents[ii].length === 0) {\n              extents[ii] = [1, 1];\n            }\n          }\n        }\n      }\n    }\n    // test if within range\n    const within = {\n      date: function(d, p, dimension) {\n        let category = d[p];\n        let categoryIndex = config.dimensions[p].yscale\n          .domain()\n          .indexOf(category);\n        let categoryRangeValue = config.dimensions[p].yscale.range()[\n          categoryIndex\n        ];\n        return (\n          categoryRangeValue >= ranges[p][0] &&\n          categoryRangeValue <= ranges[p][1]\n        );\n      },\n      number: function(d, p, dimension) {\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\n      },\n      string: function(d, p, dimension) {\n        let category = d[p];\n        let categoryIndex = config.dimensions[p].yscale\n          .domain()\n          .indexOf(category);\n        let categoryRangeValue = config.dimensions[p].yscale.range()[\n          categoryIndex\n        ];\n        return (\n          categoryRangeValue >= ranges[p][0] &&\n          categoryRangeValue <= ranges[p][1]\n        );\n      },\n    };\n    return config.data.filter(d =>\n      actives.every((p, dimension) =>\n        within[config.dimensions[p].type](d, p, dimension)\n      )\n    );\n  } else {\n    // need to get data from each brush instead of each axis\n    // first must find active axes by iterating through all brushes\n    // then go through similiar process as above.\n    let multiBrushData = [];\n    for (let idx = 0; idx < config.brushes.length; idx++) {\n      let brush = config.brushes[idx];\n      let values = [];\n      let ranger = brush.extent;\n      let actives = [brush.data];\n      if (\n        typeof config.dimensions[brush.data].yscale.domain()[0] === 'number'\n      ) {\n        for (let i = 0; i < ranger.length; i++) {\n          if (\n            actives.includes(brush.data) &&\n            config.flipAxes.includes(brush.data)\n          ) {\n            values.push(config.dimensions[brush.data].yscale.invert(ranger[i]));\n          } else if (config.dimensions[brush.data].yscale() !== 1) {\n            values.unshift(\n              config.dimensions[brush.data].yscale.invert(ranger[i])\n            );\n          }\n        }\n        extents.push(values);\n        for (let ii = 0; ii < extents.length; ii++) {\n          if (extents[ii].length === 0) {\n            extents[ii] = [1, 1];\n          }\n        }\n      } else {\n        ranges[brush.data] = brush.extent;\n        let dimRange = config.dimensions[brush.data].yscale.range();\n        let dimDomain = config.dimensions[brush.data].yscale.domain();\n        for (let j = 0; j < dimRange.length; j++) {\n          if (\n            dimRange[j] >= ranger[0] &&\n            dimRange[j] <= ranger[1] &&\n            actives.includes(brush.data) &&\n            config.flipAxes.includes(brush.data)\n          ) {\n            values.push(dimRange[j]);\n          } else if (dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) {\n            values.unshift(dimRange[j]);\n          }\n        }\n        extents.push(values);\n        for (let ii = 0; ii < extents.length; ii++) {\n          if (extents[ii].length === 0) {\n            extents[ii] = [1, 1];\n          }\n        }\n      }\n      let within = {\n        date: function(d, p, dimension) {\n          let category = d[p];\n          let categoryIndex = config.dimensions[p].yscale\n            .domain()\n            .indexOf(category);\n          let categoryRangeValue = config.dimensions[p].yscale.range()[\n            categoryIndex\n          ];\n          return (\n            categoryRangeValue >= ranges[p][0] &&\n            categoryRangeValue <= ranges[p][1]\n          );\n        },\n        number: function(d, p, dimension) {\n          return extents[idx][0] <= d[p] && d[p] <= extents[idx][1];\n        },\n        string: function(d, p, dimension) {\n          let category = d[p];\n          let categoryIndex = config.dimensions[p].yscale\n            .domain()\n            .indexOf(category);\n          let categoryRangeValue = config.dimensions[p].yscale.range()[\n            categoryIndex\n          ];\n          return (\n            categoryRangeValue >= ranges[p][0] &&\n            categoryRangeValue <= ranges[p][1]\n          );\n        },\n      };\n\n      // filter data, but instead of returning it now,\n      // put it into multiBrush data which is returned after\n      // all brushes are iterated through.\n      let filtered = config.data.filter(d =>\n        actives.every((p, dimension) =>\n          within[config.dimensions[p].type](d, p, dimension)\n        )\n      );\n      for (let z = 0; z < filtered.length; z++) {\n        multiBrushData.push(filtered[z]);\n      }\n      actives = [];\n      ranges = {};\n    }\n    return multiBrushData;\n  }\n};\n\nexport default selected;\n","const brushPredicate = (brushGroup, config, pc) => (predicate = null) => {\n  if (predicate === null) {\n    return brushGroup.predicate;\n  }\n\n  predicate = String(predicate).toUpperCase();\n  if (predicate !== 'AND' && predicate !== 'OR') {\n    throw new Error('Invalid predicate ' + predicate);\n  }\n\n  brushGroup.predicate = predicate;\n  config.brushed = brushGroup.currentMode().selected();\n  pc.renderBrushed();\n  return pc;\n};\n\nconst brushMode = (brushGroup, config, pc) => (mode = null) => {\n  if (mode === null) {\n    return brushGroup.mode;\n  }\n\n  if (pc.brushModes().indexOf(mode) === -1) {\n    throw new Error('pc.brushmode: Unsupported brush mode: ' + mode);\n  }\n\n  // Make sure that we don't trigger unnecessary events by checking if the mode\n  // actually changes.\n  if (mode !== brushGroup.mode) {\n    // When changing brush modes, the first thing we need to do is clearing any\n    // brushes from the current mode, if any.\n    if (brushGroup.mode !== 'None') {\n      pc.brushReset();\n    }\n\n    // Next, we need to 'uninstall' the current brushMode.\n    brushGroup.modes[brushGroup.mode].uninstall(pc);\n    // Finally, we can install the requested one.\n    brushGroup.mode = mode;\n    brushGroup.modes[brushGroup.mode].install();\n    if (mode === 'None') {\n      delete pc.brushPredicate;\n    } else {\n      pc.brushPredicate = brushPredicate(brushGroup, config, pc);\n    }\n  }\n\n  return pc;\n};\n\nexport default brushMode;\n","/**\n * dimension display names\n *\n * @param config\n * @param d\n * @returns {*}\n */\nconst dimensionLabels = config => d =>\n  config.dimensions[d].title ? config.dimensions[d].title : d;\n\nexport default dimensionLabels;\n","import { select } from 'd3-selection';\n\nconst flipAxisAndUpdatePCP = (config, pc, axis) =>\n  function(dimension) {\n    pc.flip(dimension);\n    pc.brushReset(dimension);\n    select(this.parentElement)\n      .transition()\n      .duration(config.animationTime)\n      .call(axis.scale(config.dimensions[dimension].yscale));\n    pc.render();\n  };\n\nexport default flipAxisAndUpdatePCP;\n","import { event } from 'd3-selection';\n\nconst rotateLabels = (config, pc) => {\n  if (!config.rotateLabels) return;\n\n  let delta = event.deltaY;\n  delta = delta < 0 ? -5 : delta;\n  delta = delta > 0 ? 5 : delta;\n\n  config.dimensionTitleRotation += delta;\n  pc.svg\n    .selectAll('text.label')\n    .attr(\n      'transform',\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\n    );\n  event.preventDefault();\n};\n\nexport default rotateLabels;\n","import { select } from 'd3-selection';\n\nimport dimensionLabels from '../util/dimensionLabels';\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\nimport rotateLabels from '../util/rotateLabels';\n\nconst updateAxes = (config, pc, position, axis, flags) => (\n  animationTime = null\n) => {\n  if (animationTime === null) {\n    animationTime = config.animationTime;\n  }\n\n  const g_data = pc.svg\n    .selectAll('.dimension')\n    .data(pc.getOrderedDimensionKeys());\n  // Enter\n  g_data\n    .enter()\n    .append('svg:g')\n    .attr('class', 'dimension')\n    .attr('transform', p => 'translate(' + position(p) + ')')\n    .style('opacity', 0)\n    .append('svg:g')\n    .attr('class', 'axis')\n    .attr('transform', 'translate(0,0)')\n    .each(function(d) {\n      const axisElement = select(this).call(\n        pc.applyAxisConfig(axis, config.dimensions[d])\n      );\n\n      axisElement\n        .selectAll('path')\n        .style('fill', 'none')\n        .style('stroke', '#222')\n        .style('shape-rendering', 'crispEdges');\n\n      axisElement\n        .selectAll('line')\n        .style('fill', 'none')\n        .style('stroke', '#222')\n        .style('shape-rendering', 'crispEdges');\n    })\n    .append('svg:text')\n    .attr({\n      'text-anchor': 'middle',\n      y: 0,\n      transform:\n        'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')',\n      x: 0,\n      class: 'label',\n    })\n    .text(dimensionLabels(config))\n    .on('dblclick', flipAxisAndUpdatePCP(config, pc, axis))\n    .on('wheel', rotateLabels(config, pc));\n\n  // Update\n  g_data.attr('opacity', 0);\n  g_data\n    .select('.axis')\n    .transition()\n    .duration(animationTime)\n    .each(function(d) {\n      select(this).call(pc.applyAxisConfig(axis, config.dimensions[d]));\n    });\n  g_data\n    .select('.label')\n    .transition()\n    .duration(animationTime)\n    .text(dimensionLabels(config))\n    .attr(\n      'transform',\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\n    );\n\n  // Exit\n  g_data.exit().remove();\n\n  g = pc.svg.selectAll('.dimension');\n  g\n    .transition()\n    .duration(animationTime)\n    .attr('transform', p => 'translate(' + position(p) + ')')\n    .style('opacity', 1);\n\n  pc.svg\n    .selectAll('.axis')\n    .transition()\n    .duration(animationTime)\n    .each(function(d) {\n      select(this).call(pc.applyAxisConfig(axis, config.dimensions[d]));\n    });\n\n  if (flags.brushable) pc.brushable();\n  if (flags.reorderable) pc.reorderable();\n  if (pc.brushMode() !== 'None') {\n    let mode = pc.brushMode();\n    pc.brushMode('None');\n    pc.brushMode(mode);\n  }\n  return this;\n};\n\nexport default updateAxes;\n","/** adjusts an axis' default range [h()+1, 1] if a NullValueSeparator is set */\nconst getRange = config => {\n  const h = config.height - config.margin.top - config.margin.bottom;\n\n  if (config.nullValueSeparator == 'bottom') {\n    return [\n      h +\n        1 -\n        config.nullValueSeparatorPadding.bottom -\n        config.nullValueSeparatorPadding.top,\n      1,\n    ];\n  } else if (config.nullValueSeparator == 'top') {\n    return [\n      h + 1,\n      1 +\n        config.nullValueSeparatorPadding.bottom +\n        config.nullValueSeparatorPadding.top,\n    ];\n  }\n  return [h + 1, 1];\n};\n\nexport default getRange;\n","import { scaleLinear, scaleOrdinal, scalePoint, scaleTime } from 'd3-scale';\nimport { keys } from 'd3-collection';\nimport { extent } from 'd3-array';\n\nimport getRange from '../util/getRange';\nimport w from '../util/width';\nimport h from '../util/height';\n\nconst autoscale = (config, pc, xscale, ctx) =>\n  function() {\n    // yscale\n    const defaultScales = {\n      date: function(k) {\n        let _extent = extent(config.data, d => (d[k] ? d[k].getTime() : null));\n        // special case if single value\n        if (_extent[0] === _extent[1]) {\n          return scalePoint()\n            .domain(_extent)\n            .range(getRange(config));\n        }\n        if (config.flipAxes.includes(k)) {\n          _extent = _extent.map(val => tempDate.unshift(val));\n        }\n        return scaleTime()\n          .domain(_extent)\n          .range(getRange(config));\n      },\n      number: function(k) {\n        let _extent = extent(config.data, d => +d[k]);\n        // special case if single value\n        if (_extent[0] === _extent[1]) {\n          return scalePoint()\n            .domain(_extent)\n            .range(getRange(config));\n        }\n        if (config.flipAxes.includes(k)) {\n          _extent = _extent.map(val => tempDate.unshift(val));\n        }\n        return scaleLinear()\n          .domain(_extent)\n          .range(getRange(config));\n      },\n      string: function(k) {\n        let counts = {},\n          domain = [];\n        // Let's get the count for each value so that we can sort the domain based\n        // on the number of items for each value.\n        config.data.map(p => {\n          if (p[k] === undefined && config.nullValueSeparator !== 'undefined') {\n            return null; // null values will be drawn beyond the horizontal null value separator!\n          }\n          if (counts[p[k]] === undefined) {\n            counts[p[k]] = 1;\n          } else {\n            counts[p[k]] = counts[p[k]] + 1;\n          }\n        });\n        if (config.flipAxes.includes(k)) {\n          domain = Object.getOwnPropertyNames(counts).sort();\n        } else {\n          let tempArr = Object.getOwnPropertyNames(counts).sort();\n          for (let i = 0; i < Object.getOwnPropertyNames(counts).length; i++) {\n            domain.push(tempArr.pop());\n          }\n        }\n\n        //need to create an ordinal scale for categorical data\n        let categoricalRange = [];\n        if (domain.length === 1) {\n          //edge case\n          domain = [' ', domain[0], ' '];\n        }\n        let addBy = getRange(config)[0] / (domain.length - 1);\n        for (let j = 0; j < domain.length; j++) {\n          if (categoricalRange.length === 0) {\n            categoricalRange.push(0);\n            continue;\n          }\n          categoricalRange.push(categoricalRange[j - 1] + addBy);\n        }\n        return scaleOrdinal()\n          .domain(domain)\n          .range(categoricalRange);\n      },\n    };\n    keys(config.dimensions).forEach(function(k) {\n      config.dimensions[k].yscale = defaultScales[config.dimensions[k].type](k);\n    });\n\n    // xscale\n    xscale.range([0, w(config)], 1);\n    // Retina display, etc.\n    const devicePixelRatio = window.devicePixelRatio || 1;\n\n    // canvas sizes\n    pc.selection\n      .selectAll('canvas')\n      .style('margin-top', config.margin.top + 'px')\n      .style('margin-left', config.margin.left + 'px')\n      .style('width', w(config) + 2 + 'px')\n      .style('height', h(config) + 2 + 'px')\n      .attr('width', (w(config) + 2) * devicePixelRatio)\n      .attr('height', (h(config) + 2) * devicePixelRatio);\n    // default styles, needs to be set when canvas width changes\n    ctx.foreground.strokeStyle = config.color;\n    ctx.foreground.lineWidth = 1.4;\n    ctx.foreground.globalCompositeOperation = config.composite;\n    ctx.foreground.globalAlpha = config.alpha;\n    ctx.foreground.scale(devicePixelRatio, devicePixelRatio);\n    ctx.brushed.strokeStyle = config.brushedColor;\n    ctx.brushed.lineWidth = 1.4;\n    ctx.brushed.globalCompositeOperation = config.composite;\n    ctx.brushed.globalAlpha = config.alpha;\n    ctx.brushed.scale(devicePixelRatio, devicePixelRatio);\n    ctx.highlight.lineWidth = 3;\n    ctx.highlight.scale(devicePixelRatio, devicePixelRatio);\n\n    return this;\n  };\n\nexport default autoscale;\n","import { brushSelection, brushY } from 'd3-brush';\nimport { event, select } from 'd3-selection';\n\nconst brushable = (config, pc, flags) =>\n  function() {\n    if (!pc.g()) {\n      pc.createAxes();\n    }\n\n    const g = pc.g();\n\n    // Add and store a brush for each axis.\n    g\n      .append('svg:g')\n      .attr('class', 'brush')\n      .each(function(d) {\n        if (config.dimensions[d] !== undefined) {\n          config.dimensions[d]['brush'] = brushY(select(this)).extent([\n            [-15, 0],\n            [15, config.dimensions[d].yscale.range()[0]],\n          ]);\n          select(this).call(\n            config.dimensions[d]['brush']\n              .on('start', function() {\n                if (event.sourceEvent !== null && !event.sourceEvent.ctrlKey) {\n                  pc.brushReset();\n                }\n              })\n              .on('brush', function() {\n                if (!event.sourceEvent.ctrlKey) {\n                  pc.brush();\n                }\n              })\n              .on('end', function() {\n                // save brush selection is ctrl key is held\n                // store important brush information and\n                // the html element of the selection,\n                // to make a dummy selection element\n                if (event.sourceEvent.ctrlKey) {\n                  let html = select(this)\n                    .select('.selection')\n                    .nodes()[0].outerHTML;\n                  html = html.replace(\n                    'class=\"selection\"',\n                    'class=\"selection dummy' +\n                      ' selection-' +\n                      config.brushes.length +\n                      '\"'\n                  );\n                  let dat = select(this).nodes()[0].__data__;\n                  let brush = {\n                    id: config.brushes.length,\n                    extent: brushSelection(this),\n                    html: html,\n                    data: dat,\n                  };\n                  config.brushes.push(brush);\n                  select(select(this).nodes()[0].parentNode)\n                    .select('.axis')\n                    .nodes()[0].outerHTML += html;\n                  pc.brush();\n                  config.dimensions[d].brush.move(select(this, null));\n                  select(this)\n                    .select('.selection')\n                    .attr('style', 'display:none');\n                  pc.brushable();\n                } else {\n                  pc.brush();\n                }\n              })\n          );\n          select(this).on('dblclick', function() {\n            pc.brushReset(d);\n          });\n        }\n      });\n\n    flags.brushable = true;\n    return this;\n  };\n\nexport default brushable;\n","import { keys } from 'd3-collection';\nimport { extent } from 'd3-array';\n\nconst commonScale = (config, pc) =>\n  function(global, type) {\n    const t = type || 'number';\n    if (typeof global === 'undefined') {\n      global = true;\n    }\n\n    // try to autodetect dimensions and create scales\n    if (!keys(config.dimensions).length) {\n      pc.detectDimensions();\n    }\n    pc.autoscale();\n\n    // scales of the same type\n    const scales = keys(config.dimensions).filter(\n      p => config.dimensions[p].type == t\n    );\n\n    if (global) {\n      let _extent = extent(\n        scales\n          .map(d => config.dimensions[d].yscale.domain())\n          .reduce((cur, acc) => cur.concat(acc))\n      );\n\n      scales.forEach(d => {\n        config.dimensions[d].yscale.domain(_extent);\n      });\n    } else {\n      scales.forEach(d => {\n        config.dimensions[d].yscale.domain(extent(config.data, d => +d[k]));\n      });\n    }\n\n    // update centroids\n    if (config.bundleDimension !== null) {\n      pc.bundleDimension(config.bundleDimension);\n    }\n\n    return this;\n  };\n\nexport default commonScale;\n","import { keys } from 'd3-collection';\n\nconst computeRealCentroids = (dimensions, position) => row =>\n  keys(dimensions).map(d => {\n    const x = position(d);\n    const y = dimensions[d].yscale(row[d]);\n    return [x, y];\n  });\n\nexport default computeRealCentroids;\n","import { keys } from 'd3-collection';\n\nconst applyDimensionDefaults = (config, pc) =>\n  function(dims) {\n    const types = pc.detectDimensionTypes(config.data);\n    dims = dims ? dims : keys(types);\n\n    return dims.reduce((acc, cur, i) => {\n      const k = config.dimensions[cur] ? config.dimensions[cur] : {};\n\n      acc[cur] = {\n        ...k,\n        orient: k.orient ? k.orient : 'left',\n        ticks: k.ticks != null ? k.ticks : 5,\n        innerTickSize: k.innerTickSize != null ? k.innerTickSize : 6,\n        outerTickSize: k.outerTickSize != null ? k.outerTickSize : 0,\n        tickPadding: k.tickPadding != null ? k.tickPadding : 3,\n        type: k.type ? k.type : types[cur],\n        index: k.index != null ? k.index : i,\n      };\n\n      return acc;\n    }, {});\n  };\n\nexport default applyDimensionDefaults;\n","import { select } from 'd3-selection';\n\nimport dimensionLabels from '../util/dimensionLabels';\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\nimport rotateLabels from '../util/rotateLabels';\n\n/**\n * Create static SVG axes with dimension names, ticks, and labels.\n *\n * @param config\n * @param pc\n * @param xscale\n * @param flags\n * @param axis\n * @returns {Function}\n */\nconst createAxes = (config, pc, xscale, flags, axis) =>\n  function() {\n    if (pc.g() !== undefined) {\n      pc.removeAxes();\n    }\n    // Add a group element for each dimension.\n    pc._g = pc.svg\n      .selectAll('.dimension')\n      .data(pc.getOrderedDimensionKeys(), function(d) {\n        return d;\n      })\n      .enter()\n      .append('svg:g')\n      .attr('class', 'dimension')\n      .attr('transform', function(d) {\n        return 'translate(' + xscale(d) + ')';\n      });\n    // Add an axis and title.\n    pc._g\n      .append('svg:g')\n      .attr('class', 'axis')\n      .attr('transform', 'translate(0,0)')\n      .each(function(d) {\n        let axisElement = select(this).call(\n          pc.applyAxisConfig(axis, config.dimensions[d])\n        );\n\n        axisElement\n          .selectAll('path')\n          .style('fill', 'none')\n          .style('stroke', '#222')\n          .style('shape-rendering', 'crispEdges');\n\n        axisElement\n          .selectAll('line')\n          .style('fill', 'none')\n          .style('stroke', '#222')\n          .style('shape-rendering', 'crispEdges');\n      })\n\n      .append('svg:text')\n      .attr('text-anchor', 'middle')\n      .attr('y', 0)\n      .attr(\n        'transform',\n        'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\n      )\n      .attr('x', 0)\n      .attr('class', 'label')\n      .text(dimensionLabels(config))\n      .on('dblclick', flipAxisAndUpdatePCP(config, pc, axis))\n      .on('wheel', rotateLabels(config, pc));\n\n    if (config.nullValueSeparator == 'top') {\n      pc.svg\n        .append('line')\n        .attr('x1', 0)\n        .attr('y1', 1 + config.nullValueSeparatorPadding.top)\n        .attr('x2', w())\n        .attr('y2', 1 + config.nullValueSeparatorPadding.top)\n        .attr('stroke-width', 1)\n        .attr('stroke', '#777')\n        .attr('fill', 'none')\n        .attr('shape-rendering', 'crispEdges');\n    } else if (config.nullValueSeparator == 'bottom') {\n      pc.svg\n        .append('line')\n        .attr('x1', 0)\n        .attr('y1', h() + 1 - config.nullValueSeparatorPadding.bottom)\n        .attr('x2', w())\n        .attr('y2', h() + 1 - config.nullValueSeparatorPadding.bottom)\n        .attr('stroke-width', 1)\n        .attr('stroke', '#777')\n        .attr('fill', 'none')\n        .attr('shape-rendering', 'crispEdges');\n    }\n\n    flags.axes = true;\n    return this;\n  };\n\nexport default createAxes;\n","import { entries } from 'd3-collection';\nimport { min } from 'd3-array';\n\n//draw dots with radius r on the axis line where data intersects\nconst axisDots = (config, pc, position) => _r => {\n  const r = _r || 0.1;\n  const ctx = pc.ctx.marks;\n  const startAngle = 0;\n  const endAngle = 2 * Math.PI;\n  ctx.globalAlpha = min([1 / Math.pow(config.data.length, 1 / 2), 1]);\n  config.data.forEach(d => {\n    entries(config.dimensions).forEach((p, i) => {\n      ctx.beginPath();\n      ctx.arc(\n        position(p),\n        config.dimensions[p.key].yscale(d[p]),\n        r,\n        startAngle,\n        endAngle\n      );\n      ctx.stroke();\n      ctx.fill();\n    });\n  });\n  return this;\n};\n\nexport default axisDots;\n","import { axisBottom, axisLeft, axisRight, axisTop } from 'd3-axis';\n\nconst applyAxisConfig = (axis, dimension) => {\n  let axisCfg;\n\n  switch (dimension.orient) {\n    case 'left':\n      axisCfg = axisLeft(dimension.yscale);\n      break;\n    case 'right':\n      axisCfg = axisRight(dimension.yscale);\n      break;\n    case 'top':\n      axisCfg = axisTop(dimension.yscale);\n      break;\n    case 'bottom':\n      axisCfg = axisBottom(dimension.yscale);\n      break;\n    default:\n      axisCfg = axisLeft(dimension.yscale);\n      break;\n  }\n\n  axisCfg\n    .ticks(dimension.ticks)\n    .tickValues(dimension.tickValues)\n    .tickSizeInner(dimension.innerTickSize)\n    .tickSizeOuter(dimension.outerTickSize)\n    .tickPadding(dimension.tickPadding)\n    .tickFormat(dimension.tickFormat);\n\n  return axisCfg;\n};\n\nexport default applyAxisConfig;\n","import { drag } from 'd3-drag';\nimport { event, select } from 'd3-selection';\n\nimport w from '../util/width';\n\n// Jason Davies, http://bl.ocks.org/1341281\nconst reorderable = (config, pc, xscale, position, dragging, flags) =>\n  function() {\n    if (pc.g() === undefined) pc.createAxes();\n    const g = pc.g();\n\n    g.style('cursor', 'move').call(\n      drag()\n        .on('start', function(d) {\n          dragging[d] = this.__origin__ = xscale(d);\n        })\n        .on('drag', function(d) {\n          dragging[d] = Math.min(\n            w(__),\n            Math.max(0, (this.__origin__ += event.dx))\n          );\n          pc.sortDimensions();\n          xscale.domain(pc.getOrderedDimensionKeys());\n          pc.render();\n          g.attr('transform', d => 'translate(' + position(d) + ')');\n        })\n        .on('end', function(d) {\n          delete this.__origin__;\n          delete dragging[d];\n          select(this)\n            .transition()\n            .attr('transform', 'translate(' + xscale(d) + ')');\n          pc.render();\n        })\n    );\n    flags.reorderable = true;\n    return this;\n  };\n\nexport default reorderable;\n","// rescale for height, width and margins\n// TODO currently assumes chart is brushable, and destroys old brushes\nconst resize = (config, pc, flags, events) => {\n  return function() {\n    // selection size\n    pc.selection\n      .select('svg')\n      .attr('width', config.width)\n      .attr('height', config.height);\n    pc.svg.attr(\n      'transform',\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\n    );\n\n    // FIXME: the current brush state should pass through\n    if (flags.brushable) pc.brushReset();\n\n    // scales\n    pc.autoscale();\n\n    // axes, destroys old brushes.\n    if (pc.g()) pc.createAxes();\n    if (flags.brushable) pc.brushable();\n    if (flags.reorderable) pc.reorderable();\n\n    events.call('resize', this, {\n      width: config.width,\n      height: config.height,\n      margin: config.margin,\n    });\n\n    return this;\n  };\n};\n\nexport default resize;\n","// Reorder dimensions, such that the highest value (visually) is on the left and\n// the lowest on the right. Visual values are determined by the data values in\n// the given row.\nconst reorder = (config, pc, xscale) => rowdata => {\n  const firstDim = pc.getOrderedDimensionKeys()[0];\n\n  pc.sortDimensionsByRowData(rowdata);\n  // NOTE: this is relatively cheap given that:\n  // number of dimensions < number of data items\n  // Thus we check equality of order to prevent rerendering when this is the case.\n  const reordered = firstDim !== pc.getOrderedDimensionKeys()[0];\n\n  if (reordered) {\n    xscale.domain(pc.getOrderedDimensionKeys());\n    const highlighted = config.highlighted.slice(0);\n    pc.unhighlight();\n\n    const g = pc.g();\n    g\n      .transition()\n      .duration(1500)\n      .attr('transform', d => 'translate(' + xscale(d) + ')');\n    pc.render();\n\n    // pc.highlight() does not check whether highlighted is length zero, so we do that here.\n    if (highlighted.length !== 0) {\n      pc.highlight(highlighted);\n    }\n  }\n};\n\nexport default reorder;\n","import { keys } from 'd3-collection';\n\nconst sortDimensions = (config, position) => () => {\n  const copy = Object.assign({}, config.dimensions);\n  const positionSortedKeys = keys(config.dimensions).sort(\n    (a, b) => (position(a) - position(b) === 0 ? 1 : position(a) - position(b))\n  );\n  config.dimensions = {};\n  positionSortedKeys.forEach((p, i) => {\n    config.dimensions[p] = copy[p];\n    config.dimensions[p].index = i;\n  });\n};\n\nexport default sortDimensions;\n","import { keys } from 'd3-collection';\n\nconst sortDimensionsByRowData = config => rowdata => {\n  const copy = Object.assign({}, config.dimensions);\n  const positionSortedKeys = keys(config.dimensions).sort((a, b) => {\n    const pixelDifference =\n      config.dimensions[a].yscale(rowdata[a]) -\n      config.dimensions[b].yscale(rowdata[b]);\n\n    // Array.sort is not necessarily stable, this means that if pixelDifference is zero\n    // the ordering of dimensions might change unexpectedly. This is solved by sorting on\n    // variable name in that case.\n    return pixelDifference === 0 ? a.localeCompare(b) : pixelDifference;\n  });\n  config.dimensions = {};\n  positionSortedKeys.forEach((p, i) => {\n    config.dimensions[p] = copy[p];\n    config.dimensions[p].index = i;\n  });\n};\n\nexport default sortDimensionsByRowData;\n","const isBrushed = (config, brushGroup) => {\n  if (config.brushed && config.brushed.length !== config.data.length)\n    return true;\n\n  const object = brushGroup.currentMode().brushState();\n\n  for (let key in object) {\n    if (object.hasOwnProperty(key)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport default isBrushed;\n","import h from '../util/height';\nimport w from '../util/width';\nimport isBrushed from '../util/isBrushed';\n\nconst clear = (config, pc, ctx, brushGroup) =>\n  function(layer) {\n    ctx[layer].clearRect(0, 0, w(config) + 2, h(config) + 2);\n\n    // This will make sure that the foreground items are transparent\n    // without the need for changing the opacity style of the foreground canvas\n    // as this would stop the css styling from working\n    if (layer === 'brushed' && isBrushed(config, brushGroup)) {\n      ctx.brushed.fillStyle = pc.selection.style('background-color');\n      ctx.brushed.globalAlpha = 1 - config.alphaOnBrushed;\n      ctx.brushed.fillRect(0, 0, w(config) + 2, h(config) + 2);\n      ctx.brushed.globalAlpha = config.alpha;\n    }\n    return this;\n  };\n\nexport default clear;\n","import { keys } from 'd3-collection';\n\nconst computeCentroids = (config, position, row) => {\n  const centroids = [];\n\n  const p = keys(config.dimensions);\n  const cols = p.length;\n  const a = 0.5; // center between axes\n  for (let i = 0; i < cols; ++i) {\n    // centroids on 'real' axes\n    const x = position(p[i]);\n    const y = config.dimensions[p[i]].yscale(row[p[i]]);\n    centroids.push($V([x, y]));\n\n    // centroids on 'virtual' axes\n    if (i < cols - 1) {\n      const cx = x + a * (position(p[i + 1]) - x);\n      let cy = y + a * (config.dimensions[p[i + 1]].yscale(row[p[i + 1]]) - y);\n      if (config.bundleDimension !== null) {\n        const leftCentroid = config.clusterCentroids\n          .get(\n            config.dimensions[config.bundleDimension].yscale(\n              row[config.bundleDimension]\n            )\n          )\n          .get(p[i]);\n        const rightCentroid = config.clusterCentroids\n          .get(\n            config.dimensions[config.bundleDimension].yscale(\n              row[config.bundleDimension]\n            )\n          )\n          .get(p[i + 1]);\n        let centroid = 0.5 * (leftCentroid + rightCentroid);\n        cy = centroid + (1 - config.bundlingStrength) * (cy - centroid);\n      }\n      centroids.push($V([cx, cy]));\n    }\n  }\n\n  return centroids;\n};\n\nexport default computeCentroids;\n","const computeControlPoints = (smoothness, centroids) => {\n  const cols = centroids.length;\n  const a = smoothness;\n  const cps = [];\n\n  cps.push(centroids[0]);\n  cps.push(\n    $V([\n      centroids[0].e(1) + a * 2 * (centroids[1].e(1) - centroids[0].e(1)),\n      centroids[0].e(2),\n    ])\n  );\n  for (let col = 1; col < cols - 1; ++col) {\n    let mid = centroids[col];\n    let left = centroids[col - 1];\n    let right = centroids[col + 1];\n\n    let diff = left.subtract(right);\n    cps.push(mid.add(diff.x(a)));\n    cps.push(mid);\n    cps.push(mid.subtract(diff.x(a)));\n  }\n  cps.push(\n    $V([\n      centroids[cols - 1].e(1) +\n        a * 2 * (centroids[cols - 2].e(1) - centroids[cols - 1].e(1)),\n      centroids[cols - 1].e(2),\n    ])\n  );\n  cps.push(centroids[cols - 1]);\n\n  return cps;\n};\n\nexport default computeControlPoints;\n","// draw single cubic bezier curve\nimport { entries } from 'd3-collection';\nimport computeCentroids from './computeCentroids';\nimport computeControlPoints from './computeControlPoints';\nimport h from './height';\n\nconst singleCurve = (config, position, d, ctx) => {\n  const centroids = computeCentroids(config, position, d);\n  const cps = computeControlPoints(config.smoothness, centroids);\n\n  ctx.moveTo(cps[0].e(1), cps[0].e(2));\n\n  for (let i = 1; i < cps.length; i += 3) {\n    if (config.showControlPoints) {\n      for (let j = 0; j < 3; j++) {\n        ctx.fillRect(cps[i + j].e(1), cps[i + j].e(2), 2, 2);\n      }\n    }\n    ctx.bezierCurveTo(\n      cps[i].e(1),\n      cps[i].e(2),\n      cps[i + 1].e(1),\n      cps[i + 1].e(2),\n      cps[i + 2].e(1),\n      cps[i + 2].e(2)\n    );\n  }\n};\n\n// returns the y-position just beyond the separating null value line\nconst getNullPosition = config => {\n  if (config.nullValueSeparator == 'bottom') {\n    return h(config) + 1;\n  } else if (config.nullValueSeparator == 'top') {\n    return 1;\n  } else {\n    console.log(\n      \"A value is NULL, but nullValueSeparator is not set; set it to 'bottom' or 'top'.\"\n    );\n  }\n  return h(config) + 1;\n};\n\nconst singlePath = (config, position, d, ctx) => {\n  entries(config.dimensions).forEach((p, i) => {\n    //p isn't really p\n    if (i == 0) {\n      ctx.moveTo(\n        position(p.key),\n        typeof d[p.key] == 'undefined'\n          ? getNullPosition(config)\n          : config.dimensions[p.key].yscale(d[p.key])\n      );\n    } else {\n      ctx.lineTo(\n        position(p.key),\n        typeof d[p.key] == 'undefined'\n          ? getNullPosition(config)\n          : config.dimensions[p.key].yscale(d[p.key])\n      );\n    }\n  });\n};\n\n// draw single polyline\nconst colorPath = (config, position, d, ctx) => {\n  ctx.beginPath();\n  if (\n    (config.bundleDimension !== null && config.bundlingStrength > 0) ||\n    config.smoothness > 0\n  ) {\n    singleCurve(config, position, d, ctx);\n  } else {\n    singlePath(config, position, d, ctx);\n  }\n  ctx.stroke();\n};\n\nexport default colorPath;\n","const _functor = v => (typeof v === 'function' ? v : () => v);\n\nexport default _functor;\n","import { keys } from 'd3-collection';\n\nimport isBrushed from '../util/isBrushed';\nimport colorPath from '../util/colorPath';\nimport functor from '../util/functor';\n\nconst pathBrushed = (config, ctx, position) => (d, i) => {\n  if (config.brushedColor !== null) {\n    ctx.brushed.strokeStyle = functor(config.brushedColor)(d, i);\n  } else {\n    ctx.brushed.strokeStyle = functor(config.color)(d, i);\n  }\n  return colorPath(config, position, d, ctx.brushed);\n};\n\nconst renderBrushedDefault = (config, ctx, position, pc, brushGroup) => () => {\n  pc.clear('brushed');\n\n  if (isBrushed(config, brushGroup)) {\n    config.brushed.forEach(pathBrushed(config, ctx, position));\n  }\n};\n\nconst renderBrushedQueue = (config, brushGroup, brushedQueue) => () => {\n  if (isBrushed(config, brushGroup)) {\n    brushedQueue(config.brushed);\n  } else {\n    brushedQueue([]); // This is needed to clear the currently brushed items\n  }\n};\n\nconst renderBrushed = (config, pc, events) =>\n  function() {\n    if (!keys(config.dimensions).length) pc.detectDimensions();\n\n    pc.renderBrushed[config.mode]();\n    events.call('render', this);\n    return this;\n  };\n\nexport { pathBrushed, renderBrushed, renderBrushedDefault, renderBrushedQueue };\n","import { select, selectAll } from 'd3-selection';\n\nconst brushReset = config =>\n  function(dimension) {\n    const brushesToKeep = [];\n    for (let j = 0; j < config.brushes.length; j++) {\n      if (config.brushes[j].data !== dimension) {\n        brushesToKeep.push(config.brushes[j]);\n      }\n    }\n\n    config.brushes = brushesToKeep;\n    config.brushed = false;\n\n    if (pc.g() !== undefined) {\n      const nodes = selectAll('.brush').nodes();\n      for (let i = 0; i < nodes.length; i++) {\n        if (nodes[i].__data__ === dimension) {\n          // remove all dummy brushes for this axis or the real brush\n          select(select(nodes[i]).nodes()[0].parentNode)\n            .selectAll('.dummy')\n            .remove();\n          config.dimensions[dimension].brush.move(select(nodes[i], null));\n        }\n      }\n    }\n\n    return this;\n  };\n\nexport default brushReset;\n","// a better \"typeof\" from this post: http://stackoverflow.com/questions/7390426/better-way-to-get-type-of-a-javascript-variable\nconst toType = v => {\n  return {}.toString\n    .call(v)\n    .match(/\\s([a-zA-Z]+)/)[1]\n    .toLowerCase();\n};\n\nexport default toType;\n","import { keys } from 'd3-collection';\n\n// this descriptive text should live with other introspective methods\nconst toString = config => () => {\n  return (\n    'Parallel Coordinates: ' +\n    keys(config.dimensions).length +\n    ' dimensions (' +\n    keys(config.data[0]).length +\n    ' total) , ' +\n    config.data.length +\n    ' rows'\n  );\n};\n\nexport default toString;\n","// pairs of adjacent dimensions\nconst adjacentPairs = arr => {\n  let ret = [];\n  for (let i = 0; i < arr.length - 1; i++) {\n    ret.push([arr[i], arr[i + 1]]);\n  }\n  return ret;\n};\n\nexport default adjacentPairs;\n","import { selectAll } from 'd3-selection';\n\nimport colorPath from '../util/colorPath';\nimport functor from '../util/functor';\n\nconst pathHighlight = (config, ctx, position) => (d, i) => {\n  ctx.highlight.strokeStyle = functor(config.color)(d, i);\n  return colorPath(config, position, d, ctx.highlight);\n};\n\n// highlight an array of data\nconst highlight = (config, pc, canvas, events, ctx, position) =>\n  function(data = null) {\n    if (data === null) {\n      return config.highlighted;\n    }\n\n    config.highlighted = data;\n    pc.clear('highlight');\n    selectAll([canvas.foreground, canvas.brushed]).classed('faded', true);\n    data.forEach(pathHighlight(config, ctx, position));\n    events.call('highlight', this, data);\n    return this;\n  };\n\nexport default highlight;\n","import { selectAll } from 'd3-selection';\n\n// clear highlighting\nconst unhighlight = (config, pc, canvas) =>\n  function() {\n    config.highlighted = [];\n    pc.clear('highlight');\n    selectAll([canvas.foreground, canvas.brushed]).classed('faded', false);\n    return this;\n  };\n\nexport default unhighlight;\n","const removeAxes = pc =>\n  function() {\n    pc._g.remove();\n\n    delete pc._g;\n    return this;\n  };\n\nexport default removeAxes;\n","import { keys } from 'd3-collection';\n\n/**\n * Renders the polylines.\n * If no dimensions have been specified, it will attempt to detect quantitative\n * dimensions based on the first data entry. If scales haven't been set, it will\n * autoscale based on the extent for each dimension.\n *\n * @param config\n * @param pc\n * @param events\n * @returns {Function}\n */\nconst render = (config, pc, events) =>\n  function() {\n    // try to autodetect dimensions and create scales\n    if (!keys(config.dimensions).length) {\n      pc.detectDimensions();\n    }\n    pc.autoscale();\n\n    pc.render[config.mode]();\n\n    events.call('render', this);\n    return this;\n  };\n\nexport default render;\n","import colorPath from '../util/colorPath';\nimport functor from '../util/functor';\n\nconst pathForeground = (config, ctx, position) => (d, i) => {\n  ctx.foreground.strokeStyle = functor(config.color)(d, i);\n  return colorPath(config, position, d, ctx.foreground);\n};\n\nconst renderDefault = (config, pc, ctx, position) => () => {\n  pc.clear('foreground');\n  pc.clear('highlight');\n\n  pc.renderBrushed.default();\n\n  config.data.forEach(pathForeground(config, ctx, position));\n};\n\nconst renderDefaultQueue = (config, pc, foregroundQueue) => () => {\n  pc.renderBrushed.queue();\n  foregroundQueue(config.data);\n};\n\nexport default renderDefault;\n\nexport { pathForeground, renderDefaultQueue };\n","import toType from './toType';\n\n// try to coerce to number before returning type\nconst toTypeCoerceNumbers = v =>\n  parseFloat(v) == v && v != null ? 'number' : toType(v);\n\nexport default toTypeCoerceNumbers;\n","import { keys } from 'd3-collection';\n\nimport toTypeCoerceNumbers from './toTypeCoerceNumbers';\n\n// attempt to determine types of each dimension based on first row of data\nconst detectDimensionTypes = data =>\n  keys(data[0]).reduce((acc, cur) => {\n    const key = isNaN(Number(cur)) ? cur : parseInt(cur);\n    acc[key] = toTypeCoerceNumbers(data[0][cur]);\n\n    return acc;\n  }, {});\n\nexport default detectDimensionTypes;\n","import { ascending } from 'd3-array';\nimport { keys } from 'd3-collection';\n\nconst getOrderedDimensionKeys = config => () =>\n  keys(config.dimensions).sort((x, y) =>\n    ascending(config.dimensions[x].index, config.dimensions[y].index)\n  );\n\nexport default getOrderedDimensionKeys;\n","const interactive = flags =>\n  function() {\n    flags.interactive = true;\n    return this;\n  };\n\nexport default interactive;\n","const shadows = (flags, pc) =>\n  function() {\n    flags.shadows = true;\n    pc.alphaOnBrushed(0.1);\n    pc.render();\n    return this;\n  };\n\nexport default shadows;\n","import { select } from 'd3-selection';\n\n/**\n * Setup a new parallel coordinates chart.\n *\n * @param config\n * @param canvas\n * @param ctx\n * @returns {pc} a parcoords closure\n */\nconst init = (config, canvas, ctx) => {\n  /**\n   * Create the chart within a container. The selector can also be a d3 selection.\n   *\n   * @param selection a d3 selection\n   * @returns {pc} instance for chained api\n   */\n  const pc = function(selection) {\n    selection = pc.selection = select(selection);\n\n    config.width = selection.node().clientWidth;\n    config.height = selection.node().clientHeight;\n    // canvas data layers\n    ['marks', 'foreground', 'brushed', 'highlight'].forEach(layer => {\n      canvas[layer] = selection\n        .append('canvas')\n        .attr('class', layer)\n        .node();\n      ctx[layer] = canvas[layer].getContext('2d');\n    });\n\n    // svg tick and brush layers\n    pc.svg = selection\n      .append('svg')\n      .attr('width', config.width)\n      .attr('height', config.height)\n      .style('font', '14px sans-serif')\n      .style('position', 'absolute')\n\n      .append('svg:g')\n      .attr(\n        'transform',\n        'translate(' + config.margin.left + ',' + config.margin.top + ')'\n      );\n    // for chained api\n    return pc;\n  };\n\n  // for partial-application style programming\n  return pc;\n};\n\nexport default init;\n","const flip = config =>\n  function(d) {\n    //__.dimensions[d].yscale.domain().reverse();                               // does not work\n    config.dimensions[d].yscale.domain(\n      config.dimensions[d].yscale.domain().reverse()\n    ); // works\n\n    return this;\n  };\n\nexport default flip;\n","const detectDimensions = pc =>\n  function() {\n    pc.dimensions(pc.applyDimensionDefaults());\n    return this;\n  };\n\nexport default detectDimensions;\n","const scale = config =>\n  function(d, domain) {\n    config.dimensions[d].yscale.domain(domain);\n\n    return this;\n  };\n\nexport default scale;\n","const DefaultConfig = {\n  data: [],\n  highlighted: [],\n  dimensions: {},\n  dimensionTitleRotation: 0,\n  brushes: [],\n  brushed: false,\n  brushedColor: null,\n  alphaOnBrushed: 0.0,\n  mode: 'default',\n  rate: 20,\n  width: 600,\n  height: 300,\n  margin: { top: 24, right: 20, bottom: 12, left: 20 },\n  nullValueSeparator: 'undefined', // set to \"top\" or \"bottom\"\n  nullValueSeparatorPadding: { top: 8, right: 0, bottom: 8, left: 0 },\n  color: '#069',\n  composite: 'source-over',\n  alpha: 0.7,\n  bundlingStrength: 0.5,\n  bundleDimension: null,\n  smoothness: 0.0,\n  showControlPoints: false,\n  hideAxis: [],\n  flipAxes: [],\n  animationTime: 1100, // How long it takes to flip the axis when you double click\n  rotateLabels: false,\n};\n\nexport default DefaultConfig;\n","import { entries, keys } from 'd3-collection';\nimport { axisLeft } from 'd3-axis';\nimport { dispatch } from 'd3-dispatch';\nimport { scalePoint } from 'd3-scale';\n\nimport DefaultConfig from './defaultConfig';\n\nconst initState = userConfig => {\n  const config = Object.assign({}, DefaultConfig, userConfig);\n\n  if (userConfig && userConfig.dimensionTitles) {\n    console.warn(\n      'dimensionTitles passed in userConfig is deprecated. Add title to dimension object.'\n    );\n    entries(userConfig.dimensionTitles).forEach(d => {\n      if (config.dimensions[d.key]) {\n        config.dimensions[d.key].title = config.dimensions[d.key].title\n          ? config.dimensions[d.key].title\n          : d.value;\n      } else {\n        config.dimensions[d.key] = {\n          title: d.value,\n        };\n      }\n    });\n  }\n\n  const eventTypes = [\n    'render',\n    'resize',\n    'highlight',\n    'brush',\n    'brushend',\n    'brushstart',\n    'axesreorder',\n  ].concat(keys(config));\n\n  const events = dispatch.apply(this, eventTypes),\n    flags = {\n      brushable: false,\n      reorderable: false,\n      axes: false,\n      interactive: false,\n      debug: false,\n    },\n    xscale = scalePoint(),\n    dragging = {},\n    axis = axisLeft().ticks(5),\n    ctx = {},\n    canvas = {};\n\n  const brush = {\n    modes: {\n      None: {\n        install: function(pc) {}, // Nothing to be done.\n        uninstall: function(pc) {}, // Nothing to be done.\n        selected: function() {\n          return [];\n        }, // Nothing to return\n        brushState: function() {\n          return {};\n        },\n      },\n    },\n    mode: 'None',\n    predicate: 'AND',\n    currentMode: function() {\n      return this.modes[this.mode];\n    },\n  };\n\n  return {\n    config,\n    events,\n    eventTypes,\n    flags,\n    xscale,\n    dragging,\n    axis,\n    ctx,\n    canvas,\n    brush,\n  };\n};\n\nexport default initState;\n","import { keys, map } from 'd3-collection';\n\nconst computeClusterCentroids = (config, d) => {\n  const clusterCentroids = map();\n  const clusterCounts = map();\n  // determine clusterCounts\n  config.data.forEach(function(row) {\n    let scaled = config.dimensions[d].yscale(row[d]);\n    if (!clusterCounts.has(scaled)) {\n      clusterCounts.set(scaled, 0);\n    }\n    let count = clusterCounts.get(scaled);\n    clusterCounts.set(scaled, count + 1);\n  });\n\n  config.data.forEach(function(row) {\n    keys(config.dimensions).map(p => {\n      let scaled = config.dimensions[d].yscale(row[d]);\n      if (!clusterCentroids.has(scaled)) {\n        let _map = map();\n        clusterCentroids.set(scaled, _map);\n      }\n      if (!clusterCentroids.get(scaled).has(p)) {\n        clusterCentroids.get(scaled).set(p, 0);\n      }\n      let value = clusterCentroids.get(scaled).get(p);\n      value += config.dimensions[p].yscale(row[p]) / clusterCounts.get(scaled);\n      clusterCentroids.get(scaled).set(p, value);\n    });\n  });\n\n  return clusterCentroids;\n};\n\nexport default computeClusterCentroids;\n","// side effects for setters\nimport { keys } from 'd3-collection';\nimport { dispatch } from 'd3-dispatch';\nimport computeClusterCentroids from '../util/computeClusterCentroids';\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\n\nconst without = (arr, items) => {\n  items.forEach(el => {\n    delete arr[el];\n  });\n  return arr;\n};\n\nconst sideEffects = (\n  config,\n  ctx,\n  pc,\n  xscale,\n  flags,\n  brushedQueue,\n  foregroundQueue\n) =>\n  dispatch\n    .apply(this, keys(config))\n    .on('composite', d => {\n      ctx.foreground.globalCompositeOperation = d.value;\n      ctx.brushed.globalCompositeOperation = d.value;\n    })\n    .on('alpha', d => {\n      ctx.foreground.globalAlpha = d.value;\n      ctx.brushed.globalAlpha = d.value;\n    })\n    .on('brushedColor', d => {\n      ctx.brushed.strokeStyle = d.value;\n    })\n    .on('width', d => pc.resize())\n    .on('height', d => pc.resize())\n    .on('margin', d => pc.resize())\n    .on('rate', d => {\n      brushedQueue.rate(d.value);\n      foregroundQueue.rate(d.value);\n    })\n    .on('dimensions', d => {\n      config.dimensions = pc.applyDimensionDefaults(keys(d.value));\n      xscale.domain(pc.getOrderedDimensionKeys());\n      pc.sortDimensions();\n      if (flags.interactive) {\n        pc.render().updateAxes();\n      }\n    })\n    .on('bundleDimension', d => {\n      if (!keys(config.dimensions).length) pc.detectDimensions();\n      pc.autoscale();\n      if (typeof d.value === 'number') {\n        if (d.value < keys(config.dimensions).length) {\n          config.bundleDimension = config.dimensions[d.value];\n        } else if (d.value < config.hideAxis.length) {\n          config.bundleDimension = config.hideAxis[d.value];\n        }\n      } else {\n        config.bundleDimension = d.value;\n      }\n\n      config.clusterCentroids = computeClusterCentroids(\n        config,\n        config.bundleDimension\n      );\n      if (flags.interactive) {\n        pc.render();\n      }\n    })\n    .on('hideAxis', d => {\n      pc.dimensions(pc.applyDimensionDefaults());\n      pc.dimensions(without(config.dimensions, d.value));\n    })\n    .on('flipAxes', d => {\n      if (d.value && d.value.length) {\n        d.value.forEach(function(axis) {\n          flipAxisAndUpdatePCP(config, pc, axis);\n        });\n        pc.updateAxes(0);\n      }\n    });\n\nexport default sideEffects;\n","import { keys } from 'd3-collection';\n\nconst getset = (obj, state, events, side_effects, pc) => {\n  keys(state).forEach(function(key) {\n    obj[key] = function(x) {\n      if (!arguments.length) {\n        return state[key];\n      }\n      if (\n        key === 'dimensions' &&\n        Object.prototype.toString.call(x) === '[object Array]'\n      ) {\n        console.warn('pc.dimensions([]) is deprecated, use pc.dimensions({})');\n        x = obj.applyDimensionDefaults(x);\n      }\n      let old = state[key];\n      state[key] = x;\n      side_effects.call(key, obj, { value: x, previous: old });\n      events.call(key, obj, { value: x, previous: old });\n      return obj;\n    };\n  });\n};\n\nexport default getset;\n","// side effects for setters\nimport sideEffects from './state/sideEffects';\nimport getset from './util/getset';\n\nconst d3_rebind = (target, source, method) =>\n  function() {\n    const value = method.apply(source, arguments);\n    return value === source ? target : value;\n  };\n\nconst _rebind = (target, source, method) => {\n  target[method] = d3_rebind(target, source, source[method]);\n  return target;\n};\n\nconst bindEvents = (\n  __,\n  ctx,\n  pc,\n  xscale,\n  flags,\n  brushedQueue,\n  foregroundQueue,\n  events,\n  axis\n) => {\n  const side_effects = sideEffects(\n    __,\n    ctx,\n    pc,\n    xscale,\n    flags,\n    brushedQueue,\n    foregroundQueue\n  );\n\n  // create getter/setters\n  getset(pc, __, events, side_effects, pc);\n\n  // expose events\n  // getter/setter with event firing\n  _rebind(pc, events, 'on');\n\n  _rebind(\n    pc,\n    axis,\n    'ticks',\n    'orient',\n    'tickValues',\n    'tickSubdivide',\n    'tickSize',\n    'tickPadding',\n    'tickFormat'\n  );\n};\n\nexport default bindEvents;\n","// misc\nimport renderQueue from './util/renderQueue';\nimport w from './util/width';\n\n// brush\nimport install1DAxes from './brush/1d';\nimport install2DStrums from './brush/strums';\nimport installAngularBrush from './brush/angular';\n\n// api\nimport intersection from './api/intersection';\nimport mergeParcoords from './api/mergeParcoords';\nimport selected from './api/selected';\nimport brushMode from './api/brushMode';\nimport updateAxes from './api/updateAxes';\nimport autoscale from './api/autoscale';\nimport brushable from './api/brushable';\nimport commonScale from './api/commonScale';\nimport computeRealCentroids from './api/computeRealCentroids';\nimport applyDimensionDefaults from './api/applyDimensionDefaults';\nimport createAxes from './api/createAxes';\nimport axisDots from './api/axisDots';\nimport applyAxisConfig from './api/applyAxisConfig';\nimport reorderable from './api/reorderable';\nimport resize from './api/resize';\nimport reorder from './api/reorder';\nimport sortDimensions from './api/sortDimensions';\nimport sortDimensionsByRowData from './api/sortDimensionsByRowData';\nimport clear from './api/clear';\nimport {\n  pathBrushed,\n  renderBrushed,\n  renderBrushedDefault,\n  renderBrushedQueue,\n} from './api/renderBrushed';\nimport brushReset from './api/brushReset';\nimport toType from './api/toType';\nimport toString from './api/toString';\nimport adjacentPairs from './api/adjacentPairs';\nimport highlight from './api/highlight';\nimport unhighlight from './api/unhighlight';\nimport removeAxes from './api/removeAxes';\nimport render from './api/render';\nimport renderDefault, {\n  pathForeground,\n  renderDefaultQueue,\n} from './api/renderDefault';\nimport toTypeCoerceNumbers from './api/toTypeCoerceNumbers';\nimport detectDimensionTypes from './api/detectDimensionTypes';\nimport getOrderedDimensionKeys from './api/getOrderedDimensionKeys';\nimport interactive from './api/interactive';\nimport shadows from './api/shadows';\nimport init from './api/init';\nimport flip from './api/flip';\nimport detectDimensions from './api/detectDimensions';\nimport scale from './api/scale';\n\nimport { version } from '../package.json';\nimport initState from './state';\nimport bindEvents from './bindEvents';\n\n//css\nimport './parallel-coordinates.css';\n\nconst ParCoords = userConfig => {\n  const state = initState(userConfig);\n  const {\n    config,\n    events,\n    flags,\n    xscale,\n    dragging,\n    axis,\n    ctx,\n    canvas,\n    brush,\n  } = state;\n\n  const pc = init(config, canvas, ctx);\n\n  const position = d => {\n    if (xscale.range().length === 0) {\n      xscale.range([0, w(config)], 1);\n    }\n    return dragging[d] == null ? xscale(d) : dragging[d];\n  };\n\n  const brushedQueue = renderQueue(pathBrushed(config, ctx, position))\n    .rate(50)\n    .clear(() => pc.clear('brushed'));\n\n  const foregroundQueue = renderQueue(pathForeground(config, ctx, position))\n    .rate(50)\n    .clear(function() {\n      pc.clear('foreground');\n      pc.clear('highlight');\n    });\n\n  bindEvents(\n    config,\n    ctx,\n    pc,\n    xscale,\n    flags,\n    brushedQueue,\n    foregroundQueue,\n    events,\n    axis\n  );\n\n  // expose the state of the chart\n  pc.state = config;\n  pc.flags = flags;\n\n  pc.autoscale = autoscale(config, pc, xscale, ctx);\n  pc.scale = scale(config);\n  pc.flip = flip(config);\n  pc.commonScale = commonScale(config, pc);\n  pc.detectDimensions = detectDimensions(pc);\n  // attempt to determine types of each dimension based on first row of data\n  pc.detectDimensionTypes = detectDimensionTypes;\n  pc.applyDimensionDefaults = applyDimensionDefaults(config, pc);\n  pc.getOrderedDimensionKeys = getOrderedDimensionKeys(config);\n\n  //Renders the polylines.\n  pc.render = render(config, pc, events);\n  pc.renderBrushed = renderBrushed(config, pc, events);\n  pc.render.default = renderDefault(config, pc, ctx, position);\n  pc.render.queue = renderDefaultQueue(config, pc, foregroundQueue);\n  pc.renderBrushed.default = renderBrushedDefault(\n    config,\n    ctx,\n    position,\n    pc,\n    brush\n  );\n  pc.renderBrushed.queue = renderBrushedQueue(config, brush, brushedQueue);\n\n  pc.compute_real_centroids = computeRealCentroids(config.dimensions, position);\n  pc.shadows = shadows(flags, pc);\n  pc.axisDots = axisDots(config, pc, position);\n  pc.clear = clear(config, pc, ctx, brush);\n  pc.createAxes = createAxes(config, pc, xscale, flags, axis);\n  pc.removeAxes = removeAxes(pc);\n  pc.updateAxes = updateAxes(config, pc, position, axis, flags);\n  pc.applyAxisConfig = applyAxisConfig;\n  pc.brushable = brushable(config, pc, flags);\n  pc.brushReset = brushReset(config);\n  pc.selected = selected(config);\n  pc.reorderable = reorderable(config, pc, xscale, position, dragging, flags);\n\n  // Reorder dimensions, such that the highest value (visually) is on the left and\n  // the lowest on the right. Visual values are determined by the data values in\n  // the given row.\n  pc.reorder = reorder(config, pc, xscale);\n  pc.sortDimensionsByRowData = sortDimensionsByRowData(config);\n  pc.sortDimensions = sortDimensions(config, position);\n\n  // pairs of adjacent dimensions\n  pc.adjacent_pairs = adjacentPairs;\n  pc.interactive = interactive(flags);\n\n  // expose internal state\n  pc.xscale = xscale;\n  pc.ctx = ctx;\n  pc.canvas = canvas;\n  pc.g = () => pc._g;\n\n  // rescale for height, width and margins\n  // TODO currently assumes chart is brushable, and destroys old brushes\n  pc.resize = resize(config, pc, flags, events);\n\n  // highlight an array of data\n  pc.highlight = highlight(config, pc, canvas, events, ctx, position);\n  // clear highlighting\n  pc.unhighlight = unhighlight(config, pc, canvas);\n\n  // calculate 2d intersection of line a->b with line c->d\n  // points are objects with x and y properties\n  pc.intersection = intersection;\n\n  // Merges the canvases and SVG elements into one canvas element which is then passed into the callback\n  // (so you can choose to save it to disk, etc.)\n  pc.mergeParcoords = mergeParcoords(pc);\n  pc.brushModes = () => Object.getOwnPropertyNames(brush.modes);\n  pc.brushMode = brushMode(brush, config, pc);\n\n  // install brushes\n  install1DAxes(brush, config, pc, events);\n  install2DStrums(brush, config, pc, events, xscale);\n  installAngularBrush(brush, config, pc, events, xscale);\n\n  pc.version = version;\n  // this descriptive text should live with other introspective methods\n  pc.toString = toString(config);\n  pc.toType = toType;\n  // try to coerce to number before returning type\n  pc.toTypeCoerceNumbers = toTypeCoerceNumbers;\n\n  return pc;\n};\n\nexport default ParCoords;\n"],"names":["renderQueue","func","_queue","_rate","_invalidate","_clear","rq","data","render","valid","invalidate","doFrame","chunk","splice","map","requestAnimationFrame","slice","add","concat","rate","value","arguments","length","remaining","clear","w","config","width","margin","right","left","brushExtents","state","pc","brushes","extents","keys","dimensions","reduce","acc","cur","brush","undefined","brushSelection","brushNodes","d","extent","brushSelections","g","selectAll","select","forEach","transition","duration","call","event","renderBrushed","brushReset","dimension","brushed","each","move","selected","brushGroup","is_brushed","p","actives","filter","_brushRange","yscale","invert","within","date","bandwidth","number","string","predicate","every","type","some","Error","brushPredicate","brushUpdated","events","newSelection","brushFor","axis","_selector","brushRangeMax","range","_brush","brushY","on","sourceEvent","stopPropagation","node","install","createAxes","append","attr","style","uninstall","remove","BrushState","install1DAxes","Object","assign","modes","brushState","selection","strumRect","containmentTest","strum","p1","minX","p2","m1","b1","m2","b2","x","y","y1","y2","Math","min","max","crossesStrum","id","strums","test","d1","dims","d2","point","ids","getOwnPropertyNames","isNaN","crossTest","removeStrum","active","svg","i","onDragEnd","drawStrum","activePoint","_svg","points","_line","circles","_drag","drag","enter","ev","maxX","minY","maxY","onDrag","top","h","height","bottom","dimensionsForPoint","xscale","dim","getOrderedDimensionKeys","indexOf","onDragStart","mouse","consecutive","first","second","insert","install2DStrums","hypothenuse","a","b","sqrt","signedAngle","angle","PI","startAngle","arc","endAngle","tmp","arcs","c","asin","outerRadius","p3","_path","d3Arc","innerRadius","sAngle","uAngle","installAngularBrush","intersection","mergeParcoords","devicePixelRatio","window","mergedCanvas","document","createElement","canvas","foreground","clientWidth","clientHeight","context","getContext","fillStyle","fillRect","key","drawImage","DOMURL","URL","webkitURL","serializer","XMLSerializer","svgStr","serializeToString","src","btoa","img","Image","onload","callback","ranges","nodes","k","push","__data__","values","ranger","domain","includes","flipAxes","unshift","ii","dimRange","dimDomain","j","category","categoryIndex","categoryRangeValue","multiBrushData","idx","filtered","z","String","toUpperCase","currentMode","brushMode","mode","brushModes","dimensionLabels","title","flipAxisAndUpdatePCP","flip","parentElement","animationTime","scale","rotateLabels","delta","deltaY","dimensionTitleRotation","preventDefault","updateAxes","position","flags","g_data","axisElement","applyAxisConfig","transform","class","text","exit","brushable","reorderable","getRange","nullValueSeparator","nullValueSeparatorPadding","autoscale","ctx","defaultScales","_extent","getTime","scalePoint","tempDate","val","scaleTime","scaleLinear","counts","sort","tempArr","pop","categoricalRange","addBy","scaleOrdinal","strokeStyle","color","lineWidth","globalCompositeOperation","composite","globalAlpha","alpha","brushedColor","highlight","ctrlKey","html","outerHTML","replace","dat","parentNode","commonScale","global","t","detectDimensions","scales","bundleDimension","computeRealCentroids","row","applyDimensionDefaults","types","detectDimensionTypes","orient","ticks","innerTickSize","outerTickSize","tickPadding","index","removeAxes","_g","axes","axisDots","r","_r","marks","pow","entries","beginPath","stroke","fill","axisCfg","axisLeft","axisRight","axisTop","axisBottom","tickValues","tickSizeInner","tickSizeOuter","tickFormat","dragging","__origin__","__","dx","sortDimensions","resize","reorder","firstDim","sortDimensionsByRowData","rowdata","reordered","highlighted","unhighlight","copy","positionSortedKeys","pixelDifference","localeCompare","isBrushed","object","hasOwnProperty","layer","clearRect","alphaOnBrushed","computeCentroids","centroids","cols","$V","cx","cy","leftCentroid","clusterCentroids","get","rightCentroid","centroid","bundlingStrength","computeControlPoints","smoothness","cps","e","col","mid","diff","subtract","singleCurve","moveTo","showControlPoints","bezierCurveTo","getNullPosition","console","log","singlePath","lineTo","colorPath","_functor","v","pathBrushed","functor","renderBrushedDefault","renderBrushedQueue","brushedQueue","brushesToKeep","toType","toString","match","toLowerCase","adjacentPairs","ret","arr","pathHighlight","classed","pathForeground","renderDefault","default","renderDefaultQueue","foregroundQueue","queue","toTypeCoerceNumbers","parseFloat","Number","parseInt","ascending","interactive","shadows","init","reverse","DefaultConfig","hideAxis","initState","userConfig","dimensionTitles","warn","eventTypes","dispatch","apply","debug","None","computeClusterCentroids","clusterCounts","scaled","has","set","count","_map","without","items","el","sideEffects","getset","obj","side_effects","prototype","old","previous","d3_rebind","target","source","method","_rebind","bindEvents","ParCoords","compute_real_centroids","adjacent_pairs","version"],"mappings":"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"}