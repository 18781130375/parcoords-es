{"version":3,"file":"parcoords.mjs","sources":["../src/util/renderQueue.js","../src/util/width.js","../src/brush/1d/brushExtents.js","../src/brush/1d/brushReset.js","../src/brush/1d/selected.js","../src/brush/1d/brushFor.js","../src/brush/1d/install.js","../src/brush/1d/uninstall.js","../src/brush/1d/index.js","../src/brush/1d-multi/drawBrushes.js","../src/brush/1d-multi/selected.js","../src/brush/1d-multi/newBrush.js","../src/brush/1d-multi/brushExtents.js","../src/brush/1d-multi/brushReset.js","../src/brush/1d-multi/brushFor.js","../src/brush/1d-multi/install.js","../src/brush/1d-multi/uninstall.js","../src/brush/1d-multi/index.js","../src/brush/strums/uninstall.js","../src/brush/strums/selected.js","../src/brush/strums/removeStrum.js","../src/brush/strums/onDragEnd.js","../src/brush/strums/onDrag.js","../src/util/height.js","../src/brush/dimensionsForPoint.js","../src/brush/strums/onDragStart.js","../src/brush/strums/brushReset.js","../src/brush/consecutive.js","../src/brush/strums/install.js","../src/brush/strums/index.js","../src/brush/angular/uninstall.js","../src/brush/angular/util/hypothenuse.js","../src/brush/angular/selected.js","../src/brush/angular/removeStrum.js","../src/brush/angular/onDragEnd.js","../src/brush/angular/onDrag.js","../src/brush/angular/onDragStart.js","../src/brush/angular/brushReset.js","../src/brush/angular/install.js","../src/brush/angular/index.js","../src/api/intersection.js","../src/api/mergeParcoords.js","../src/api/selected.js","../src/api/brushMode.js","../src/util/dimensionLabels.js","../src/util/flipAxisAndUpdatePCP.js","../src/util/rotateLabels.js","../src/api/updateAxes.js","../src/util/getRange.js","../src/api/autoscale.js","../src/api/brushable.js","../src/api/commonScale.js","../src/api/computeRealCentroids.js","../src/api/applyDimensionDefaults.js","../src/api/createAxes.js","../src/api/axisDots.js","../src/api/applyAxisConfig.js","../src/api/reorderable.js","../src/api/resize.js","../src/api/reorder.js","../src/api/sortDimensions.js","../src/api/sortDimensionsByRowData.js","../src/util/isBrushed.js","../src/api/clear.js","../src/util/computeCentroids.js","../src/util/computeControlPoints.js","../src/util/colorPath.js","../src/util/functor.js","../src/api/renderBrushed.js","../src/api/brushReset.js","../src/api/toType.js","../src/api/toString.js","../src/api/adjacentPairs.js","../src/api/highlight.js","../src/api/unhighlight.js","../src/api/removeAxes.js","../src/api/render.js","../src/api/renderDefault.js","../src/api/toTypeCoerceNumbers.js","../src/api/detectDimensionTypes.js","../src/api/getOrderedDimensionKeys.js","../src/api/interactive.js","../src/api/shadows.js","../src/api/init.js","../src/api/flip.js","../src/api/detectDimensions.js","../src/api/scale.js","../src/state/defaultConfig.js","../src/state/index.js","../src/util/computeClusterCentroids.js","../src/state/sideEffects.js","../src/util/getset.js","../src/bindEvents.js","../src/index.js"],"sourcesContent":["import 'requestanimationframe';\n\nconst renderQueue = function(func) {\n  let _queue = [], // data to be rendered\n    _rate = 1000, // number of calls per frame\n    _invalidate = function() {}, // invalidate last render queue\n    _clear = function() {}; // clearing function\n\n  let rq = function(data) {\n    if (data) rq.data(data);\n    _invalidate();\n    _clear();\n    rq.render();\n  };\n\n  rq.render = function() {\n    let valid = true;\n    _invalidate = rq.invalidate = function() {\n      valid = false;\n    };\n\n    function doFrame() {\n      if (!valid) return true;\n      let chunk = _queue.splice(0, _rate);\n      chunk.map(func);\n      requestAnimationFrame(doFrame);\n    }\n\n    doFrame();\n  };\n\n  rq.data = function(data) {\n    _invalidate();\n    _queue = data.slice(0); // creates a copy of the data\n    return rq;\n  };\n\n  rq.add = function(data) {\n    _queue = _queue.concat(data);\n  };\n\n  rq.rate = function(value) {\n    if (!arguments.length) return _rate;\n    _rate = value;\n    return rq;\n  };\n\n  rq.remaining = function() {\n    return _queue.length;\n  };\n\n  // clear the canvas\n  rq.clear = function(func) {\n    if (!arguments.length) {\n      _clear();\n      return rq;\n    }\n    _clear = func;\n    return rq;\n  };\n\n  rq.invalidate = _invalidate;\n\n  return rq;\n};\n\nexport default renderQueue;\n","const w = config => config.width - config.margin.right - config.margin.left;\n\nexport default w;\n","import { select } from 'd3-selection';\nimport { brushSelection } from 'd3-brush';\n\nconst brushExtents = (state, config, pc) => extents => {\n  const { brushes, brushNodes } = state;\n\n  if (typeof extents === 'undefined') {\n    return Object.keys(config.dimensions).reduce((acc, cur) => {\n      const brush = brushes[cur];\n      //todo: brush check\n      if (brush !== undefined && brushSelection(brushNodes[cur]) !== null) {\n        acc[cur] = brush.extent();\n      }\n\n      return acc;\n    }, {});\n  } else {\n    //first get all the brush selections\n    const brushSelections = {};\n    pc.g()\n      .selectAll('.brush')\n      .each(function(d) {\n        brushSelections[d] = select(this);\n      });\n\n    // loop over each dimension and update appropriately (if it was passed in through extents)\n    Object.keys(config.dimensions).forEach(d => {\n      if (extents[d] === undefined) {\n        return;\n      }\n\n      const brush = brushes[d];\n      if (brush !== undefined) {\n        const dim = config.dimensions[d];\n        const yExtent = extents[d].map(dim.yscale);\n\n        //update the extent\n        //sets the brushable extent to the specified array of points [[x0, y0], [x1, y1]]\n        brush.extent([[-15, yExtent[1]], [15, yExtent[0]]]);\n\n        //redraw the brush\n        //https://github.com/d3/d3-brush#brush_move\n        // For an x-brush, it must be defined as [x0, x1]; for a y-brush, it must be defined as [y0, y1].\n        brushSelections[d].call(brush).call(brush.move, yExtent.reverse());\n\n        //fire some events\n        // brush.event(brushSelections[d]);\n      }\n    });\n\n    //redraw the chart\n    pc.renderBrushed();\n\n    return pc;\n  }\n};\n\nexport default brushExtents;\n","import { select } from 'd3-selection';\n\nconst brushReset = (state, config, pc) => dimension => {\n  const { brushes } = state;\n\n  if (dimension === undefined) {\n    config.brushed = false;\n    if (pc.g() !== undefined && pc.g() !== null) {\n      pc.g()\n        .selectAll('.brush')\n        .each(function(d) {\n          select(this).call(brushes[d].move, null);\n        });\n      pc.renderBrushed();\n    }\n  } else {\n    config.brushed = false;\n    if (pc.g() !== undefined && pc.g() !== null) {\n      pc.g()\n        .selectAll('.brush')\n        .each(function(d) {\n          if (d !== dimension) return;\n          select(this).call(brushes[d].move, null);\n          brushes[d].event(select(this));\n        });\n      pc.renderBrushed();\n    }\n  }\n  return this;\n};\n\nexport default brushReset;\n","import { brushSelection } from 'd3-brush';\n//https://github.com/d3/d3-brush/issues/10\n\n// data within extents\nconst selected = (state, config, brushGroup) => () => {\n  const { brushNodes } = state;\n  const is_brushed = p =>\n    brushNodes[p] && brushSelection(brushNodes[p]) !== null;\n\n  const actives = Object.keys(config.dimensions).filter(is_brushed);\n  const extents = actives.map(p => {\n    const _brushRange = brushSelection(brushNodes[p]);\n\n    if (typeof config.dimensions[p].yscale.invert === 'function') {\n      return [\n        config.dimensions[p].yscale.invert(_brushRange[1]),\n        config.dimensions[p].yscale.invert(_brushRange[0]),\n      ];\n    } else {\n      return _brushRange;\n    }\n  });\n  // We don't want to return the full data set when there are no axes brushed.\n  // Actually, when there are no axes brushed, by definition, no items are\n  // selected. So, let's avoid the filtering and just return false.\n  //if (actives.length === 0) return false;\n\n  // Resolves broken examples for now. They expect to get the full dataset back from empty brushes\n  if (actives.length === 0) return config.data;\n\n  // test if within range\n  const within = {\n    date: (d, p, dimension) => {\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\n        // if it is ordinal\n        return (\n          extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\n          config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n        );\n      } else {\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\n      }\n    },\n    number: (d, p, dimension) => {\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\n        // if it is ordinal\n        return (\n          extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\n          config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n        );\n      } else {\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\n      }\n    },\n    string: (d, p, dimension) => {\n      return (\n        extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\n        config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n      );\n    },\n  };\n\n  return config.data.filter(d => {\n    switch (brushGroup.predicate) {\n      case 'AND':\n        return actives.every(function(p, dimension) {\n          return within[config.dimensions[p].type](d, p, dimension);\n        });\n      case 'OR':\n        return actives.some(function(p, dimension) {\n          return within[config.dimensions[p].type](d, p, dimension);\n        });\n      default:\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\n    }\n  });\n};\n\nexport default selected;\n","import { brushY } from 'd3-brush';\nimport { event } from 'd3-selection';\n\nimport selected from './selected';\n\nconst brushUpdated = (config, pc, events) => newSelection => {\n  config.brushed = newSelection;\n  events.call('brush', pc, config.brushed);\n  pc.renderBrushed();\n};\n\nconst brushFor = (state, config, pc, events, brushGroup) => (\n  axis,\n  _selector\n) => {\n  const brushRangeMax =\n    config.dimensions[axis].type === 'string'\n      ? config.dimensions[axis].yscale.range()[\n          config.dimensions[axis].yscale.range().length - 1\n        ]\n      : config.dimensions[axis].yscale.range()[0];\n\n  const _brush = brushY(_selector).extent([[-15, 0], [15, brushRangeMax]]);\n\n  _brush\n    .on('start', function() {\n      if (event.sourceEvent !== null) {\n        events.call('brushstart', pc, config.brushed);\n        if (typeof event.sourceEvent.stopPropagation === 'function') {\n          event.sourceEvent.stopPropagation();\n        }\n      }\n    })\n    .on('brush', function() {\n      brushUpdated(config, pc, events)(selected(state, config, brushGroup)());\n    })\n    .on('end', function() {\n      brushUpdated(config, pc, events)(selected(state, config, brushGroup)());\n      events.call('brushend', pc, config.brushed);\n    });\n\n  state.brushes[axis] = _brush;\n  state.brushNodes[axis] = _selector.node();\n\n  return _brush;\n};\n\nexport default brushFor;\n","import { select } from 'd3-selection';\nimport brushExtents from './brushExtents';\nimport brushReset from './brushReset';\nimport brushFor from './brushFor';\n\nconst install = (state, config, pc, events, brushGroup) => () => {\n  if (!pc.g()) {\n    pc.createAxes();\n  }\n\n  // Add and store a brush for each axis.\n  const brush = pc\n    .g()\n    .append('svg:g')\n    .attr('class', 'brush')\n    .each(function(d) {\n      select(this).call(\n        brushFor(state, config, pc, events, brushGroup)(d, select(this))\n      );\n    });\n  brush\n    .selectAll('rect')\n    .style('visibility', null)\n    .attr('x', -15)\n    .attr('width', 30);\n\n  brush.selectAll('rect.background').style('fill', 'transparent');\n\n  brush\n    .selectAll('rect.extent')\n    .style('fill', 'rgba(255,255,255,0.25)')\n    .style('stroke', 'rgba(0,0,0,0.6)');\n\n  brush.selectAll('.resize rect').style('fill', 'rgba(0,0,0,0.1)');\n\n  pc.brushExtents = brushExtents(state, config, pc);\n  pc.brushReset = brushReset(state, config, pc);\n  return pc;\n};\n\nexport default install;\n","const uninstall = (state, pc) => () => {\n  if (pc.g() !== undefined && pc.g() !== null)\n    pc.g()\n      .selectAll('.brush')\n      .remove();\n\n  state.brushes = {};\n  delete pc.brushExtents;\n  delete pc.brushReset;\n};\n\nexport default uninstall;\n","import brushExtents from './brushExtents';\nimport install from './install';\nimport selected from './selected';\nimport uninstall from './uninstall';\n\nconst install1DAxes = (brushGroup, config, pc, events) => {\n  const state = {\n    brushes: {},\n    brushNodes: {},\n  };\n\n  brushGroup.modes['1D-axes'] = {\n    install: install(state, config, pc, events, brushGroup),\n    uninstall: uninstall(state, pc),\n    selected: selected(state, config, brushGroup),\n    brushState: brushExtents(state, config, pc),\n  };\n};\n\nexport default install1DAxes;\n","import { select } from 'd3-selection';\n\nconst drawBrushes = (brushes, config, pc, axis, selector) => {\n  const brushSelection = selector.selectAll('.brush').data(brushes, d => d.id);\n\n  brushSelection\n    .enter()\n    .insert('g', '.brush')\n    .attr('class', 'brush')\n    .attr('dimension', axis)\n    .attr(\n      'id',\n      b => 'brush-' + Object.keys(config.dimensions).indexOf(axis) + '-' + b.id\n    )\n    .each(function(brushObject) {\n      brushObject.brush(select(this));\n    });\n\n  brushSelection.each(function(brushObject) {\n    select(this)\n      .attr('class', 'brush')\n      .selectAll('.overlay')\n      .style('pointer-events', function() {\n        const brush = brushObject.brush;\n        if (brushObject.id === brushes.length - 1 && brush !== undefined) {\n          return 'all';\n        } else {\n          return 'none';\n        }\n      });\n  });\n\n  brushSelection.exit().remove();\n};\n\nexport default drawBrushes;\n","import { brushSelection } from 'd3-brush';\n\n// data within extents\nconst selected = (state, config, pc, events, brushGroup) => {\n  const { brushes } = state;\n\n  const is_brushed = (p, pos) => {\n    const axisBrushes = brushes[p];\n\n    for (let i = 0; i < axisBrushes.length; i++) {\n      const brush = document.getElementById('brush-' + pos + '-' + i);\n\n      if (brushSelection(brush) !== null) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  const actives = Object.keys(config.dimensions).filter(is_brushed);\n  const extents = actives.map(p => {\n    const axisBrushes = brushes[p];\n\n    return axisBrushes\n      .map((d, i) =>\n        brushSelection(\n          document.getElementById(\n            'brush-' + Object.keys(config.dimensions).indexOf(p) + '-' + i\n          )\n        )\n      )\n      .map((d, i) => {\n        if (d === null || d === undefined) {\n          return null;\n        } else if (typeof config.dimensions[p].yscale.invert === 'function') {\n          return [\n            config.dimensions[p].yscale.invert(d[1]),\n            config.dimensions[p].yscale.invert(d[0]),\n          ];\n        } else {\n          return d;\n        }\n      });\n  });\n\n  // We don't want to return the full data set when there are no axes brushed.\n  // Actually, when there are no axes brushed, by definition, no items are\n  // selected. So, let's avoid the filtering and just return false.\n  //if (actives.length === 0) return false;\n\n  // Resolves broken examples for now. They expect to get the full dataset back from empty brushes\n  if (actives.length === 0) return config.data;\n\n  // test if within range\n  const within = {\n    date: (d, p, i) => {\n      const dimExt = extents[i];\n\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\n        // if it is ordinal\n        for (const e of dimExt) {\n          if (e === null || e === undefined) {\n            continue;\n          }\n\n          if (\n            e[0] <= config.dimensions[p].yscale(d[p]) &&\n            config.dimensions[p].yscale(d[p]) <= e[1]\n          ) {\n            return true;\n          }\n        }\n\n        return false;\n      } else {\n        for (const e of dimExt) {\n          if (e === null || e === undefined) {\n            continue;\n          }\n\n          if (e[0] <= d[p] && d[p] <= e[1]) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n    },\n    number: (d, p, i) => {\n      const dimExt = extents[i];\n\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\n        // if it is ordinal\n        for (const e of dimExt) {\n          if (e === null || e === undefined) {\n            continue;\n          }\n\n          if (\n            e[0] <= config.dimensions[p].yscale(d[p]) &&\n            config.dimensions[p].yscale(d[p]) <= e[1]\n          ) {\n            return true;\n          }\n        }\n\n        return false;\n      } else {\n        for (const e of dimExt) {\n          if (e === null || e === undefined) {\n            continue;\n          }\n\n          if (e[0] <= d[p] && d[p] <= e[1]) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n    },\n    string: (d, p, i) => {\n      const dimExt = extents[i];\n\n      for (const e of dimExt) {\n        if (e === null || e === undefined) {\n          continue;\n        }\n\n        if (\n          e[0] <= config.dimensions[p].yscale(d[p]) &&\n          config.dimensions[p].yscale(d[p]) <= e[1]\n        ) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n  };\n\n  return config.data.filter(d => {\n    switch (brushGroup.predicate) {\n      case 'AND':\n        return actives.every((p, i) =>\n          within[config.dimensions[p].type](d, p, i)\n        );\n      case 'OR':\n        return actives.some((p, i) =>\n          within[config.dimensions[p].type](d, p, i)\n        );\n      default:\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\n    }\n  });\n};\n\nexport default selected;\n","import { brushY, brushSelection } from 'd3-brush';\nimport { event, select } from 'd3-selection';\nimport drawBrushes from './drawBrushes';\nimport selected from './selected';\n\nconst brushUpdated = (config, pc, events) => newSelection => {\n  config.brushed = newSelection;\n  events.call('brush', pc, config.brushed);\n  pc.renderBrushed();\n};\n\nconst newBrush = (state, config, pc, events, brushGroup) => (\n  axis,\n  _selector\n) => {\n  const { brushes, brushNodes } = state;\n\n  const brushRangeMax =\n    config.dimensions[axis].type === 'string'\n      ? config.dimensions[axis].yscale.range()[\n          config.dimensions[axis].yscale.range().length - 1\n        ]\n      : config.dimensions[axis].yscale.range()[0];\n\n  const brush = brushY().extent([[-15, 0], [15, brushRangeMax]]);\n  const id = brushes[axis] ? brushes[axis].length : 0;\n  const node =\n    'brush-' + Object.keys(config.dimensions).indexOf(axis) + '-' + id;\n\n  if (brushes[axis]) {\n    brushes[axis].push({\n      id,\n      brush,\n      node,\n    });\n  } else {\n    brushes[axis] = [{ id, brush, node }];\n  }\n\n  if (brushNodes[axis]) {\n    brushNodes[axis].push({ id, node });\n  } else {\n    brushNodes[axis] = [{ id, node }];\n  }\n\n  brush\n    .on('start', function() {\n      if (event.sourceEvent !== null) {\n        events.call('brushstart', pc, config.brushed);\n        if (typeof event.sourceEvent.stopPropagation === 'function') {\n          event.sourceEvent.stopPropagation();\n        }\n      }\n    })\n    .on('brush', function(e) {\n      // record selections\n      brushUpdated(\n        config,\n        pc,\n        events\n      )(selected(state, config, pc, events, brushGroup));\n    })\n    .on('end', function() {\n      // Figure out if our latest brush has a selection\n      const lastBrushID = brushes[axis][brushes[axis].length - 1].id;\n      const lastBrush = document.getElementById(\n        'brush-' +\n          Object.keys(config.dimensions).indexOf(axis) +\n          '-' +\n          lastBrushID\n      );\n      const selection = brushSelection(lastBrush);\n\n      if (\n        selection !== undefined &&\n        selection !== null &&\n        selection[0] !== selection[1]\n      ) {\n        newBrush(state, config, pc, events, brushGroup)(axis, _selector);\n\n        drawBrushes(brushes[axis], config, pc, axis, _selector);\n\n        brushUpdated(config, pc, events)(\n          selected(state, config, pc, events, brushGroup)\n        );\n      } else {\n        if (\n          event.sourceEvent &&\n          event.sourceEvent.toString() === '[object MouseEvent]' &&\n          event.selection === null\n        ) {\n          pc.brushReset(axis);\n        }\n      }\n\n      events.call('brushend', pc, config.brushed);\n    });\n\n  return brush;\n};\n\nexport default newBrush;\n","import { select } from 'd3-selection';\nimport { brushSelection } from 'd3-brush';\nimport newBrush from './newBrush';\nimport drawBrushes from './drawBrushes';\n\n/**\n *\n * extents are in format of [[2,6], [3,5]]\n *\n * * @param state\n * @param config\n * @param pc\n * @returns {Function}\n */\nconst brushExtents = (state, config, pc, events, brushGroup) => extents => {\n  const { brushes } = state;\n\n  if (typeof extents === 'undefined') {\n    return Object.keys(config.dimensions).reduce((acc, cur, pos) => {\n      const axisBrushes = brushes[cur];\n\n      if (axisBrushes === undefined || axisBrushes === null) {\n        acc[cur] = [];\n      } else {\n        acc[cur] = axisBrushes.reduce((d, p, i) => {\n          const range = brushSelection(\n            document.getElementById('brush-' + pos + '-' + i)\n          );\n          if (range !== null) {\n            d = d.push(range);\n          }\n\n          return d;\n        }, []);\n      }\n\n      return acc;\n    }, {});\n  } else {\n    // //first get all the brush selections\n    // loop over each dimension and update appropriately (if it was passed in through extents)\n    Object.keys(config.dimensions).forEach((d, pos) => {\n      if (extents[d] === undefined || extents[d] === null) {\n        return;\n      }\n\n      const dim = config.dimensions[d];\n\n      const yExtents = extents[d].map(e => e.map(dim.yscale));\n\n      const _bs = yExtents.map((e, j) => {\n        const _brush = newBrush(state, config, pc, events, brushGroup)(\n          d,\n          select('#brush-group-' + pos)\n        );\n        //update the extent\n        //sets the brushable extent to the specified array of points [[x0, y0], [x1, y1]]\n        _brush.extent([[-15, e[1]], [15, e[0]]]);\n\n        return {\n          id: j,\n          brush: _brush,\n          ext: e,\n        };\n      });\n\n      brushes[d] = _bs;\n\n      drawBrushes(_bs, config, pc, d, select('#brush-group-' + pos));\n\n      //redraw the brush\n      //https://github.com/d3/d3-brush#brush_move\n      // For an x-brush, it must be defined as [x0, x1]; for a y-brush, it must be defined as [y0, y1].\n      _bs.forEach((f, k) => {\n        select('#brush-' + pos + '-' + k)\n          .call(f.brush)\n          .call(f.brush.move, f.ext.reverse());\n      });\n    });\n\n    //redraw the chart\n    pc.renderBrushed();\n\n    return pc;\n  }\n};\n\nexport default brushExtents;\n","import { select } from 'd3-selection';\nimport { brushSelection } from 'd3-brush';\n\nconst brushReset = (state, config, pc) => dimension => {\n  const { brushes } = state;\n\n  if (dimension === undefined) {\n    if (pc.g() !== undefined && pc.g() !== null) {\n      Object.keys(config.dimensions).forEach((d, pos) => {\n        const axisBrush = brushes[d];\n\n        axisBrush.forEach((e, i) => {\n          const brush = document.getElementById('brush-' + pos + '-' + i);\n          if (brushSelection(brush) !== null) {\n            pc.g()\n              .select('#brush-' + pos + '-' + i)\n              .call(e.brush.move, null);\n          }\n        });\n      });\n\n      pc.renderBrushed();\n    }\n  } else {\n    if (pc.g() !== undefined && pc.g() !== null) {\n      const axisBrush = brushes[dimension];\n      const pos = Object.keys(config.dimensions).indexOf(dimension);\n\n      axisBrush.forEach((e, i) => {\n        const brush = document.getElementById('brush-' + pos + '-' + i);\n        if (brushSelection(brush) !== null) {\n          pc.g()\n            .select('#brush-' + pos + '-' + i)\n            .call(e.brush.move, null);\n\n          if (typeof e.event === 'function') {\n            e.event(select('#brush-' + pos + '-' + i));\n          }\n        }\n      });\n\n      pc.renderBrushed();\n    }\n  }\n  return this;\n};\n\nexport default brushReset;\n","import newBrush from './newBrush';\nimport drawBrushes from './drawBrushes';\n\nconst brushFor = (state, config, pc, events, brushGroup) => (\n  axis,\n  _selector\n) => {\n  const { brushes } = state;\n  newBrush(state, config, pc, events, brushGroup)(axis, _selector);\n  drawBrushes(brushes[axis], config, pc, axis, _selector);\n};\n\nexport default brushFor;\n","import { select } from 'd3-selection';\nimport brushExtents from './brushExtents';\nimport brushReset from './brushReset';\nimport brushFor from './brushFor';\n\nconst install = (state, config, pc, events, brushGroup) => () => {\n  if (!pc.g()) {\n    pc.createAxes();\n  }\n\n  pc.g()\n    .append('svg:g')\n    .attr('id', (d, i) => 'brush-group-' + i)\n    .attr('class', 'brush-group')\n    .attr('dimension', d => d)\n    .each(function(d) {\n      brushFor(state, config, pc, events, brushGroup)(d, select(this));\n    });\n\n  pc.brushExtents = brushExtents(state, config, pc, events, brushGroup);\n  pc.brushReset = brushReset(state, config, pc);\n  return pc;\n};\n\nexport default install;\n","const uninstall = (state, pc) => () => {\n  if (pc.g() !== undefined && pc.g() !== null)\n    pc.g()\n      .selectAll('.brush-group')\n      .remove();\n\n  state.brushes = {};\n  delete pc.brushExtents;\n  delete pc.brushReset;\n};\n\nexport default uninstall;\n","import brushExtents from './brushExtents';\nimport install from './install';\nimport selected from './selected';\nimport uninstall from './uninstall';\n\nconst install1DMultiAxes = (brushGroup, config, pc, events) => {\n  const state = {\n    brushes: {},\n    brushNodes: {},\n  };\n\n  brushGroup.modes['1D-axes-multi'] = {\n    install: install(state, config, pc, events, brushGroup),\n    uninstall: uninstall(state, pc),\n    selected: selected(state, config, brushGroup),\n    brushState: brushExtents(state, config, pc),\n  };\n};\n\nexport default install1DMultiAxes;\n","const uninstall = (state, pc) => () => {\n  pc.selection\n    .select('svg')\n    .select('g#strums')\n    .remove();\n  pc.selection\n    .select('svg')\n    .select('rect#strum-events')\n    .remove();\n  pc.on('axesreorder.strums', undefined);\n  delete pc.brushReset;\n\n  state.strumRect = undefined;\n};\n\nexport default uninstall;\n","// test if point falls between lines\nconst containmentTest = (strum, width) => p => {\n  const p1 = [strum.p1[0] - strum.minX, strum.p1[1] - strum.minX],\n    p2 = [strum.p2[0] - strum.minX, strum.p2[1] - strum.minX],\n    m1 = 1 - width / p1[0],\n    b1 = p1[1] * (1 - m1),\n    m2 = 1 - width / p2[0],\n    b2 = p2[1] * (1 - m2);\n\n  const x = p[0],\n    y = p[1],\n    y1 = m1 * x + b1,\n    y2 = m2 * x + b2;\n\n  return y > Math.min(y1, y2) && y < Math.max(y1, y2);\n};\n\nconst crossesStrum = (state, config) => (d, id) => {\n  let strum = state.strums[id],\n    test = containmentTest(strum, state.strums.width(id)),\n    d1 = strum.dims.left,\n    d2 = strum.dims.right,\n    y1 = config.dimensions[d1].yscale,\n    y2 = config.dimensions[d2].yscale,\n    point = [y1(d[d1]) - strum.minX, y2(d[d2]) - strum.minX];\n  return test(point);\n};\n\nconst selected = (brushGroup, state, config) => {\n  // Get the ids of the currently active strums.\n  const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d)),\n    brushed = config.data;\n\n  if (ids.length === 0) {\n    return brushed;\n  }\n\n  const crossTest = crossesStrum(state, config);\n\n  return brushed.filter(d => {\n    switch (brushGroup.predicate) {\n      case 'AND':\n        return ids.every(id => crossTest(d, id));\n      case 'OR':\n        return ids.some(id => crossTest(d, id));\n      default:\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\n    }\n  });\n};\n\nexport default selected;\n","const removeStrum = (state, pc) => {\n  const strum = state.strums[state.strums.active],\n    svg = pc.selection.select('svg').select('g#strums');\n\n  delete state.strums[state.strums.active];\n  svg.selectAll('line#strum-' + strum.dims.i).remove();\n  svg.selectAll('circle#strum-' + strum.dims.i).remove();\n};\n\nexport default removeStrum;\n","import selected from './selected';\nimport removeStrum from './removeStrum';\n\nconst onDragEnd = (brushGroup, state, config, pc, events) => () => {\n  const strum = state.strums[state.strums.active];\n\n  // Okay, somewhat unexpected, but not totally unsurprising, a mousclick is\n  // considered a drag without move. So we have to deal with that case\n  if (strum && strum.p1[0] === strum.p2[0] && strum.p1[1] === strum.p2[1]) {\n    removeStrum(state, pc);\n  }\n\n  const brushed = selected(brushGroup, state, config);\n  state.strums.active = undefined;\n  config.brushed = brushed;\n  pc.renderBrushed();\n  events.call('brushend', pc, config.brushed);\n};\n\nexport default onDragEnd;\n","import { event, select } from 'd3-selection';\nimport { drag } from 'd3-drag';\nimport onDragEnd from './onDragEnd';\n\nconst drawStrum = (\n  brushGroup,\n  state,\n  config,\n  pc,\n  events,\n  strum,\n  activePoint\n) => {\n  let _svg = pc.selection.select('svg').select('g#strums'),\n    id = strum.dims.i,\n    points = [strum.p1, strum.p2],\n    _line = _svg.selectAll('line#strum-' + id).data([strum]),\n    circles = _svg.selectAll('circle#strum-' + id).data(points),\n    _drag = drag();\n\n  _line\n    .enter()\n    .append('line')\n    .attr('id', 'strum-' + id)\n    .attr('class', 'strum');\n\n  _line\n    .attr('x1', d => d.p1[0])\n    .attr('y1', d => d.p1[1])\n    .attr('x2', d => d.p2[0])\n    .attr('y2', d => d.p2[1])\n    .attr('stroke', 'black')\n    .attr('stroke-width', 2);\n\n  _drag\n    .on('drag', function(d, i) {\n      const ev = event;\n      i = i + 1;\n      strum['p' + i][0] = Math.min(Math.max(strum.minX + 1, ev.x), strum.maxX);\n      strum['p' + i][1] = Math.min(Math.max(strum.minY, ev.y), strum.maxY);\n      drawStrum(brushGroup, state, config, pc, events, strum, i - 1);\n    })\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\n\n  circles\n    .enter()\n    .append('circle')\n    .attr('id', 'strum-' + id)\n    .attr('class', 'strum');\n\n  circles\n    .attr('cx', d => d[0])\n    .attr('cy', d => d[1])\n    .attr('r', 5)\n    .style(\n      'opacity',\n      (d, i) => (activePoint !== undefined && i === activePoint ? 0.8 : 0)\n    )\n    .on('mouseover', function() {\n      select(this).style('opacity', 0.8);\n    })\n    .on('mouseout', function() {\n      select(this).style('opacity', 0);\n    })\n    .call(_drag);\n};\n\nconst onDrag = (brushGroup, state, config, pc, events) => () => {\n  const ev = event,\n    strum = state.strums[state.strums.active];\n\n  // Make sure that the point is within the bounds\n  strum.p2[0] = Math.min(\n    Math.max(strum.minX + 1, ev.x - config.margin.left),\n    strum.maxX\n  );\n  strum.p2[1] = Math.min(\n    Math.max(strum.minY, ev.y - config.margin.top),\n    strum.maxY\n  );\n\n  drawStrum(brushGroup, state, config, pc, events, strum, 1);\n};\n\nexport default onDrag;\n","const h = config => config.height - config.margin.top - config.margin.bottom;\n\nexport default h;\n","const dimensionsForPoint = (config, pc, xscale, p) => {\n  const dims = { i: -1, left: undefined, right: undefined };\n  Object.keys(config.dimensions).some((dim, i) => {\n    if (xscale(dim) < p[0]) {\n      dims.i = i;\n      dims.left = dim;\n      dims.right = Object.keys(config.dimensions)[\n        pc.getOrderedDimensionKeys().indexOf(dim) + 1\n      ];\n      return false;\n    }\n    return true;\n  });\n\n  if (dims.left === undefined) {\n    // Event on the left side of the first axis.\n    dims.i = 0;\n    dims.left = pc.getOrderedDimensionKeys()[0];\n    dims.right = pc.getOrderedDimensionKeys()[1];\n  } else if (dims.right === undefined) {\n    // Event on the right side of the last axis\n    dims.i = Object.keys(config.dimensions).length - 1;\n    dims.right = dims.left;\n    dims.left = pc.getOrderedDimensionKeys()[\n      Object.keys(config.dimensions).length - 2\n    ];\n  }\n\n  return dims;\n};\n\nexport default dimensionsForPoint;\n","import { mouse } from 'd3-selection';\nimport h from '../../util/height';\nimport dimensionsForPoint from '../dimensionsForPoint';\n\n// First we need to determine between which two axes the sturm was started.\n// This will determine the freedom of movement, because a strum can\n// logically only happen between two axes, so no movement outside these axes\n// should be allowed.\nconst onDragStart = (state, config, pc, xscale) => () => {\n  let p = mouse(state.strumRect.node());\n\n  p[0] = p[0] - config.margin.left;\n  p[1] = p[1] - config.margin.top;\n\n  const dims = dimensionsForPoint(config, pc, xscale, p);\n  const strum = {\n    p1: p,\n    dims: dims,\n    minX: xscale(dims.left),\n    maxX: xscale(dims.right),\n    minY: 0,\n    maxY: h(config),\n  };\n\n  // Make sure that the point is within the bounds\n  strum.p1[0] = Math.min(Math.max(strum.minX, p[0]), strum.maxX);\n  strum.p2 = strum.p1.slice();\n\n  state.strums[dims.i] = strum;\n  state.strums.active = dims.i;\n};\n\nexport default onDragStart;\n","import onDragEnd from './onDragEnd';\nimport removeStrum from './removeStrum';\n\nconst brushReset = (brushGroup, state, config, pc, events) => () => {\n  const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d));\n\n  ids.forEach(d => {\n    state.strums.active = d;\n    removeStrum(state, pc);\n  });\n  onDragEnd(brushGroup, state, config, pc, events)();\n};\n\nexport default brushReset;\n","// Checks if the first dimension is directly left of the second dimension.\nconst consecutive = dimensions => (first, second) => {\n  const keys = Object.keys(dimensions);\n\n  return keys.some(\n    (d, i) =>\n      d === first ? i + i < keys.length && dimensions[i + 1] === second : false\n  );\n};\n\nexport default consecutive;\n","import { drag } from 'd3-drag';\nimport onDragEnd from './onDragEnd';\nimport onDrag from './onDrag';\nimport onDragStart from './onDragStart';\nimport removeStrum from './removeStrum';\nimport brushReset from './brushReset';\nimport w from '../../util/width';\nimport h from '../../util/height';\nimport consecutive from '../consecutive';\n\nconst install = (brushGroup, state, config, pc, events, xscale) => () => {\n  if (pc.g() === undefined || pc.g() === null) {\n    pc.createAxes();\n  }\n\n  const _drag = drag();\n\n  // Map of current strums. Strums are stored per segment of the PC. A segment,\n  // being the area between two axes. The left most area is indexed at 0.\n  state.strums.active = undefined;\n  // Returns the width of the PC segment where currently a strum is being\n  // placed. NOTE: even though they are evenly spaced in our current\n  // implementation, we keep for when non-even spaced segments are supported as\n  // well.\n  state.strums.width = id =>\n    state.strums[id] === undefined\n      ? undefined\n      : state.strums[id].maxX - state.strums[id].minX;\n\n  pc.on('axesreorder.strums', () => {\n    const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d));\n\n    if (ids.length > 0) {\n      // We have some strums, which might need to be removed.\n      ids.forEach(d => {\n        const dims = state.strums[d].dims;\n        state.strums.active = d;\n        // If the two dimensions of the current strum are not next to each other\n        // any more, than we'll need to remove the strum. Otherwise we keep it.\n        if (!consecutive(config.dimensions)(dims.left, dims.right)) {\n          removeStrum(state, pc);\n        }\n      });\n      onDragEnd(brushGroup, state, config, pc, events)();\n    }\n  });\n\n  // Add a new svg group in which we draw the strums.\n  pc.selection\n    .select('svg')\n    .append('g')\n    .attr('id', 'strums')\n    .attr(\n      'transform',\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\n    );\n\n  // Install the required brushReset function\n  pc.brushReset = brushReset(brushGroup, state, config, pc, events);\n\n  _drag\n    .on('start', onDragStart(state, config, pc, xscale))\n    .on('drag', onDrag(brushGroup, state, config, pc, events))\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\n\n  // NOTE: The styling needs to be done here and not in the css. This is because\n  //       for 1D brushing, the canvas layers should not listen to\n  //       pointer-events._.\n  state.strumRect = pc.selection\n    .select('svg')\n    .insert('rect', 'g#strums')\n    .attr('id', 'strum-events')\n    .attr('x', config.margin.left)\n    .attr('y', config.margin.top)\n    .attr('width', w(config))\n    .attr('height', h(config) + 2)\n    .style('opacity', 0)\n    .call(_drag);\n};\n\nexport default install;\n","import uninstall from './uninstall';\nimport install from './install';\nimport selected from './selected';\n\nconst install2DStrums = (brushGroup, config, pc, events, xscale) => {\n  const state = {\n    strums: {},\n    strumRect: {},\n  };\n\n  brushGroup.modes['2D-strums'] = {\n    install: install(brushGroup, state, config, pc, events, xscale),\n    uninstall: uninstall(state, pc),\n    selected: selected(brushGroup, state, config),\n    brushState: () => state.strums,\n  };\n};\n\nexport default install2DStrums;\n","const uninstall = (state, pc) => () => {\n  pc.selection\n    .select('svg')\n    .select('g#arcs')\n    .remove();\n  pc.selection\n    .select('svg')\n    .select('rect#arc-events')\n    .remove();\n  pc.on('axesreorder.arcs', undefined);\n\n  delete pc.brushReset;\n\n  state.strumRect = undefined;\n};\n\nexport default uninstall;\n","const hypothenuse = (a, b) => Math.sqrt(a * a + b * b);\n\nexport default hypothenuse;\n","import hypothenuse from './util/hypothenuse';\n\n// [0, 2*PI] -> [-PI/2, PI/2]\nconst signedAngle = angle =>\n  angle > Math.PI ? 1.5 * Math.PI - angle : 0.5 * Math.PI - angle;\n\n/**\n * angles are stored in radians from in [0, 2*PI], where 0 in 12 o'clock.\n * However, one can only select lines from 0 to PI, so we compute the\n * 'signed' angle, where 0 is the horizontal line (3 o'clock), and +/- PI/2\n * are 12 and 6 o'clock respectively.\n */\nconst containmentTest = arc => a => {\n  let startAngle = signedAngle(arc.startAngle);\n  let endAngle = signedAngle(arc.endAngle);\n\n  if (startAngle > endAngle) {\n    const tmp = startAngle;\n    startAngle = endAngle;\n    endAngle = tmp;\n  }\n\n  // test if segment angle is contained in angle interval\n  return a >= startAngle && a <= endAngle;\n};\n\nconst crossesStrum = (state, config) => (d, id) => {\n  const arc = state.arcs[id],\n    test = containmentTest(arc),\n    d1 = arc.dims.left,\n    d2 = arc.dims.right,\n    y1 = config.dimensions[d1].yscale,\n    y2 = config.dimensions[d2].yscale,\n    a = state.arcs.width(id),\n    b = y1(d[d1]) - y2(d[d2]),\n    c = hypothenuse(a, b),\n    angle = Math.asin(b / c); // rad in [-PI/2, PI/2]\n  return test(angle);\n};\n\nconst selected = (brushGroup, state, config) => {\n  const ids = Object.getOwnPropertyNames(state.arcs).filter(d => !isNaN(d));\n  const brushed = config.data;\n\n  if (ids.length === 0) {\n    return brushed;\n  }\n\n  const crossTest = crossesStrum(state, config);\n\n  return brushed.filter(d => {\n    switch (brushGroup.predicate) {\n      case 'AND':\n        return ids.every(id => crossTest(d, id));\n      case 'OR':\n        return ids.some(id => crossTest(d, id));\n      default:\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\n    }\n  });\n};\n\nexport default selected;\n","const removeStrum = (state, pc) => {\n  const arc = state.arcs[state.arcs.active],\n    svg = pc.selection.select('svg').select('g#arcs');\n\n  delete state.arcs[state.arcs.active];\n  state.arcs.active = undefined;\n  svg.selectAll('line#arc-' + arc.dims.i).remove();\n  svg.selectAll('circle#arc-' + arc.dims.i).remove();\n  svg.selectAll('path#arc-' + arc.dims.i).remove();\n};\n\nexport default removeStrum;\n","import selected from './selected';\nimport removeStrum from './removeStrum';\n\nconst onDragEnd = (brushGroup, state, config, pc, events) => () => {\n  const arc = state.arcs[state.arcs.active];\n\n  // Okay, somewhat unexpected, but not totally unsurprising, a mousclick is\n  // considered a drag without move. So we have to deal with that case\n  if (arc && arc.p1[0] === arc.p2[0] && arc.p1[1] === arc.p2[1]) {\n    removeStrum(state, pc);\n  }\n\n  if (arc) {\n    const angle = state.arcs.startAngle(state.arcs.active);\n\n    arc.startAngle = angle;\n    arc.endAngle = angle;\n    arc.arc\n      .outerRadius(state.arcs.length(state.arcs.active))\n      .startAngle(angle)\n      .endAngle(angle);\n  }\n\n  state.arcs.active = undefined;\n  config.brushed = selected(brushGroup, state, config);\n  pc.renderBrushed();\n  events.call('brushend', pc, config.brushed);\n};\n\nexport default onDragEnd;\n","import { event, select } from 'd3-selection';\nimport { drag } from 'd3-drag';\nimport onDragEnd from './onDragEnd';\n\nconst drawStrum = (brushGroup, state, config, pc, events, arc, activePoint) => {\n  const svg = pc.selection.select('svg').select('g#arcs'),\n    id = arc.dims.i,\n    points = [arc.p2, arc.p3],\n    _line = svg\n      .selectAll('line#arc-' + id)\n      .data([{ p1: arc.p1, p2: arc.p2 }, { p1: arc.p1, p2: arc.p3 }]),\n    circles = svg.selectAll('circle#arc-' + id).data(points),\n    _drag = drag(),\n    _path = svg.selectAll('path#arc-' + id).data([arc]);\n\n  _path\n    .enter()\n    .append('path')\n    .attr('id', 'arc-' + id)\n    .attr('class', 'arc')\n    .style('fill', 'orange')\n    .style('opacity', 0.5);\n\n  _path\n    .attr('d', arc.arc)\n    .attr('transform', 'translate(' + arc.p1[0] + ',' + arc.p1[1] + ')');\n\n  _line\n    .enter()\n    .append('line')\n    .attr('id', 'arc-' + id)\n    .attr('class', 'arc');\n\n  _line\n    .attr('x1', d => d.p1[0])\n    .attr('y1', d => d.p1[1])\n    .attr('x2', d => d.p2[0])\n    .attr('y2', d => d.p2[1])\n    .attr('stroke', 'black')\n    .attr('stroke-width', 2);\n\n  _drag\n    .on('drag', (d, i) => {\n      const ev = event;\n      i = i + 2;\n\n      arc['p' + i][0] = Math.min(Math.max(arc.minX + 1, ev.x), arc.maxX);\n      arc['p' + i][1] = Math.min(Math.max(arc.minY, ev.y), arc.maxY);\n\n      const angle =\n        i === 3 ? state.arcs.startAngle(id) : state.arcs.endAngle(id);\n\n      if (\n        (arc.startAngle < Math.PI &&\n          arc.endAngle < Math.PI &&\n          angle < Math.PI) ||\n        (arc.startAngle >= Math.PI &&\n          arc.endAngle >= Math.PI &&\n          angle >= Math.PI)\n      ) {\n        if (i === 2) {\n          arc.endAngle = angle;\n          arc.arc.endAngle(angle);\n        } else if (i === 3) {\n          arc.startAngle = angle;\n          arc.arc.startAngle(angle);\n        }\n      }\n\n      drawStrum(brushGroup, state, config, pc, events, arc, i - 2);\n    })\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\n\n  circles\n    .enter()\n    .append('circle')\n    .attr('id', 'arc-' + id)\n    .attr('class', 'arc');\n\n  circles\n    .attr('cx', d => d[0])\n    .attr('cy', d => d[1])\n    .attr('r', 5)\n    .style(\n      'opacity',\n      (d, i) => (activePoint !== undefined && i === activePoint ? 0.8 : 0)\n    )\n    .on('mouseover', function() {\n      select(this).style('opacity', 0.8);\n    })\n    .on('mouseout', function() {\n      select(this).style('opacity', 0);\n    })\n    .call(_drag);\n};\n\nconst onDrag = (brushGroup, state, config, pc, events) => () => {\n  const ev = event,\n    arc = state.arcs[state.arcs.active];\n\n  // Make sure that the point is within the bounds\n  arc.p2[0] = Math.min(\n    Math.max(arc.minX + 1, ev.x - config.margin.left),\n    arc.maxX\n  );\n  arc.p2[1] = Math.min(Math.max(arc.minY, ev.y - config.margin.top), arc.maxY);\n  arc.p3 = arc.p2.slice();\n  drawStrum(brushGroup, state, config, pc, events, arc, 1);\n};\n\nexport default onDrag;\n","import { mouse } from 'd3-selection';\nimport { arc as d3Arc } from 'd3-shape';\nimport dimensionsForPoint from '../dimensionsForPoint';\nimport h from '../../util/height';\n\n// First we need to determine between which two axes the arc was started.\n// This will determine the freedom of movement, because a arc can\n// logically only happen between two axes, so no movement outside these axes\n// should be allowed.\nconst onDragStart = (state, config, pc, xscale) => () => {\n  const p = mouse(state.strumRect.node());\n\n  p[0] = p[0] - config.margin.left;\n  p[1] = p[1] - config.margin.top;\n\n  const dims = dimensionsForPoint(config, pc, xscale, p);\n  const arc = {\n    p1: p,\n    dims: dims,\n    minX: xscale(dims.left),\n    maxX: xscale(dims.right),\n    minY: 0,\n    maxY: h(config),\n    startAngle: undefined,\n    endAngle: undefined,\n    arc: d3Arc().innerRadius(0),\n  };\n\n  // Make sure that the point is within the bounds\n  arc.p1[0] = Math.min(Math.max(arc.minX, p[0]), arc.maxX);\n  arc.p2 = arc.p1.slice();\n  arc.p3 = arc.p1.slice();\n\n  state.arcs[dims.i] = arc;\n  state.arcs.active = dims.i;\n};\n\nexport default onDragStart;\n","import onDragEnd from './onDragEnd';\nimport removeStrum from './removeStrum';\n\nconst brushReset = (brushGroup, state, config, pc, events) => () => {\n  const ids = Object.getOwnPropertyNames(state.arcs).filter(d => !isNaN(d));\n\n  ids.forEach(d => {\n    state.arcs.active = d;\n    removeStrum(state, pc);\n  });\n  onDragEnd(brushGroup, state, config, pc, events)();\n};\n\nexport default brushReset;\n","import { drag } from 'd3-drag';\nimport onDragEnd from './onDragEnd';\nimport onDrag from './onDrag';\nimport onDragStart from './onDragStart';\nimport removeStrum from './removeStrum';\nimport brushReset from './brushReset';\nimport w from '../../util/width';\nimport h from '../../util/height';\n\nimport hypothenuse from './util/hypothenuse';\nimport consecutive from '../consecutive';\n\n// returns angles in [-PI/2, PI/2]\nconst angle = (p1, p2) => {\n  const a = p1[0] - p2[0],\n    b = p1[1] - p2[1],\n    c = hypothenuse(a, b);\n\n  return Math.asin(b / c);\n};\n\nconst endAngle = state => id => {\n  const arc = state.arcs[id];\n  if (arc === undefined) {\n    return undefined;\n  }\n  let sAngle = angle(arc.p1, arc.p2),\n    uAngle = -sAngle + Math.PI / 2;\n\n  if (arc.p1[0] > arc.p2[0]) {\n    uAngle = 2 * Math.PI - uAngle;\n  }\n\n  return uAngle;\n};\n\nconst startAngle = state => id => {\n  const arc = state.arcs[id];\n  if (arc === undefined) {\n    return undefined;\n  }\n\n  let sAngle = angle(arc.p1, arc.p3),\n    uAngle = -sAngle + Math.PI / 2;\n\n  if (arc.p1[0] > arc.p3[0]) {\n    uAngle = 2 * Math.PI - uAngle;\n  }\n\n  return uAngle;\n};\n\nconst length = state => id => {\n  const arc = state.arcs[id];\n\n  if (arc === undefined) {\n    return undefined;\n  }\n\n  const a = arc.p1[0] - arc.p2[0],\n    b = arc.p1[1] - arc.p2[1];\n\n  return hypothenuse(a, b);\n};\n\nconst install = (brushGroup, state, config, pc, events, xscale) => () => {\n  if (!pc.g()) {\n    pc.createAxes();\n  }\n\n  const _drag = drag();\n\n  // Map of current arcs. arcs are stored per segment of the PC. A segment,\n  // being the area between two axes. The left most area is indexed at 0.\n  state.arcs.active = undefined;\n  // Returns the width of the PC segment where currently a arc is being\n  // placed. NOTE: even though they are evenly spaced in our current\n  // implementation, we keep for when non-even spaced segments are supported as\n  // well.\n  state.arcs.width = id => {\n    const arc = state.arcs[id];\n    return arc === undefined ? undefined : arc.maxX - arc.minX;\n  };\n\n  // returns angles in [0, 2 * PI]\n  state.arcs.endAngle = endAngle(state);\n  state.arcs.startAngle = startAngle(state);\n  state.arcs.length = length(state);\n\n  pc.on('axesreorder.arcs', () => {\n    const ids = Object.getOwnPropertyNames(arcs).filter(d => !isNaN(d));\n\n    if (ids.length > 0) {\n      // We have some arcs, which might need to be removed.\n      ids.forEach(d => {\n        const dims = arcs[d].dims;\n        state.arcs.active = d;\n        // If the two dimensions of the current arc are not next to each other\n        // any more, than we'll need to remove the arc. Otherwise we keep it.\n        if (!consecutive(dims)(dims.left, dims.right)) {\n          removeStrum(state, pc);\n        }\n      });\n      onDragEnd(brushGroup, state, config, pc, events)();\n    }\n  });\n\n  // Add a new svg group in which we draw the arcs.\n  pc.selection\n    .select('svg')\n    .append('g')\n    .attr('id', 'arcs')\n    .attr(\n      'transform',\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\n    );\n\n  // Install the required brushReset function\n  pc.brushReset = brushReset(brushGroup, state, config, pc, events);\n\n  _drag\n    .on('start', onDragStart(state, config, pc, xscale))\n    .on('drag', onDrag(brushGroup, state, config, pc, events))\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\n\n  // NOTE: The styling needs to be done here and not in the css. This is because\n  //       for 1D brushing, the canvas layers should not listen to\n  //       pointer-events._.\n  state.strumRect = pc.selection\n    .select('svg')\n    .insert('rect', 'g#arcs')\n    .attr('id', 'arc-events')\n    .attr('x', config.margin.left)\n    .attr('y', config.margin.top)\n    .attr('width', w(config))\n    .attr('height', h(config) + 2)\n    .style('opacity', 0)\n    .call(_drag);\n};\n\nexport default install;\n","import uninstall from './uninstall';\nimport install from './install';\nimport selected from './selected';\n\nconst installAngularBrush = (brushGroup, config, pc, events, xscale) => {\n  const state = {\n    arcs: {},\n    strumRect: {},\n  };\n\n  brushGroup.modes['angular'] = {\n    install: install(brushGroup, state, config, pc, events, xscale),\n    uninstall: uninstall(state, pc),\n    selected: selected(brushGroup, state, config),\n    brushState: () => state.arcs,\n  };\n};\n\nexport default installAngularBrush;\n","// calculate 2d intersection of line a->b with line c->d\n// points are objects with x and y properties\nconst intersection = (a, b, c, d) => {\n  return {\n    x:\n      ((a.x * b.y - a.y * b.x) * (c.x - d.x) -\n        (a.x - b.x) * (c.x * d.y - c.y * d.x)) /\n      ((a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x)),\n    y:\n      ((a.x * b.y - a.y * b.x) * (c.y - d.y) -\n        (a.y - b.y) * (c.x * d.y - c.y * d.x)) /\n      ((a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x)),\n  };\n};\n\nexport default intersection;\n","// Merges the canvases and SVG elements into one canvas element which is then passed into the callback\n// (so you can choose to save it to disk, etc.)\nconst mergeParcoords = pc => callback => {\n  // Retina display, etc.\n  const devicePixelRatio = window.devicePixelRatio || 1;\n\n  // Create a canvas element to store the merged canvases\n  const mergedCanvas = document.createElement('canvas');\n  mergedCanvas.width = pc.canvas.foreground.clientWidth * devicePixelRatio;\n  mergedCanvas.height =\n    (pc.canvas.foreground.clientHeight + 30) * devicePixelRatio;\n  mergedCanvas.style.width = mergedCanvas.width / devicePixelRatio + 'px';\n  mergedCanvas.style.height = mergedCanvas.height / devicePixelRatio + 'px';\n\n  // Give the canvas a white background\n  const context = mergedCanvas.getContext('2d');\n  context.fillStyle = '#ffffff';\n  context.fillRect(0, 0, mergedCanvas.width, mergedCanvas.height);\n\n  // Merge all the canvases\n  for (const key in pc.canvas) {\n    context.drawImage(\n      pc.canvas[key],\n      0,\n      24 * devicePixelRatio,\n      mergedCanvas.width,\n      mergedCanvas.height - 30 * devicePixelRatio\n    );\n  }\n\n  // Add SVG elements to canvas\n  const DOMURL = window.URL || window.webkitURL || window;\n  const serializer = new XMLSerializer();\n  const svgStr = serializer.serializeToString(\n    pc.selection.select('svg').node()\n  );\n\n  // Create a Data URI.\n  const src = 'data:image/svg+xml;base64,' + window.btoa(svgStr);\n  const img = new Image();\n  img.onload = () => {\n    context.drawImage(\n      img,\n      0,\n      0,\n      img.width * devicePixelRatio,\n      img.height * devicePixelRatio\n    );\n    if (typeof callback === 'function') {\n      callback(mergedCanvas);\n    }\n  };\n  img.src = src;\n};\n\nexport default mergeParcoords;\n","import { brushSelection } from 'd3-brush';\n\nconst selected = (config, pc) => () => {\n  let actives = [];\n  let extents = [];\n  let ranges = {};\n  //get brush selections from each node, convert to actual values\n  //invert order of values in array to comply with the parcoords architecture\n  if (config.brushes.length === 0) {\n    let nodes = pc\n      .g()\n      .selectAll('.brush')\n      .nodes();\n    for (let k = 0; k < nodes.length; k++) {\n      if (brushSelection(nodes[k]) !== null) {\n        actives.push(nodes[k].__data__);\n        let values = [];\n        let ranger = brushSelection(nodes[k]);\n        if (\n          typeof config.dimensions[nodes[k].__data__].yscale.domain()[0] ===\n          'number'\n        ) {\n          for (let i = 0; i < ranger.length; i++) {\n            if (\n              actives.includes(nodes[k].__data__) &&\n              config.flipAxes.includes(nodes[k].__data__)\n            ) {\n              values.push(\n                config.dimensions[nodes[k].__data__].yscale.invert(ranger[i])\n              );\n            } else if (config.dimensions[nodes[k].__data__].yscale() !== 1) {\n              values.unshift(\n                config.dimensions[nodes[k].__data__].yscale.invert(ranger[i])\n              );\n            }\n          }\n          extents.push(values);\n          for (let ii = 0; ii < extents.length; ii++) {\n            if (extents[ii].length === 0) {\n              extents[ii] = [1, 1];\n            }\n          }\n        } else {\n          ranges[nodes[k].__data__] = brushSelection(nodes[k]);\n          let dimRange = config.dimensions[nodes[k].__data__].yscale.range();\n          let dimDomain = config.dimensions[nodes[k].__data__].yscale.domain();\n          for (let j = 0; j < dimRange.length; j++) {\n            if (\n              dimRange[j] >= ranger[0] &&\n              dimRange[j] <= ranger[1] &&\n              actives.includes(nodes[k].__data__) &&\n              config.flipAxes.includes(nodes[k].__data__)\n            ) {\n              values.push(dimRange[j]);\n            } else if (dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) {\n              values.unshift(dimRange[j]);\n            }\n          }\n          extents.push(values);\n          for (let ii = 0; ii < extents.length; ii++) {\n            if (extents[ii].length === 0) {\n              extents[ii] = [1, 1];\n            }\n          }\n        }\n      }\n    }\n    // test if within range\n    const within = {\n      date: function(d, p, dimension) {\n        let category = d[p];\n        let categoryIndex = config.dimensions[p].yscale\n          .domain()\n          .indexOf(category);\n        let categoryRangeValue = config.dimensions[p].yscale.range()[\n          categoryIndex\n        ];\n        return (\n          categoryRangeValue >= ranges[p][0] &&\n          categoryRangeValue <= ranges[p][1]\n        );\n      },\n      number: function(d, p, dimension) {\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\n      },\n      string: function(d, p, dimension) {\n        let category = d[p];\n        let categoryIndex = config.dimensions[p].yscale\n          .domain()\n          .indexOf(category);\n        let categoryRangeValue = config.dimensions[p].yscale.range()[\n          categoryIndex\n        ];\n        return (\n          categoryRangeValue >= ranges[p][0] &&\n          categoryRangeValue <= ranges[p][1]\n        );\n      },\n    };\n    return config.data.filter(d =>\n      actives.every((p, dimension) =>\n        within[config.dimensions[p].type](d, p, dimension)\n      )\n    );\n  } else {\n    // need to get data from each brush instead of each axis\n    // first must find active axes by iterating through all brushes\n    // then go through similiar process as above.\n    let multiBrushData = [];\n    for (let idx = 0; idx < config.brushes.length; idx++) {\n      let brush = config.brushes[idx];\n      let values = [];\n      let ranger = brush.extent;\n      let actives = [brush.data];\n      if (\n        typeof config.dimensions[brush.data].yscale.domain()[0] === 'number'\n      ) {\n        for (let i = 0; i < ranger.length; i++) {\n          if (\n            actives.includes(brush.data) &&\n            config.flipAxes.includes(brush.data)\n          ) {\n            values.push(config.dimensions[brush.data].yscale.invert(ranger[i]));\n          } else if (config.dimensions[brush.data].yscale() !== 1) {\n            values.unshift(\n              config.dimensions[brush.data].yscale.invert(ranger[i])\n            );\n          }\n        }\n        extents.push(values);\n        for (let ii = 0; ii < extents.length; ii++) {\n          if (extents[ii].length === 0) {\n            extents[ii] = [1, 1];\n          }\n        }\n      } else {\n        ranges[brush.data] = brush.extent;\n        let dimRange = config.dimensions[brush.data].yscale.range();\n        let dimDomain = config.dimensions[brush.data].yscale.domain();\n        for (let j = 0; j < dimRange.length; j++) {\n          if (\n            dimRange[j] >= ranger[0] &&\n            dimRange[j] <= ranger[1] &&\n            actives.includes(brush.data) &&\n            config.flipAxes.includes(brush.data)\n          ) {\n            values.push(dimRange[j]);\n          } else if (dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) {\n            values.unshift(dimRange[j]);\n          }\n        }\n        extents.push(values);\n        for (let ii = 0; ii < extents.length; ii++) {\n          if (extents[ii].length === 0) {\n            extents[ii] = [1, 1];\n          }\n        }\n      }\n      let within = {\n        date: function(d, p, dimension) {\n          let category = d[p];\n          let categoryIndex = config.dimensions[p].yscale\n            .domain()\n            .indexOf(category);\n          let categoryRangeValue = config.dimensions[p].yscale.range()[\n            categoryIndex\n          ];\n          return (\n            categoryRangeValue >= ranges[p][0] &&\n            categoryRangeValue <= ranges[p][1]\n          );\n        },\n        number: function(d, p, dimension) {\n          return extents[idx][0] <= d[p] && d[p] <= extents[idx][1];\n        },\n        string: function(d, p, dimension) {\n          let category = d[p];\n          let categoryIndex = config.dimensions[p].yscale\n            .domain()\n            .indexOf(category);\n          let categoryRangeValue = config.dimensions[p].yscale.range()[\n            categoryIndex\n          ];\n          return (\n            categoryRangeValue >= ranges[p][0] &&\n            categoryRangeValue <= ranges[p][1]\n          );\n        },\n      };\n\n      // filter data, but instead of returning it now,\n      // put it into multiBrush data which is returned after\n      // all brushes are iterated through.\n      let filtered = config.data.filter(d =>\n        actives.every((p, dimension) =>\n          within[config.dimensions[p].type](d, p, dimension)\n        )\n      );\n      for (let z = 0; z < filtered.length; z++) {\n        multiBrushData.push(filtered[z]);\n      }\n      actives = [];\n      ranges = {};\n    }\n    return multiBrushData;\n  }\n};\n\nexport default selected;\n","const brushPredicate = (brushGroup, config, pc) => (predicate = null) => {\n  if (predicate === null) {\n    return brushGroup.predicate;\n  }\n\n  predicate = String(predicate).toUpperCase();\n  if (predicate !== 'AND' && predicate !== 'OR') {\n    throw new Error('Invalid predicate ' + predicate);\n  }\n\n  brushGroup.predicate = predicate;\n  config.brushed = brushGroup.currentMode().selected();\n  pc.renderBrushed();\n  return pc;\n};\n\nconst brushMode = (brushGroup, config, pc) => (mode = null) => {\n  if (mode === null) {\n    return brushGroup.mode;\n  }\n\n  if (pc.brushModes().indexOf(mode) === -1) {\n    throw new Error('pc.brushmode: Unsupported brush mode: ' + mode);\n  }\n\n  // Make sure that we don't trigger unnecessary events by checking if the mode\n  // actually changes.\n  if (mode !== brushGroup.mode) {\n    // When changing brush modes, the first thing we need to do is clearing any\n    // brushes from the current mode, if any.\n    if (brushGroup.mode !== 'None') {\n      pc.brushReset();\n    }\n\n    // Next, we need to 'uninstall' the current brushMode.\n    brushGroup.modes[brushGroup.mode].uninstall(pc);\n    // Finally, we can install the requested one.\n    brushGroup.mode = mode;\n    brushGroup.modes[brushGroup.mode].install();\n    if (mode === 'None') {\n      delete pc.brushPredicate;\n    } else {\n      pc.brushPredicate = brushPredicate(brushGroup, config, pc);\n    }\n  }\n\n  return pc;\n};\n\nexport default brushMode;\n","/**\n * dimension display names\n *\n * @param config\n * @param d\n * @returns {*}\n */\nconst dimensionLabels = config => d =>\n  config.dimensions[d].title ? config.dimensions[d].title : d;\n\nexport default dimensionLabels;\n","import { select } from 'd3-selection';\n\nconst flipAxisAndUpdatePCP = (config, pc, axis) =>\n  function(dimension) {\n    pc.flip(dimension);\n    pc.brushReset(dimension);\n    select(this.parentElement)\n      .transition()\n      .duration(config.animationTime)\n      .call(axis.scale(config.dimensions[dimension].yscale));\n    pc.render();\n  };\n\nexport default flipAxisAndUpdatePCP;\n","import { event } from 'd3-selection';\n\nconst rotateLabels = (config, pc) => {\n  if (!config.rotateLabels) return;\n\n  let delta = event.deltaY;\n  delta = delta < 0 ? -5 : delta;\n  delta = delta > 0 ? 5 : delta;\n\n  config.dimensionTitleRotation += delta;\n  pc.svg\n    .selectAll('text.label')\n    .attr(\n      'transform',\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\n    );\n  event.preventDefault();\n};\n\nexport default rotateLabels;\n","import { select } from 'd3-selection';\n\nimport dimensionLabels from '../util/dimensionLabels';\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\nimport rotateLabels from '../util/rotateLabels';\n\nconst updateAxes = (config, pc, position, axis, flags) => (\n  animationTime = null\n) => {\n  if (animationTime === null) {\n    animationTime = config.animationTime;\n  }\n\n  const g_data = pc.svg\n    .selectAll('.dimension')\n    .data(pc.getOrderedDimensionKeys());\n  // Enter\n  g_data\n    .enter()\n    .append('svg:g')\n    .attr('class', 'dimension')\n    .attr('transform', p => 'translate(' + position(p) + ')')\n    .style('opacity', 0)\n    .append('svg:g')\n    .attr('class', 'axis')\n    .attr('transform', 'translate(0,0)')\n    .each(function(d) {\n      const axisElement = select(this).call(\n        pc.applyAxisConfig(axis, config.dimensions[d])\n      );\n\n      axisElement\n        .selectAll('path')\n        .style('fill', 'none')\n        .style('stroke', '#222')\n        .style('shape-rendering', 'crispEdges');\n\n      axisElement\n        .selectAll('line')\n        .style('fill', 'none')\n        .style('stroke', '#222')\n        .style('shape-rendering', 'crispEdges');\n    })\n    .append('svg:text')\n    .attr('text-anchor', 'middle')\n    .attr('class', 'label')\n    .attr('x', 0)\n    .attr('y', 0)\n    .attr(\n      'transform',\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\n    )\n    .text(dimensionLabels(config))\n    .on('dblclick', flipAxisAndUpdatePCP(config, pc, axis))\n    .on('wheel', rotateLabels(config, pc));\n\n  // Update\n  g_data.attr('opacity', 0);\n  g_data\n    .select('.axis')\n    .transition()\n    .duration(animationTime)\n    .each(function(d) {\n      select(this).call(pc.applyAxisConfig(axis, config.dimensions[d]));\n    });\n  g_data\n    .select('.label')\n    .transition()\n    .duration(animationTime)\n    .text(dimensionLabels(config))\n    .attr(\n      'transform',\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\n    );\n\n  // Exit\n  g_data.exit().remove();\n\n  const g = pc.svg.selectAll('.dimension');\n  g.transition()\n    .duration(animationTime)\n    .attr('transform', p => 'translate(' + position(p) + ')')\n    .style('opacity', 1);\n\n  pc.svg\n    .selectAll('.axis')\n    .transition()\n    .duration(animationTime)\n    .each(function(d) {\n      select(this).call(pc.applyAxisConfig(axis, config.dimensions[d]));\n    });\n\n  if (flags.brushable) pc.brushable();\n  if (flags.reorderable) pc.reorderable();\n  if (pc.brushMode() !== 'None') {\n    const mode = pc.brushMode();\n    pc.brushMode('None');\n    pc.brushMode(mode);\n  }\n  return this;\n};\n\nexport default updateAxes;\n","/** adjusts an axis' default range [h()+1, 1] if a NullValueSeparator is set */\nconst getRange = config => {\n  const h = config.height - config.margin.top - config.margin.bottom;\n\n  if (config.nullValueSeparator == 'bottom') {\n    return [\n      h +\n        1 -\n        config.nullValueSeparatorPadding.bottom -\n        config.nullValueSeparatorPadding.top,\n      1,\n    ];\n  } else if (config.nullValueSeparator == 'top') {\n    return [\n      h + 1,\n      1 +\n        config.nullValueSeparatorPadding.bottom +\n        config.nullValueSeparatorPadding.top,\n    ];\n  }\n  return [h + 1, 1];\n};\n\nexport default getRange;\n","import { scaleLinear, scaleOrdinal, scalePoint, scaleTime } from 'd3-scale';\nimport { extent } from 'd3-array';\n\nimport getRange from '../util/getRange';\nimport w from '../util/width';\nimport h from '../util/height';\n\nconst autoscale = (config, pc, xscale, ctx) =>\n  function() {\n    // yscale\n    const defaultScales = {\n      date: function(k) {\n        let _extent = extent(config.data, d => (d[k] ? d[k].getTime() : null));\n        // special case if single value\n        if (_extent[0] === _extent[1]) {\n          return scalePoint()\n            .domain(_extent)\n            .range(getRange(config));\n        }\n        if (config.flipAxes.includes(k)) {\n          _extent = _extent.map(val => tempDate.unshift(val));\n        }\n        return scaleTime()\n          .domain(_extent)\n          .range(getRange(config));\n      },\n      number: function(k) {\n        let _extent = extent(config.data, d => +d[k]);\n        // special case if single value\n        if (_extent[0] === _extent[1]) {\n          return scalePoint()\n            .domain(_extent)\n            .range(getRange(config));\n        }\n        if (config.flipAxes.includes(k)) {\n          _extent = _extent.map(val => tempDate.unshift(val));\n        }\n        return scaleLinear()\n          .domain(_extent)\n          .range(getRange(config));\n      },\n      string: function(k) {\n        let counts = {},\n          domain = [];\n        // Let's get the count for each value so that we can sort the domain based\n        // on the number of items for each value.\n        config.data.map(p => {\n          if (p[k] === undefined && config.nullValueSeparator !== 'undefined') {\n            return null; // null values will be drawn beyond the horizontal null value separator!\n          }\n          if (counts[p[k]] === undefined) {\n            counts[p[k]] = 1;\n          } else {\n            counts[p[k]] = counts[p[k]] + 1;\n          }\n        });\n        if (config.flipAxes.includes(k)) {\n          domain = Object.getOwnPropertyNames(counts).sort();\n        } else {\n          let tempArr = Object.getOwnPropertyNames(counts).sort();\n          for (let i = 0; i < Object.getOwnPropertyNames(counts).length; i++) {\n            domain.push(tempArr.pop());\n          }\n        }\n\n        //need to create an ordinal scale for categorical data\n        let categoricalRange = [];\n        if (domain.length === 1) {\n          //edge case\n          domain = [' ', domain[0], ' '];\n        }\n        let addBy = getRange(config)[0] / (domain.length - 1);\n        for (let j = 0; j < domain.length; j++) {\n          if (categoricalRange.length === 0) {\n            categoricalRange.push(0);\n            continue;\n          }\n          categoricalRange.push(categoricalRange[j - 1] + addBy);\n        }\n        return scaleOrdinal()\n          .domain(domain)\n          .range(categoricalRange);\n      },\n    };\n    Object.keys(config.dimensions).forEach(function(k) {\n      if (\n        config.dimensions[k].yscale === undefined ||\n        config.dimensions[k].yscale === null\n      ) {\n        config.dimensions[k].yscale = defaultScales[config.dimensions[k].type](\n          k\n        );\n      }\n    });\n\n    // xscale\n    xscale.range([0, w(config)], 1);\n    // Retina display, etc.\n    const devicePixelRatio = window.devicePixelRatio || 1;\n\n    // canvas sizes\n    pc.selection\n      .selectAll('canvas')\n      .style('margin-top', config.margin.top + 'px')\n      .style('margin-left', config.margin.left + 'px')\n      .style('width', w(config) + 2 + 'px')\n      .style('height', h(config) + 2 + 'px')\n      .attr('width', (w(config) + 2) * devicePixelRatio)\n      .attr('height', (h(config) + 2) * devicePixelRatio);\n    // default styles, needs to be set when canvas width changes\n    ctx.foreground.strokeStyle = config.color;\n    ctx.foreground.lineWidth = 1.4;\n    ctx.foreground.globalCompositeOperation = config.composite;\n    ctx.foreground.globalAlpha = config.alpha;\n    ctx.foreground.scale(devicePixelRatio, devicePixelRatio);\n    ctx.brushed.strokeStyle = config.brushedColor;\n    ctx.brushed.lineWidth = 1.4;\n    ctx.brushed.globalCompositeOperation = config.composite;\n    ctx.brushed.globalAlpha = config.alpha;\n    ctx.brushed.scale(devicePixelRatio, devicePixelRatio);\n    ctx.highlight.lineWidth = 3;\n    ctx.highlight.scale(devicePixelRatio, devicePixelRatio);\n\n    return this;\n  };\n\nexport default autoscale;\n","import { brushSelection, brushY } from 'd3-brush';\nimport { event, select } from 'd3-selection';\n\nconst brushable = (config, pc, flags) =>\n  function() {\n    if (!pc.g()) {\n      pc.createAxes();\n    }\n\n    const g = pc.g();\n\n    // Add and store a brush for each axis.\n    g.append('svg:g')\n      .attr('class', 'brush')\n      .each(function(d) {\n        if (config.dimensions[d] !== undefined) {\n          config.dimensions[d]['brush'] = brushY(select(this)).extent([\n            [-15, 0],\n            [15, config.dimensions[d].yscale.range()[0]],\n          ]);\n          select(this).call(\n            config.dimensions[d]['brush']\n              .on('start', function() {\n                if (event.sourceEvent !== null && !event.sourceEvent.ctrlKey) {\n                  pc.brushReset();\n                }\n              })\n              .on('brush', function() {\n                if (!event.sourceEvent.ctrlKey) {\n                  pc.brush();\n                }\n              })\n              .on('end', function() {\n                // save brush selection is ctrl key is held\n                // store important brush information and\n                // the html element of the selection,\n                // to make a dummy selection element\n                if (event.sourceEvent.ctrlKey) {\n                  let html = select(this)\n                    .select('.selection')\n                    .nodes()[0].outerHTML;\n                  html = html.replace(\n                    'class=\"selection\"',\n                    'class=\"selection dummy' +\n                      ' selection-' +\n                      config.brushes.length +\n                      '\"'\n                  );\n                  let dat = select(this).nodes()[0].__data__;\n                  let brush = {\n                    id: config.brushes.length,\n                    extent: brushSelection(this),\n                    html: html,\n                    data: dat,\n                  };\n                  config.brushes.push(brush);\n                  select(select(this).nodes()[0].parentNode)\n                    .select('.axis')\n                    .nodes()[0].outerHTML += html;\n                  pc.brush();\n                  config.dimensions[d].brush.move(select(this, null));\n                  select(this)\n                    .select('.selection')\n                    .attr('style', 'display:none');\n                  pc.brushable();\n                } else {\n                  pc.brush();\n                }\n              })\n          );\n          select(this).on('dblclick', function() {\n            pc.brushReset(d);\n          });\n        }\n      });\n\n    flags.brushable = true;\n    return this;\n  };\n\nexport default brushable;\n","import { extent } from 'd3-array';\n\nconst commonScale = (config, pc) =>\n  function(global, type) {\n    const t = type || 'number';\n    if (typeof global === 'undefined') {\n      global = true;\n    }\n\n    // try to autodetect dimensions and create scales\n    if (!Object.keys(config.dimensions).length) {\n      pc.detectDimensions();\n    }\n    pc.autoscale();\n\n    // scales of the same type\n    const scales = Object.keys(config.dimensions).filter(\n      p => config.dimensions[p].type == t\n    );\n\n    if (global) {\n      let _extent = extent(\n        scales\n          .map(d => config.dimensions[d].yscale.domain())\n          .reduce((cur, acc) => cur.concat(acc))\n      );\n\n      scales.forEach(d => {\n        config.dimensions[d].yscale.domain(_extent);\n      });\n    } else {\n      scales.forEach(d => {\n        config.dimensions[d].yscale.domain(extent(config.data, d => +d[k]));\n      });\n    }\n\n    // update centroids\n    if (config.bundleDimension !== null) {\n      pc.bundleDimension(config.bundleDimension);\n    }\n\n    return this;\n  };\n\nexport default commonScale;\n","const computeRealCentroids = (dimensions, position) => row =>\n  Object.keys(dimensions).map(d => {\n    const x = position(d);\n    const y = dimensions[d].yscale(row[d]);\n    return [x, y];\n  });\n\nexport default computeRealCentroids;\n","const isValid = d => d !== null && d !== undefined;\n\nconst applyDimensionDefaults = (config, pc) =>\n  function(dims) {\n    const types = pc.detectDimensionTypes(config.data);\n    dims = dims ? dims : Object.keys(types);\n\n    return dims.reduce((acc, cur, i) => {\n      const k = config.dimensions[cur] ? config.dimensions[cur] : {};\n      acc[cur] = {\n        ...k,\n        orient: isValid(k.orient) ? k.orient : 'left',\n        ticks: isValid(k.ticks) ? k.ticks : 5,\n        innerTickSize: isValid(k.innerTickSize) ? k.innerTickSize : 6,\n        outerTickSize: isValid(k.outerTickSize) ? k.outerTickSize : 0,\n        tickPadding: isValid(k.tickPadding) ? k.tickPadding : 3,\n        type: isValid(k.type) ? k.type : types[cur],\n        index: isValid(k.index) ? k.index : i,\n      };\n\n      return acc;\n    }, {});\n  };\n\nexport default applyDimensionDefaults;\n","import { select } from 'd3-selection';\n\nimport dimensionLabels from '../util/dimensionLabels';\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\nimport rotateLabels from '../util/rotateLabels';\n\nimport w from '../util/width';\nimport h from '../util/height';\n\n/**\n * Create static SVG axes with dimension names, ticks, and labels.\n *\n * @param config\n * @param pc\n * @param xscale\n * @param flags\n * @param axis\n * @returns {Function}\n */\nconst createAxes = (config, pc, xscale, flags, axis) =>\n  function() {\n    if (pc.g() !== undefined) {\n      pc.removeAxes();\n    }\n    // Add a group element for each dimension.\n    pc._g = pc.svg\n      .selectAll('.dimension')\n      .data(pc.getOrderedDimensionKeys(), function(d) {\n        return d;\n      })\n      .enter()\n      .append('svg:g')\n      .attr('class', 'dimension')\n      .attr('transform', function(d) {\n        return 'translate(' + xscale(d) + ')';\n      });\n    // Add an axis and title.\n    pc._g\n      .append('svg:g')\n      .attr('class', 'axis')\n      .attr('transform', 'translate(0,0)')\n      .each(function(d) {\n        let axisElement = select(this).call(\n          pc.applyAxisConfig(axis, config.dimensions[d])\n        );\n\n        axisElement\n          .selectAll('path')\n          .style('fill', 'none')\n          .style('stroke', '#222')\n          .style('shape-rendering', 'crispEdges');\n\n        axisElement\n          .selectAll('line')\n          .style('fill', 'none')\n          .style('stroke', '#222')\n          .style('shape-rendering', 'crispEdges');\n      })\n\n      .append('svg:text')\n      .attr('text-anchor', 'middle')\n      .attr('y', 0)\n      .attr(\n        'transform',\n        'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\n      )\n      .attr('x', 0)\n      .attr('class', 'label')\n      .text(dimensionLabels(config))\n      .on('dblclick', flipAxisAndUpdatePCP(config, pc, axis))\n      .on('wheel', rotateLabels(config, pc));\n\n    if (config.nullValueSeparator == 'top') {\n      pc.svg\n        .append('line')\n        .attr('x1', 0)\n        .attr('y1', 1 + config.nullValueSeparatorPadding.top)\n        .attr('x2', w(config))\n        .attr('y2', 1 + config.nullValueSeparatorPadding.top)\n        .attr('stroke-width', 1)\n        .attr('stroke', '#777')\n        .attr('fill', 'none')\n        .attr('shape-rendering', 'crispEdges');\n    } else if (config.nullValueSeparator == 'bottom') {\n      pc.svg\n        .append('line')\n        .attr('x1', 0)\n        .attr('y1', h(config) + 1 - config.nullValueSeparatorPadding.bottom)\n        .attr('x2', w(config))\n        .attr('y2', h(config) + 1 - config.nullValueSeparatorPadding.bottom)\n        .attr('stroke-width', 1)\n        .attr('stroke', '#777')\n        .attr('fill', 'none')\n        .attr('shape-rendering', 'crispEdges');\n    }\n\n    flags.axes = true;\n    return this;\n  };\n\nexport default createAxes;\n","import { entries } from 'd3-collection';\nimport { min } from 'd3-array';\n\n//draw dots with radius r on the axis line where data intersects\nconst axisDots = (config, pc, position) => _r => {\n  const r = _r || 0.1;\n  const ctx = pc.ctx.marks;\n  const startAngle = 0;\n  const endAngle = 2 * Math.PI;\n  ctx.globalAlpha = min([1 / Math.pow(config.data.length, 1 / 2), 1]);\n  config.data.forEach(d => {\n    entries(config.dimensions).forEach((p, i) => {\n      ctx.beginPath();\n      ctx.arc(\n        position(p),\n        config.dimensions[p.key].yscale(d[p]),\n        r,\n        startAngle,\n        endAngle\n      );\n      ctx.stroke();\n      ctx.fill();\n    });\n  });\n  return this;\n};\n\nexport default axisDots;\n","import { axisBottom, axisLeft, axisRight, axisTop } from 'd3-axis';\n\nconst applyAxisConfig = (axis, dimension) => {\n  let axisCfg;\n\n  switch (dimension.orient) {\n    case 'left':\n      axisCfg = axisLeft(dimension.yscale);\n      break;\n    case 'right':\n      axisCfg = axisRight(dimension.yscale);\n      break;\n    case 'top':\n      axisCfg = axisTop(dimension.yscale);\n      break;\n    case 'bottom':\n      axisCfg = axisBottom(dimension.yscale);\n      break;\n    default:\n      axisCfg = axisLeft(dimension.yscale);\n      break;\n  }\n\n  axisCfg\n    .ticks(dimension.ticks)\n    .tickValues(dimension.tickValues)\n    .tickSizeInner(dimension.innerTickSize)\n    .tickSizeOuter(dimension.outerTickSize)\n    .tickPadding(dimension.tickPadding)\n    .tickFormat(dimension.tickFormat);\n\n  return axisCfg;\n};\n\nexport default applyAxisConfig;\n","import { drag } from 'd3-drag';\nimport { event, select } from 'd3-selection';\n\nimport w from '../util/width';\n\n// Jason Davies, http://bl.ocks.org/1341281\nconst reorderable = (config, pc, xscale, position, dragging, flags) =>\n  function() {\n    if (pc.g() === undefined) pc.createAxes();\n    const g = pc.g();\n\n    g.style('cursor', 'move').call(\n      drag()\n        .on('start', function(d) {\n          dragging[d] = this.__origin__ = xscale(d);\n        })\n        .on('drag', function(d) {\n          dragging[d] = Math.min(\n            w(config),\n            Math.max(0, (this.__origin__ += event.dx))\n          );\n          pc.sortDimensions();\n          xscale.domain(pc.getOrderedDimensionKeys());\n          pc.render();\n          g.attr('transform', d => 'translate(' + position(d) + ')');\n        })\n        .on('end', function(d) {\n          delete this.__origin__;\n          delete dragging[d];\n          select(this)\n            .transition()\n            .attr('transform', 'translate(' + xscale(d) + ')');\n          pc.render();\n        })\n    );\n    flags.reorderable = true;\n    return this;\n  };\n\nexport default reorderable;\n","// rescale for height, width and margins\n// TODO currently assumes chart is brushable, and destroys old brushes\nconst resize = (config, pc, flags, events) => {\n  return function() {\n    // selection size\n    pc.selection\n      .select('svg')\n      .attr('width', config.width)\n      .attr('height', config.height);\n    pc.svg.attr(\n      'transform',\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\n    );\n\n    // FIXME: the current brush state should pass through\n    if (flags.brushable) pc.brushReset();\n\n    // scales\n    pc.autoscale();\n\n    // axes, destroys old brushes.\n    if (pc.g()) pc.createAxes();\n    if (flags.brushable) pc.brushable();\n    if (flags.reorderable) pc.reorderable();\n\n    events.call('resize', this, {\n      width: config.width,\n      height: config.height,\n      margin: config.margin,\n    });\n\n    return this;\n  };\n};\n\nexport default resize;\n","// Reorder dimensions, such that the highest value (visually) is on the left and\n// the lowest on the right. Visual values are determined by the data values in\n// the given row.\nconst reorder = (config, pc, xscale) => rowdata => {\n  const firstDim = pc.getOrderedDimensionKeys()[0];\n\n  pc.sortDimensionsByRowData(rowdata);\n  // NOTE: this is relatively cheap given that:\n  // number of dimensions < number of data items\n  // Thus we check equality of order to prevent rerendering when this is the case.\n  const reordered = firstDim !== pc.getOrderedDimensionKeys()[0];\n\n  if (reordered) {\n    xscale.domain(pc.getOrderedDimensionKeys());\n    const highlighted = config.highlighted.slice(0);\n    pc.unhighlight();\n\n    const g = pc.g();\n    g.transition()\n      .duration(1500)\n      .attr('transform', d => 'translate(' + xscale(d) + ')');\n    pc.render();\n\n    // pc.highlight() does not check whether highlighted is length zero, so we do that here.\n    if (highlighted.length !== 0) {\n      pc.highlight(highlighted);\n    }\n  }\n};\n\nexport default reorder;\n","const sortDimensions = (config, position) => () => {\n  const copy = Object.assign({}, config.dimensions);\n  const positionSortedKeys = Object.keys(config.dimensions).sort(\n    (a, b) => (position(a) - position(b) === 0 ? 1 : position(a) - position(b))\n  );\n  config.dimensions = {};\n  positionSortedKeys.forEach((p, i) => {\n    config.dimensions[p] = copy[p];\n    config.dimensions[p].index = i;\n  });\n};\n\nexport default sortDimensions;\n","const sortDimensionsByRowData = config => rowdata => {\n  const copy = Object.assign({}, config.dimensions);\n  const positionSortedKeys = Object.keys(config.dimensions).sort((a, b) => {\n    const pixelDifference =\n      config.dimensions[a].yscale(rowdata[a]) -\n      config.dimensions[b].yscale(rowdata[b]);\n\n    // Array.sort is not necessarily stable, this means that if pixelDifference is zero\n    // the ordering of dimensions might change unexpectedly. This is solved by sorting on\n    // variable name in that case.\n    return pixelDifference === 0 ? a.localeCompare(b) : pixelDifference;\n  });\n  config.dimensions = {};\n  positionSortedKeys.forEach((p, i) => {\n    config.dimensions[p] = copy[p];\n    config.dimensions[p].index = i;\n  });\n};\n\nexport default sortDimensionsByRowData;\n","const isBrushed = (config, brushGroup) => {\n  if (config.brushed && config.brushed.length !== config.data.length)\n    return true;\n\n  const object = brushGroup.currentMode().brushState();\n\n  for (let key in object) {\n    if (object.hasOwnProperty(key)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport default isBrushed;\n","import isBrushed from '../util/isBrushed';\nimport w from '../util/width';\nimport h from '../util/height';\n\nconst clear = (config, pc, ctx, brushGroup) =>\n  function(layer) {\n    ctx[layer].clearRect(0, 0, w(config) + 2, h(config) + 2);\n\n    // This will make sure that the foreground items are transparent\n    // without the need for changing the opacity style of the foreground canvas\n    // as this would stop the css styling from working\n    if (layer === 'brushed' && isBrushed(config, brushGroup)) {\n      ctx.brushed.fillStyle = pc.selection.style('background-color');\n      ctx.brushed.globalAlpha = 1 - config.alphaOnBrushed;\n      ctx.brushed.fillRect(0, 0, w(config) + 2, h(config) + 2);\n      ctx.brushed.globalAlpha = config.alpha;\n    }\n    return this;\n  };\n\nexport default clear;\n","const computeCentroids = (config, position, row) => {\n  const centroids = [];\n\n  const p = Object.keys(config.dimensions);\n  const cols = p.length;\n  const a = 0.5; // center between axes\n  for (let i = 0; i < cols; ++i) {\n    // centroids on 'real' axes\n    const x = position(p[i]);\n    const y = config.dimensions[p[i]].yscale(row[p[i]]);\n    centroids.push($V([x, y]));\n\n    // centroids on 'virtual' axes\n    if (i < cols - 1) {\n      const cx = x + a * (position(p[i + 1]) - x);\n      let cy = y + a * (config.dimensions[p[i + 1]].yscale(row[p[i + 1]]) - y);\n      if (config.bundleDimension !== null) {\n        const leftCentroid = config.clusterCentroids\n          .get(\n            config.dimensions[config.bundleDimension].yscale(\n              row[config.bundleDimension]\n            )\n          )\n          .get(p[i]);\n        const rightCentroid = config.clusterCentroids\n          .get(\n            config.dimensions[config.bundleDimension].yscale(\n              row[config.bundleDimension]\n            )\n          )\n          .get(p[i + 1]);\n        let centroid = 0.5 * (leftCentroid + rightCentroid);\n        cy = centroid + (1 - config.bundlingStrength) * (cy - centroid);\n      }\n      centroids.push($V([cx, cy]));\n    }\n  }\n\n  return centroids;\n};\n\nexport default computeCentroids;\n","const computeControlPoints = (smoothness, centroids) => {\n  const cols = centroids.length;\n  const a = smoothness;\n  const cps = [];\n\n  cps.push(centroids[0]);\n  cps.push(\n    $V([\n      centroids[0].e(1) + a * 2 * (centroids[1].e(1) - centroids[0].e(1)),\n      centroids[0].e(2),\n    ])\n  );\n  for (let col = 1; col < cols - 1; ++col) {\n    let mid = centroids[col];\n    let left = centroids[col - 1];\n    let right = centroids[col + 1];\n\n    let diff = left.subtract(right);\n    cps.push(mid.add(diff.x(a)));\n    cps.push(mid);\n    cps.push(mid.subtract(diff.x(a)));\n  }\n  cps.push(\n    $V([\n      centroids[cols - 1].e(1) +\n        a * 2 * (centroids[cols - 2].e(1) - centroids[cols - 1].e(1)),\n      centroids[cols - 1].e(2),\n    ])\n  );\n  cps.push(centroids[cols - 1]);\n\n  return cps;\n};\n\nexport default computeControlPoints;\n","// draw single cubic bezier curve\nimport { entries } from 'd3-collection';\nimport computeCentroids from './computeCentroids';\nimport computeControlPoints from './computeControlPoints';\nimport h from './height';\n\nconst singleCurve = (config, position, d, ctx) => {\n  const centroids = computeCentroids(config, position, d);\n  const cps = computeControlPoints(config.smoothness, centroids);\n\n  ctx.moveTo(cps[0].e(1), cps[0].e(2));\n\n  for (let i = 1; i < cps.length; i += 3) {\n    if (config.showControlPoints) {\n      for (let j = 0; j < 3; j++) {\n        ctx.fillRect(cps[i + j].e(1), cps[i + j].e(2), 2, 2);\n      }\n    }\n    ctx.bezierCurveTo(\n      cps[i].e(1),\n      cps[i].e(2),\n      cps[i + 1].e(1),\n      cps[i + 1].e(2),\n      cps[i + 2].e(1),\n      cps[i + 2].e(2)\n    );\n  }\n};\n\n// returns the y-position just beyond the separating null value line\nconst getNullPosition = config => {\n  if (config.nullValueSeparator == 'bottom') {\n    return h(config) + 1;\n  } else if (config.nullValueSeparator == 'top') {\n    return 1;\n  } else {\n    console.log(\n      \"A value is NULL, but nullValueSeparator is not set; set it to 'bottom' or 'top'.\"\n    );\n  }\n  return h(config) + 1;\n};\n\nconst singlePath = (config, position, d, ctx) => {\n  entries(config.dimensions).forEach((p, i) => {\n    //p isn't really p\n    if (i == 0) {\n      ctx.moveTo(\n        position(p.key),\n        typeof d[p.key] == 'undefined'\n          ? getNullPosition(config)\n          : config.dimensions[p.key].yscale(d[p.key])\n      );\n    } else {\n      ctx.lineTo(\n        position(p.key),\n        typeof d[p.key] == 'undefined'\n          ? getNullPosition(config)\n          : config.dimensions[p.key].yscale(d[p.key])\n      );\n    }\n  });\n};\n\n// draw single polyline\nconst colorPath = (config, position, d, ctx) => {\n  ctx.beginPath();\n  if (\n    (config.bundleDimension !== null && config.bundlingStrength > 0) ||\n    config.smoothness > 0\n  ) {\n    singleCurve(config, position, d, ctx);\n  } else {\n    singlePath(config, position, d, ctx);\n  }\n  ctx.stroke();\n};\n\nexport default colorPath;\n","const _functor = v => (typeof v === 'function' ? v : () => v);\n\nexport default _functor;\n","import isBrushed from '../util/isBrushed';\nimport colorPath from '../util/colorPath';\nimport functor from '../util/functor';\n\nconst pathBrushed = (config, ctx, position) => (d, i) => {\n  if (config.brushedColor !== null) {\n    ctx.brushed.strokeStyle = functor(config.brushedColor)(d, i);\n  } else {\n    ctx.brushed.strokeStyle = functor(config.color)(d, i);\n  }\n  return colorPath(config, position, d, ctx.brushed);\n};\n\nconst renderBrushedDefault = (config, ctx, position, pc, brushGroup) => () => {\n  pc.clear('brushed');\n\n  if (isBrushed(config, brushGroup) && config.brushed !== false) {\n    config.brushed.forEach(pathBrushed(config, ctx, position));\n  }\n};\n\nconst renderBrushedQueue = (config, brushGroup, brushedQueue) => () => {\n  if (isBrushed(config, brushGroup)) {\n    brushedQueue(config.brushed);\n  } else {\n    brushedQueue([]); // This is needed to clear the currently brushed items\n  }\n};\n\nconst renderBrushed = (config, pc, events) =>\n  function() {\n    if (!Object.keys(config.dimensions).length) pc.detectDimensions();\n\n    pc.renderBrushed[config.mode]();\n    events.call('render', this);\n    return this;\n  };\n\nexport { pathBrushed, renderBrushed, renderBrushedDefault, renderBrushedQueue };\n","import { select, selectAll } from 'd3-selection';\n\nconst brushReset = config =>\n  function(dimension) {\n    const brushesToKeep = [];\n    for (let j = 0; j < config.brushes.length; j++) {\n      if (config.brushes[j].data !== dimension) {\n        brushesToKeep.push(config.brushes[j]);\n      }\n    }\n\n    config.brushes = brushesToKeep;\n    config.brushed = false;\n\n    if (pc.g() !== undefined) {\n      const nodes = pc\n        .g()\n        .selectAll('.brush')\n        .nodes();\n      for (let i = 0; i < nodes.length; i++) {\n        if (nodes[i].__data__ === dimension) {\n          // remove all dummy brushes for this axis or the real brush\n          select(select(nodes[i]).nodes()[0].parentNode)\n            .selectAll('.dummy')\n            .remove();\n          config.dimensions[dimension].brush.move(select(nodes[i], null));\n        }\n      }\n    }\n\n    return this;\n  };\n\nexport default brushReset;\n","// a better \"typeof\" from this post: http://stackoverflow.com/questions/7390426/better-way-to-get-type-of-a-javascript-variable\nconst toType = v => {\n  return {}.toString\n    .call(v)\n    .match(/\\s([a-zA-Z]+)/)[1]\n    .toLowerCase();\n};\n\nexport default toType;\n","// this descriptive text should live with other introspective methods\nconst toString = config => () =>\n  'Parallel Coordinates: ' +\n  Object.keys(config.dimensions).length +\n  ' dimensions (' +\n  Object.keys(config.data[0]).length +\n  ' total) , ' +\n  config.data.length +\n  ' rows';\n\nexport default toString;\n","// pairs of adjacent dimensions\nconst adjacentPairs = arr => {\n  let ret = [];\n  for (let i = 0; i < arr.length - 1; i++) {\n    ret.push([arr[i], arr[i + 1]]);\n  }\n  return ret;\n};\n\nexport default adjacentPairs;\n","import { selectAll } from 'd3-selection';\n\nimport colorPath from '../util/colorPath';\nimport functor from '../util/functor';\n\nconst pathHighlight = (config, ctx, position) => (d, i) => {\n  ctx.highlight.strokeStyle = functor(config.color)(d, i);\n  return colorPath(config, position, d, ctx.highlight);\n};\n\n// highlight an array of data\nconst highlight = (config, pc, canvas, events, ctx, position) =>\n  function(data = null) {\n    if (data === null) {\n      return config.highlighted;\n    }\n\n    config.highlighted = data;\n    pc.clear('highlight');\n    selectAll([canvas.foreground, canvas.brushed]).classed('faded', true);\n    data.forEach(pathHighlight(config, ctx, position));\n    events.call('highlight', this, data);\n    return this;\n  };\n\nexport default highlight;\n","import { selectAll } from 'd3-selection';\n\n// clear highlighting\nconst unhighlight = (config, pc, canvas) =>\n  function() {\n    config.highlighted = [];\n    pc.clear('highlight');\n    selectAll([canvas.foreground, canvas.brushed]).classed('faded', false);\n    return this;\n  };\n\nexport default unhighlight;\n","const removeAxes = pc =>\n  function() {\n    pc._g.remove();\n\n    delete pc._g;\n    return this;\n  };\n\nexport default removeAxes;\n","/**\n * Renders the polylines.\n * If no dimensions have been specified, it will attempt to detect quantitative\n * dimensions based on the first data entry. If scales haven't been set, it will\n * autoscale based on the extent for each dimension.\n *\n * @param config\n * @param pc\n * @param events\n * @returns {Function}\n */\nconst render = (config, pc, events) =>\n  function() {\n    // try to autodetect dimensions and create scales\n    if (!Object.keys(config.dimensions).length) {\n      pc.detectDimensions();\n    }\n    pc.autoscale();\n\n    pc.render[config.mode]();\n\n    events.call('render', this);\n    return this;\n  };\n\nexport default render;\n","import colorPath from '../util/colorPath';\nimport functor from '../util/functor';\n\nconst pathForeground = (config, ctx, position) => (d, i) => {\n  ctx.foreground.strokeStyle = functor(config.color)(d, i);\n  return colorPath(config, position, d, ctx.foreground);\n};\n\nconst renderDefault = (config, pc, ctx, position) => () => {\n  pc.clear('foreground');\n  pc.clear('highlight');\n\n  pc.renderBrushed.default();\n\n  config.data.forEach(pathForeground(config, ctx, position));\n};\n\nconst renderDefaultQueue = (config, pc, foregroundQueue) => () => {\n  pc.renderBrushed.queue();\n  foregroundQueue(config.data);\n};\n\nexport default renderDefault;\n\nexport { pathForeground, renderDefaultQueue };\n","import toType from './toType';\n\n// try to coerce to number before returning type\nconst toTypeCoerceNumbers = v =>\n  parseFloat(v) == v && v !== null ? 'number' : toType(v);\n\nexport default toTypeCoerceNumbers;\n","import toTypeCoerceNumbers from './toTypeCoerceNumbers';\n\n// attempt to determine types of each dimension based on first row of data\nconst detectDimensionTypes = data =>\n  Object.keys(data[0]).reduce((acc, cur) => {\n    const key = isNaN(Number(cur)) ? cur : parseInt(cur);\n    acc[key] = toTypeCoerceNumbers(data[0][cur]);\n\n    return acc;\n  }, {});\n\nexport default detectDimensionTypes;\n","import { ascending } from 'd3-array';\n\nconst getOrderedDimensionKeys = config => () =>\n  Object.keys(config.dimensions).sort((x, y) =>\n    ascending(config.dimensions[x].index, config.dimensions[y].index)\n  );\n\nexport default getOrderedDimensionKeys;\n","const interactive = flags =>\n  function() {\n    flags.interactive = true;\n    return this;\n  };\n\nexport default interactive;\n","const shadows = (flags, pc) =>\n  function() {\n    flags.shadows = true;\n    pc.alphaOnBrushed(0.1);\n    pc.render();\n    return this;\n  };\n\nexport default shadows;\n","import { select } from 'd3-selection';\n\n/**\n * Setup a new parallel coordinates chart.\n *\n * @param config\n * @param canvas\n * @param ctx\n * @returns {pc} a parcoords closure\n */\nconst init = (config, canvas, ctx) => {\n  /**\n   * Create the chart within a container. The selector can also be a d3 selection.\n   *\n   * @param selection a d3 selection\n   * @returns {pc} instance for chained api\n   */\n  const pc = function(selection) {\n    selection = pc.selection = select(selection);\n\n    config.width = selection.node().clientWidth;\n    config.height = selection.node().clientHeight;\n    // canvas data layers\n    ['marks', 'foreground', 'brushed', 'highlight'].forEach(layer => {\n      canvas[layer] = selection\n        .append('canvas')\n        .attr('class', layer)\n        .node();\n      ctx[layer] = canvas[layer].getContext('2d');\n    });\n\n    // svg tick and brush layers\n    pc.svg = selection\n      .append('svg')\n      .attr('width', config.width)\n      .attr('height', config.height)\n      .style('font', '14px sans-serif')\n      .style('position', 'absolute')\n\n      .append('svg:g')\n      .attr(\n        'transform',\n        'translate(' + config.margin.left + ',' + config.margin.top + ')'\n      );\n    // for chained api\n    return pc;\n  };\n\n  // for partial-application style programming\n  return pc;\n};\n\nexport default init;\n","const flip = config =>\n  function(d) {\n    //__.dimensions[d].yscale.domain().reverse();                               // does not work\n    config.dimensions[d].yscale.domain(\n      config.dimensions[d].yscale.domain().reverse()\n    ); // works\n\n    return this;\n  };\n\nexport default flip;\n","const detectDimensions = pc =>\n  function() {\n    pc.dimensions(pc.applyDimensionDefaults());\n    return this;\n  };\n\nexport default detectDimensions;\n","const scale = (config, pc) =>\n  function(d, domain) {\n    config.dimensions[d].yscale.domain(domain);\n    pc.render().default();\n\n    return this;\n  };\n\nexport default scale;\n","const DefaultConfig = {\n  data: [],\n  highlighted: [],\n  dimensions: {},\n  dimensionTitleRotation: 0,\n  brushes: [],\n  brushed: false,\n  brushedColor: null,\n  alphaOnBrushed: 0.0,\n  mode: 'default',\n  rate: 20,\n  width: 600,\n  height: 300,\n  margin: { top: 24, right: 20, bottom: 12, left: 20 },\n  nullValueSeparator: 'undefined', // set to \"top\" or \"bottom\"\n  nullValueSeparatorPadding: { top: 8, right: 0, bottom: 8, left: 0 },\n  color: '#069',\n  composite: 'source-over',\n  alpha: 0.7,\n  bundlingStrength: 0.5,\n  bundleDimension: null,\n  smoothness: 0.0,\n  showControlPoints: false,\n  hideAxis: [],\n  flipAxes: [],\n  animationTime: 1100, // How long it takes to flip the axis when you double click\n  rotateLabels: false,\n};\n\nexport default DefaultConfig;\n","import { entries, keys } from 'd3-collection';\nimport { axisLeft } from 'd3-axis';\nimport { dispatch } from 'd3-dispatch';\nimport { scalePoint } from 'd3-scale';\n\nimport DefaultConfig from './defaultConfig';\n\nconst initState = userConfig => {\n  const config = Object.assign({}, DefaultConfig, userConfig);\n\n  if (userConfig && userConfig.dimensionTitles) {\n    console.warn(\n      'dimensionTitles passed in userConfig is deprecated. Add title to dimension object.'\n    );\n    entries(userConfig.dimensionTitles).forEach(d => {\n      if (config.dimensions[d.key]) {\n        config.dimensions[d.key].title = config.dimensions[d.key].title\n          ? config.dimensions[d.key].title\n          : d.value;\n      } else {\n        config.dimensions[d.key] = {\n          title: d.value,\n        };\n      }\n    });\n  }\n\n  const eventTypes = [\n    'render',\n    'resize',\n    'highlight',\n    'brush',\n    'brushend',\n    'brushstart',\n    'axesreorder',\n  ].concat(keys(config));\n\n  const events = dispatch.apply(this, eventTypes),\n    flags = {\n      brushable: false,\n      reorderable: false,\n      axes: false,\n      interactive: false,\n      debug: false,\n    },\n    xscale = scalePoint(),\n    dragging = {},\n    axis = axisLeft().ticks(5),\n    ctx = {},\n    canvas = {};\n\n  const brush = {\n    modes: {\n      None: {\n        install: function(pc) {}, // Nothing to be done.\n        uninstall: function(pc) {}, // Nothing to be done.\n        selected: function() {\n          return [];\n        }, // Nothing to return\n        brushState: function() {\n          return {};\n        },\n      },\n    },\n    mode: 'None',\n    predicate: 'AND',\n    currentMode: function() {\n      return this.modes[this.mode];\n    },\n  };\n\n  return {\n    config,\n    events,\n    eventTypes,\n    flags,\n    xscale,\n    dragging,\n    axis,\n    ctx,\n    canvas,\n    brush,\n  };\n};\n\nexport default initState;\n","const computeClusterCentroids = (config, d) => {\n  const clusterCentroids = new Map();\n  const clusterCounts = new Map();\n  // determine clusterCounts\n  config.data.forEach(function(row) {\n    let scaled = config.dimensions[d].yscale(row[d]);\n    if (!clusterCounts.has(scaled)) {\n      clusterCounts.set(scaled, 0);\n    }\n    let count = clusterCounts.get(scaled);\n    clusterCounts.set(scaled, count + 1);\n  });\n\n  config.data.forEach(function(row) {\n    Object.keys(config.dimensions).map(p => {\n      let scaled = config.dimensions[d].yscale(row[d]);\n      if (!clusterCentroids.has(scaled)) {\n        const _map = new Map();\n        clusterCentroids.set(scaled, _map);\n      }\n      if (!clusterCentroids.get(scaled).has(p)) {\n        clusterCentroids.get(scaled).set(p, 0);\n      }\n      let value = clusterCentroids.get(scaled).get(p);\n      value += config.dimensions[p].yscale(row[p]) / clusterCounts.get(scaled);\n      clusterCentroids.get(scaled).set(p, value);\n    });\n  });\n\n  return clusterCentroids;\n};\n\nexport default computeClusterCentroids;\n","// side effects for setters\nimport { dispatch } from 'd3-dispatch';\nimport computeClusterCentroids from '../util/computeClusterCentroids';\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\n\nconst without = (arr, items) => {\n  items.forEach(el => {\n    delete arr[el];\n  });\n  return arr;\n};\n\nconst sideEffects = (\n  config,\n  ctx,\n  pc,\n  xscale,\n  flags,\n  brushedQueue,\n  foregroundQueue\n) =>\n  dispatch\n    .apply(this, Object.keys(config))\n    .on('composite', d => {\n      ctx.foreground.globalCompositeOperation = d.value;\n      ctx.brushed.globalCompositeOperation = d.value;\n    })\n    .on('alpha', d => {\n      ctx.foreground.globalAlpha = d.value;\n      ctx.brushed.globalAlpha = d.value;\n    })\n    .on('brushedColor', d => {\n      ctx.brushed.strokeStyle = d.value;\n    })\n    .on('width', d => pc.resize())\n    .on('height', d => pc.resize())\n    .on('margin', d => pc.resize())\n    .on('rate', d => {\n      brushedQueue.rate(d.value);\n      foregroundQueue.rate(d.value);\n    })\n    .on('dimensions', d => {\n      config.dimensions = pc.applyDimensionDefaults(Object.keys(d.value));\n      xscale.domain(pc.getOrderedDimensionKeys());\n      pc.sortDimensions();\n      if (flags.interactive) {\n        pc.render().updateAxes();\n      }\n    })\n    .on('bundleDimension', d => {\n      if (!Object.keys(config.dimensions).length) pc.detectDimensions();\n      pc.autoscale();\n      if (typeof d.value === 'number') {\n        if (d.value < Object.keys(config.dimensions).length) {\n          config.bundleDimension = config.dimensions[d.value];\n        } else if (d.value < config.hideAxis.length) {\n          config.bundleDimension = config.hideAxis[d.value];\n        }\n      } else {\n        config.bundleDimension = d.value;\n      }\n\n      config.clusterCentroids = computeClusterCentroids(\n        config,\n        config.bundleDimension\n      );\n      if (flags.interactive) {\n        pc.render();\n      }\n    })\n    .on('hideAxis', d => {\n      pc.dimensions(pc.applyDimensionDefaults());\n      pc.dimensions(without(config.dimensions, d.value));\n    })\n    .on('flipAxes', d => {\n      if (d.value && d.value.length) {\n        d.value.forEach(function(axis) {\n          flipAxisAndUpdatePCP(config, pc, axis);\n        });\n        pc.updateAxes(0);\n      }\n    });\n\nexport default sideEffects;\n","const getset = (obj, state, events, side_effects) => {\n  Object.keys(state).forEach(function(key) {\n    obj[key] = function(x) {\n      if (!arguments.length) {\n        return state[key];\n      }\n      if (\n        key === 'dimensions' &&\n        Object.prototype.toString.call(x) === '[object Array]'\n      ) {\n        console.warn('pc.dimensions([]) is deprecated, use pc.dimensions({})');\n        x = obj.applyDimensionDefaults(x);\n      }\n      let old = state[key];\n      state[key] = x;\n      side_effects.call(key, obj, { value: x, previous: old });\n      events.call(key, obj, { value: x, previous: old });\n      return obj;\n    };\n  });\n};\n\nexport default getset;\n","// side effects for setters\nimport sideEffects from './state/sideEffects';\nimport getset from './util/getset';\n\nconst d3_rebind = (target, source, method) =>\n  function() {\n    const value = method.apply(source, arguments);\n    return value === source ? target : value;\n  };\n\nconst _rebind = (target, source, method) => {\n  target[method] = d3_rebind(target, source, source[method]);\n  return target;\n};\n\nconst bindEvents = (\n  __,\n  ctx,\n  pc,\n  xscale,\n  flags,\n  brushedQueue,\n  foregroundQueue,\n  events,\n  axis\n) => {\n  const side_effects = sideEffects(\n    __,\n    ctx,\n    pc,\n    xscale,\n    flags,\n    brushedQueue,\n    foregroundQueue\n  );\n\n  // create getter/setters\n  getset(pc, __, events, side_effects);\n\n  // expose events\n  // getter/setter with event firing\n  _rebind(pc, events, 'on');\n\n  _rebind(\n    pc,\n    axis,\n    'ticks',\n    'orient',\n    'tickValues',\n    'tickSubdivide',\n    'tickSize',\n    'tickPadding',\n    'tickFormat'\n  );\n};\n\nexport default bindEvents;\n","// misc\nimport renderQueue from './util/renderQueue';\nimport w from './util/width';\n\n// brush\nimport install1DAxes from './brush/1d';\nimport install1DAxesMulti from './brush/1d-multi';\nimport install2DStrums from './brush/strums';\nimport installAngularBrush from './brush/angular';\n\n// api\nimport intersection from './api/intersection';\nimport mergeParcoords from './api/mergeParcoords';\nimport selected from './api/selected';\nimport brushMode from './api/brushMode';\nimport updateAxes from './api/updateAxes';\nimport autoscale from './api/autoscale';\nimport brushable from './api/brushable';\nimport commonScale from './api/commonScale';\nimport computeRealCentroids from './api/computeRealCentroids';\nimport applyDimensionDefaults from './api/applyDimensionDefaults';\nimport createAxes from './api/createAxes';\nimport axisDots from './api/axisDots';\nimport applyAxisConfig from './api/applyAxisConfig';\nimport reorderable from './api/reorderable';\nimport resize from './api/resize';\nimport reorder from './api/reorder';\nimport sortDimensions from './api/sortDimensions';\nimport sortDimensionsByRowData from './api/sortDimensionsByRowData';\nimport clear from './api/clear';\nimport {\n  pathBrushed,\n  renderBrushed,\n  renderBrushedDefault,\n  renderBrushedQueue,\n} from './api/renderBrushed';\nimport brushReset from './api/brushReset';\nimport toType from './api/toType';\nimport toString from './api/toString';\nimport adjacentPairs from './api/adjacentPairs';\nimport highlight from './api/highlight';\nimport unhighlight from './api/unhighlight';\nimport removeAxes from './api/removeAxes';\nimport render from './api/render';\nimport renderDefault, {\n  pathForeground,\n  renderDefaultQueue,\n} from './api/renderDefault';\nimport toTypeCoerceNumbers from './api/toTypeCoerceNumbers';\nimport detectDimensionTypes from './api/detectDimensionTypes';\nimport getOrderedDimensionKeys from './api/getOrderedDimensionKeys';\nimport interactive from './api/interactive';\nimport shadows from './api/shadows';\nimport init from './api/init';\nimport flip from './api/flip';\nimport detectDimensions from './api/detectDimensions';\nimport scale from './api/scale';\n\nimport { version } from '../package.json';\nimport initState from './state';\nimport bindEvents from './bindEvents';\n\n//css\nimport './parallel-coordinates.css';\n\nconst ParCoords = userConfig => {\n  const state = initState(userConfig);\n  const {\n    config,\n    events,\n    flags,\n    xscale,\n    dragging,\n    axis,\n    ctx,\n    canvas,\n    brush,\n  } = state;\n\n  const pc = init(config, canvas, ctx);\n\n  const position = d => {\n    if (xscale.range().length === 0) {\n      xscale.range([0, w(config)], 1);\n    }\n    return dragging[d] == null ? xscale(d) : dragging[d];\n  };\n\n  const brushedQueue = renderQueue(pathBrushed(config, ctx, position))\n    .rate(50)\n    .clear(() => pc.clear('brushed'));\n\n  const foregroundQueue = renderQueue(pathForeground(config, ctx, position))\n    .rate(50)\n    .clear(function() {\n      pc.clear('foreground');\n      pc.clear('highlight');\n    });\n\n  bindEvents(\n    config,\n    ctx,\n    pc,\n    xscale,\n    flags,\n    brushedQueue,\n    foregroundQueue,\n    events,\n    axis\n  );\n\n  // expose the state of the chart\n  pc.state = config;\n  pc.flags = flags;\n\n  pc.autoscale = autoscale(config, pc, xscale, ctx);\n  pc.scale = scale(config, pc);\n  pc.flip = flip(config);\n  pc.commonScale = commonScale(config, pc);\n  pc.detectDimensions = detectDimensions(pc);\n  // attempt to determine types of each dimension based on first row of data\n  pc.detectDimensionTypes = detectDimensionTypes;\n  pc.applyDimensionDefaults = applyDimensionDefaults(config, pc);\n  pc.getOrderedDimensionKeys = getOrderedDimensionKeys(config);\n\n  //Renders the polylines.\n  pc.render = render(config, pc, events);\n  pc.renderBrushed = renderBrushed(config, pc, events);\n  pc.render.default = renderDefault(config, pc, ctx, position);\n  pc.render.queue = renderDefaultQueue(config, pc, foregroundQueue);\n  pc.renderBrushed.default = renderBrushedDefault(\n    config,\n    ctx,\n    position,\n    pc,\n    brush\n  );\n  pc.renderBrushed.queue = renderBrushedQueue(config, brush, brushedQueue);\n\n  pc.compute_real_centroids = computeRealCentroids(config.dimensions, position);\n  pc.shadows = shadows(flags, pc);\n  pc.axisDots = axisDots(config, pc, position);\n  pc.clear = clear(config, pc, ctx, brush);\n  pc.createAxes = createAxes(config, pc, xscale, flags, axis);\n  pc.removeAxes = removeAxes(pc);\n  pc.updateAxes = updateAxes(config, pc, position, axis, flags);\n  pc.applyAxisConfig = applyAxisConfig;\n  pc.brushable = brushable(config, pc, flags);\n  pc.brushReset = brushReset(config);\n  pc.selected = selected(config, pc);\n  pc.reorderable = reorderable(config, pc, xscale, position, dragging, flags);\n\n  // Reorder dimensions, such that the highest value (visually) is on the left and\n  // the lowest on the right. Visual values are determined by the data values in\n  // the given row.\n  pc.reorder = reorder(config, pc, xscale);\n  pc.sortDimensionsByRowData = sortDimensionsByRowData(config);\n  pc.sortDimensions = sortDimensions(config, position);\n\n  // pairs of adjacent dimensions\n  pc.adjacent_pairs = adjacentPairs;\n  pc.interactive = interactive(flags);\n\n  // expose internal state\n  pc.xscale = xscale;\n  pc.ctx = ctx;\n  pc.canvas = canvas;\n  pc.g = () => pc._g;\n\n  // rescale for height, width and margins\n  // TODO currently assumes chart is brushable, and destroys old brushes\n  pc.resize = resize(config, pc, flags, events);\n\n  // highlight an array of data\n  pc.highlight = highlight(config, pc, canvas, events, ctx, position);\n  // clear highlighting\n  pc.unhighlight = unhighlight(config, pc, canvas);\n\n  // calculate 2d intersection of line a->b with line c->d\n  // points are objects with x and y properties\n  pc.intersection = intersection;\n\n  // Merges the canvases and SVG elements into one canvas element which is then passed into the callback\n  // (so you can choose to save it to disk, etc.)\n  pc.mergeParcoords = mergeParcoords(pc);\n  pc.brushModes = () => Object.getOwnPropertyNames(brush.modes);\n  pc.brushMode = brushMode(brush, config, pc);\n\n  // install brushes\n  install1DAxes(brush, config, pc, events);\n  install2DStrums(brush, config, pc, events, xscale);\n  installAngularBrush(brush, config, pc, events, xscale);\n  install1DAxesMulti(brush, config, pc, events);\n\n  pc.version = version;\n  // this descriptive text should live with other introspective methods\n  pc.toString = toString(config);\n  pc.toType = toType;\n  // try to coerce to number before returning type\n  pc.toTypeCoerceNumbers = toTypeCoerceNumbers;\n\n  return pc;\n};\n\nexport default ParCoords;\n"],"names":["renderQueue","func","_queue","rq","data","render","valid","invalidate","doFrame","chunk","splice","_rate","map","slice","add","concat","rate","value","arguments","length","remaining","clear","_invalidate","w","config","width","margin","right","left","brushExtents","state","pc","brushes","brushNodes","extents","Object","keys","dimensions","reduce","acc","cur","brush","undefined","brushSelection","extent","brushSelections","g","selectAll","each","d","select","forEach","dim","yExtent","yscale","call","move","reverse","renderBrushed","brushReset","dimension","brushed","event","selected","brushGroup","is_brushed","p","actives","filter","_brushRange","invert","within","bandwidth","predicate","every","type","some","Error","brushPredicate","brushUpdated","events","newSelection","brushFor","axis","_selector","brushRangeMax","range","_brush","brushY","on","sourceEvent","stopPropagation","node","install","createAxes","append","attr","style","uninstall","remove","install1DAxes","modes","drawBrushes","selector","id","enter","insert","indexOf","b","brushObject","exit","pos","axisBrushes","i","document","getElementById","dimExt","e","newBrush","push","lastBrushID","lastBrush","selection","toString","yExtents","_bs","j","f","k","ext","axisBrush","_this","install1DMultiAxes","strumRect","containmentTest","strum","p1","minX","p2","m1","b1","m2","b2","x","y","y1","y2","Math","min","max","crossesStrum","strums","test","d1","dims","d2","point","ids","getOwnPropertyNames","isNaN","crossTest","removeStrum","active","svg","onDragEnd","drawStrum","activePoint","_svg","points","_line","circles","_drag","drag","ev","maxX","minY","maxY","onDrag","top","h","height","bottom","dimensionsForPoint","xscale","getOrderedDimensionKeys","onDragStart","mouse","consecutive","first","second","install2DStrums","hypothenuse","a","sqrt","signedAngle","angle","PI","startAngle","arc","endAngle","tmp","arcs","c","asin","outerRadius","p3","_path","d3Arc","innerRadius","sAngle","uAngle","installAngularBrush","intersection","mergeParcoords","devicePixelRatio","window","mergedCanvas","createElement","canvas","foreground","clientWidth","clientHeight","context","getContext","fillStyle","fillRect","key","drawImage","DOMURL","URL","webkitURL","serializer","XMLSerializer","svgStr","serializeToString","src","btoa","img","Image","onload","callback","ranges","nodes","__data__","values","ranger","domain","includes","flipAxes","unshift","ii","dimRange","dimDomain","category","categoryIndex","categoryRangeValue","multiBrushData","idx","filtered","z","String","toUpperCase","currentMode","brushMode","mode","brushModes","dimensionLabels","title","flipAxisAndUpdatePCP","flip","parentElement","transition","duration","animationTime","scale","rotateLabels","delta","deltaY","dimensionTitleRotation","preventDefault","updateAxes","position","flags","g_data","axisElement","applyAxisConfig","text","brushable","reorderable","getRange","nullValueSeparator","nullValueSeparatorPadding","autoscale","ctx","defaultScales","_extent","getTime","scalePoint","tempDate","val","scaleTime","scaleLinear","counts","sort","tempArr","pop","categoricalRange","addBy","scaleOrdinal","strokeStyle","color","lineWidth","globalCompositeOperation","composite","globalAlpha","alpha","brushedColor","highlight","ctrlKey","html","outerHTML","replace","dat","parentNode","commonScale","global","t","detectDimensions","scales","bundleDimension","computeRealCentroids","row","isValid","applyDimensionDefaults","types","detectDimensionTypes","orient","ticks","innerTickSize","outerTickSize","tickPadding","index","removeAxes","_g","axes","axisDots","r","_r","marks","pow","beginPath","stroke","fill","axisCfg","axisLeft","axisRight","axisTop","axisBottom","tickValues","tickSizeInner","tickSizeOuter","tickFormat","dragging","__origin__","dx","sortDimensions","resize","reorder","firstDim","sortDimensionsByRowData","rowdata","reordered","highlighted","unhighlight","copy","assign","positionSortedKeys","pixelDifference","localeCompare","isBrushed","object","brushState","hasOwnProperty","layer","clearRect","alphaOnBrushed","computeCentroids","centroids","cols","$V","cx","cy","leftCentroid","clusterCentroids","get","rightCentroid","centroid","bundlingStrength","computeControlPoints","smoothness","cps","col","mid","diff","subtract","singleCurve","moveTo","showControlPoints","bezierCurveTo","getNullPosition","log","singlePath","lineTo","colorPath","_functor","v","pathBrushed","functor","renderBrushedDefault","renderBrushedQueue","brushedQueue","brushesToKeep","toType","match","toLowerCase","adjacentPairs","ret","arr","pathHighlight","classed","pathForeground","renderDefault","default","renderDefaultQueue","foregroundQueue","queue","toTypeCoerceNumbers","parseFloat","Number","parseInt","ascending","interactive","shadows","init","DefaultConfig","initState","userConfig","dimensionTitles","warn","eventTypes","dispatch","apply","computeClusterCentroids","Map","clusterCounts","scaled","has","set","count","_map","without","items","el","sideEffects","hideAxis","getset","obj","side_effects","prototype","old","previous","d3_rebind","target","source","method","_rebind","bindEvents","__","ParCoords","compute_real_centroids","adjacent_pairs","version"],"mappings":";;;;;;;;;;;AAEA,IAAMA,cAAc,SAAdA,WAAc,CAASC,IAAT,EAAe;MAC7BC,SAAS,EAAb;;UACU,IADV;;gBAEgB,uBAAW,EAF3B;;WAGW,kBAAW,EAHtB,CADiC;;MAM7BC,KAAK,SAALA,EAAK,CAASC,IAAT,EAAe;QAClBA,IAAJ,EAAUD,GAAGC,IAAH,CAAQA,IAAR;;;OAGPC,MAAH;GAJF;;KAOGA,MAAH,GAAY,YAAW;QACjBC,QAAQ,IAAZ;kBACcH,GAAGI,UAAH,GAAgB,YAAW;cAC/B,KAAR;KADF;;aAISC,OAAT,GAAmB;UACb,CAACF,KAAL,EAAY,OAAO,IAAP;UACRG,QAAQP,OAAOQ,MAAP,CAAc,CAAd,EAAiBC,KAAjB,CAAZ;YACMC,GAAN,CAAUX,IAAV;4BACsBO,OAAtB;;;;GAVJ;;KAgBGJ,IAAH,GAAU,UAASA,IAAT,EAAe;;aAEdA,KAAKS,KAAL,CAAW,CAAX,CAAT,CAFuB;WAGhBV,EAAP;GAHF;;KAMGW,GAAH,GAAS,UAASV,IAAT,EAAe;aACbF,OAAOa,MAAP,CAAcX,IAAd,CAAT;GADF;;KAIGY,IAAH,GAAU,UAASC,KAAT,EAAgB;QACpB,CAACC,UAAUC,MAAf,EAAuB,OAAOR,KAAP;YACfM,KAAR;WACOd,EAAP;GAHF;;KAMGiB,SAAH,GAAe,YAAW;WACjBlB,OAAOiB,MAAd;GADF;;;KAKGE,KAAH,GAAW,UAASpB,IAAT,EAAe;QACpB,CAACiB,UAAUC,MAAf,EAAuB;;aAEdhB,EAAP;;aAEOF,IAAT;WACOE,EAAP;GANF;;KASGI,UAAH,GAAgBe,WAAhB;;SAEOnB,EAAP;CA7DF;;ACFA,IAAMoB,IAAI,SAAJA,CAAI;SAAUC,OAAOC,KAAP,GAAeD,OAAOE,MAAP,CAAcC,KAA7B,GAAqCH,OAAOE,MAAP,CAAcE,IAA7D;CAAV;;ACGA,IAAMC,eAAe,SAAfA,YAAe,CAACC,KAAD,EAAQN,MAAR,EAAgBO,EAAhB;SAAuB,mBAAW;QAC7CC,OAD6C,GACrBF,KADqB,CAC7CE,OAD6C;QACpCC,UADoC,GACrBH,KADqB,CACpCG,UADoC;;;QAGjD,OAAOC,OAAP,KAAmB,WAAvB,EAAoC;aAC3BC,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BC,MAA/B,CAAsC,UAACC,GAAD,EAAMC,GAAN,EAAc;YACnDC,QAAQT,QAAQQ,GAAR,CAAd;;YAEIC,UAAUC,SAAV,IAAuBC,eAAeV,WAAWO,GAAX,CAAf,MAAoC,IAA/D,EAAqE;cAC/DA,GAAJ,IAAWC,MAAMG,MAAN,EAAX;;;eAGKL,GAAP;OAPK,EAQJ,EARI,CAAP;KADF,MAUO;;UAECM,kBAAkB,EAAxB;SACGC,CAAH,GACGC,SADH,CACa,QADb,EAEGC,IAFH,CAEQ,UAASC,CAAT,EAAY;wBACAA,CAAhB,IAAqBC,OAAO,IAAP,CAArB;OAHJ;;;aAOOd,IAAP,CAAYZ,OAAOa,UAAnB,EAA+Bc,OAA/B,CAAuC,aAAK;YACtCjB,QAAQe,CAAR,MAAeP,SAAnB,EAA8B;;;;YAIxBD,QAAQT,QAAQiB,CAAR,CAAd;YACIR,UAAUC,SAAd,EAAyB;cACjBU,MAAM5B,OAAOa,UAAP,CAAkBY,CAAlB,CAAZ;cACMI,UAAUnB,QAAQe,CAAR,EAAWrC,GAAX,CAAewC,IAAIE,MAAnB,CAAhB;;;;gBAIMV,MAAN,CAAa,CAAC,CAAC,CAAC,EAAF,EAAMS,QAAQ,CAAR,CAAN,CAAD,EAAoB,CAAC,EAAD,EAAKA,QAAQ,CAAR,CAAL,CAApB,CAAb;;;;;0BAKgBJ,CAAhB,EAAmBM,IAAnB,CAAwBd,KAAxB,EAA+Bc,IAA/B,CAAoCd,MAAMe,IAA1C,EAAgDH,QAAQI,OAAR,EAAhD;;;;;OAjBJ;;;SAyBGC,aAAH;;aAEO3B,EAAP;;GAlDiB;CAArB;;;;ACDA,IAAM4B,aAAa,SAAbA,UAAa,CAAC7B,KAAD,EAAQN,MAAR,EAAgBO,EAAhB;SAAuB,qBAAa;QAC7CC,OAD6C,GACjCF,KADiC,CAC7CE,OAD6C;;;QAGjD4B,cAAclB,SAAlB,EAA6B;aACpBmB,OAAP,GAAiB,KAAjB;UACI9B,GAAGe,CAAH,OAAWJ,SAAX,IAAwBX,GAAGe,CAAH,OAAW,IAAvC,EAA6C;WACxCA,CAAH,GACGC,SADH,CACa,QADb,EAEGC,IAFH,CAEQ,UAASC,CAAT,EAAY;iBACT,IAAP,EAAaM,IAAb,CAAkBvB,QAAQiB,CAAR,EAAWO,IAA7B,EAAmC,IAAnC;SAHJ;WAKGE,aAAH;;KARJ,MAUO;aACEG,OAAP,GAAiB,KAAjB;UACI9B,GAAGe,CAAH,OAAWJ,SAAX,IAAwBX,GAAGe,CAAH,OAAW,IAAvC,EAA6C;WACxCA,CAAH,GACGC,SADH,CACa,QADb,EAEGC,IAFH,CAEQ,UAASC,CAAT,EAAY;cACZA,MAAMW,SAAV,EAAqB;iBACd,IAAP,EAAaL,IAAb,CAAkBvB,QAAQiB,CAAR,EAAWO,IAA7B,EAAmC,IAAnC;kBACQP,CAAR,EAAWa,KAAX,CAAiBZ,OAAO,IAAP,CAAjB;SALJ;WAOGQ,aAAH;;;WAGG,KAAP;GA1BiB;CAAnB;;ACDA;;;AAGA,IAAMK,WAAW,SAAXA,QAAW,CAACjC,KAAD,EAAQN,MAAR,EAAgBwC,UAAhB;SAA+B,YAAM;QAC5C/B,UAD4C,GAC7BH,KAD6B,CAC5CG,UAD4C;;QAE9CgC,aAAa,SAAbA,UAAa;aACjBhC,WAAWiC,CAAX,KAAiBvB,eAAeV,WAAWiC,CAAX,CAAf,MAAkC,IADlC;KAAnB;;QAGMC,UAAUhC,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+B+B,MAA/B,CAAsCH,UAAtC,CAAhB;QACM/B,UAAUiC,QAAQvD,GAAR,CAAY,aAAK;UACzByD,cAAc1B,eAAeV,WAAWiC,CAAX,CAAf,CAApB;;UAEI,OAAO1C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BgB,MAAnC,KAA8C,UAAlD,EAA8D;eACrD,CACL9C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BgB,MAA5B,CAAmCD,YAAY,CAAZ,CAAnC,CADK,EAEL7C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BgB,MAA5B,CAAmCD,YAAY,CAAZ,CAAnC,CAFK,CAAP;OADF,MAKO;eACEA,WAAP;;KATY,CAAhB;;;;;;;QAkBIF,QAAQhD,MAAR,KAAmB,CAAvB,EAA0B,OAAOK,OAAOpB,IAAd;;;QAGpBmE,SAAS;YACP,cAACtB,CAAD,EAAIiB,CAAJ,EAAON,SAAP,EAAqB;YACrB,OAAOpC,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BkB,SAAnC,KAAiD,UAArD,EAAiE;;iBAG7DtC,QAAQ0B,SAAR,EAAmB,CAAnB,KAAyBpC,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BL,EAAEiB,CAAF,CAA5B,CAAzB,IACA1C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BL,EAAEiB,CAAF,CAA5B,KAAqChC,QAAQ0B,SAAR,EAAmB,CAAnB,CAFvC;SAFF,MAMO;iBACE1B,QAAQ0B,SAAR,EAAmB,CAAnB,KAAyBX,EAAEiB,CAAF,CAAzB,IAAiCjB,EAAEiB,CAAF,KAAQhC,QAAQ0B,SAAR,EAAmB,CAAnB,CAAhD;;OATS;cAYL,gBAACX,CAAD,EAAIiB,CAAJ,EAAON,SAAP,EAAqB;YACvB,OAAOpC,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BkB,SAAnC,KAAiD,UAArD,EAAiE;;iBAG7DtC,QAAQ0B,SAAR,EAAmB,CAAnB,KAAyBpC,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BL,EAAEiB,CAAF,CAA5B,CAAzB,IACA1C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BL,EAAEiB,CAAF,CAA5B,KAAqChC,QAAQ0B,SAAR,EAAmB,CAAnB,CAFvC;SAFF,MAMO;iBACE1B,QAAQ0B,SAAR,EAAmB,CAAnB,KAAyBX,EAAEiB,CAAF,CAAzB,IAAiCjB,EAAEiB,CAAF,KAAQhC,QAAQ0B,SAAR,EAAmB,CAAnB,CAAhD;;OApBS;cAuBL,gBAACX,CAAD,EAAIiB,CAAJ,EAAON,SAAP,EAAqB;eAEzB1B,QAAQ0B,SAAR,EAAmB,CAAnB,KAAyBpC,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BL,EAAEiB,CAAF,CAA5B,CAAzB,IACA1C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BL,EAAEiB,CAAF,CAA5B,KAAqChC,QAAQ0B,SAAR,EAAmB,CAAnB,CAFvC;;KAxBJ;;WA+BOpC,OAAOpB,IAAP,CAAYgE,MAAZ,CAAmB,aAAK;cACrBJ,WAAWS,SAAnB;aACO,KAAL;iBACSN,QAAQO,KAAR,CAAc,UAASR,CAAT,EAAYN,SAAZ,EAAuB;mBACnCW,OAAO/C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBS,IAA5B,EAAkC1B,CAAlC,EAAqCiB,CAArC,EAAwCN,SAAxC,CAAP;WADK,CAAP;aAGG,IAAL;iBACSO,QAAQS,IAAR,CAAa,UAASV,CAAT,EAAYN,SAAZ,EAAuB;mBAClCW,OAAO/C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBS,IAA5B,EAAkC1B,CAAlC,EAAqCiB,CAArC,EAAwCN,SAAxC,CAAP;WADK,CAAP;;gBAIM,IAAIiB,KAAJ,CAAU,6BAA6BrD,OAAOsD,cAA9C,CAAN;;KAXC,CAAP;GA1De;CAAjB;;ACCA,IAAMC,eAAe,SAAfA,YAAe,CAACvD,MAAD,EAASO,EAAT,EAAaiD,MAAb;SAAwB,wBAAgB;WACpDnB,OAAP,GAAiBoB,YAAjB;WACO1B,IAAP,CAAY,OAAZ,EAAqBxB,EAArB,EAAyBP,OAAOqC,OAAhC;OACGH,aAAH;GAHmB;CAArB;;AAMA,IAAMwB,WAAW,SAAXA,QAAW,CAACpD,KAAD,EAAQN,MAAR,EAAgBO,EAAhB,EAAoBiD,MAApB,EAA4BhB,UAA5B;SAA2C,UAC1DmB,IAD0D,EAE1DC,SAF0D,EAGvD;QACGC,gBACJ7D,OAAOa,UAAP,CAAkB8C,IAAlB,EAAwBR,IAAxB,KAAiC,QAAjC,GACInD,OAAOa,UAAP,CAAkB8C,IAAlB,EAAwB7B,MAAxB,CAA+BgC,KAA/B,GACE9D,OAAOa,UAAP,CAAkB8C,IAAlB,EAAwB7B,MAAxB,CAA+BgC,KAA/B,GAAuCnE,MAAvC,GAAgD,CADlD,CADJ,GAIIK,OAAOa,UAAP,CAAkB8C,IAAlB,EAAwB7B,MAAxB,CAA+BgC,KAA/B,GAAuC,CAAvC,CALN;;QAOMC,SAASC,OAAOJ,SAAP,EAAkBxC,MAAlB,CAAyB,CAAC,CAAC,CAAC,EAAF,EAAM,CAAN,CAAD,EAAW,CAAC,EAAD,EAAKyC,aAAL,CAAX,CAAzB,CAAf;;WAGGI,EADH,CACM,OADN,EACe,YAAW;UAClB3B,MAAM4B,WAAN,KAAsB,IAA1B,EAAgC;eACvBnC,IAAP,CAAY,YAAZ,EAA0BxB,EAA1B,EAA8BP,OAAOqC,OAArC;YACI,OAAOC,MAAM4B,WAAN,CAAkBC,eAAzB,KAA6C,UAAjD,EAA6D;gBACrDD,WAAN,CAAkBC,eAAlB;;;KALR,EASGF,EATH,CASM,OATN,EASe,YAAW;mBACTjE,MAAb,EAAqBO,EAArB,EAAyBiD,MAAzB,EAAiCjB,SAASjC,KAAT,EAAgBN,MAAhB,EAAwBwC,UAAxB,GAAjC;KAVJ,EAYGyB,EAZH,CAYM,KAZN,EAYa,YAAW;mBACPjE,MAAb,EAAqBO,EAArB,EAAyBiD,MAAzB,EAAiCjB,SAASjC,KAAT,EAAgBN,MAAhB,EAAwBwC,UAAxB,GAAjC;aACOT,IAAP,CAAY,UAAZ,EAAwBxB,EAAxB,EAA4BP,OAAOqC,OAAnC;KAdJ;;UAiBM7B,OAAN,CAAcmD,IAAd,IAAsBI,MAAtB;UACMtD,UAAN,CAAiBkD,IAAjB,IAAyBC,UAAUQ,IAAV,EAAzB;;WAEOL,MAAP;GAjCe;CAAjB;;ACNA,IAAMM,UAAU,SAAVA,OAAU,CAAC/D,KAAD,EAAQN,MAAR,EAAgBO,EAAhB,EAAoBiD,MAApB,EAA4BhB,UAA5B;SAA2C,YAAM;QAC3D,CAACjC,GAAGe,CAAH,EAAL,EAAa;SACRgD,UAAH;;;;QAIIrD,QAAQV,GACXe,CADW,GAEXiD,MAFW,CAEJ,OAFI,EAGXC,IAHW,CAGN,OAHM,EAGG,OAHH,EAIXhD,IAJW,CAIN,UAASC,CAAT,EAAY;aACT,IAAP,EAAaM,IAAb,CACE2B,SAASpD,KAAT,EAAgBN,MAAhB,EAAwBO,EAAxB,EAA4BiD,MAA5B,EAAoChB,UAApC,EAAgDf,CAAhD,EAAmDC,OAAO,IAAP,CAAnD,CADF;KALU,CAAd;UAUGH,SADH,CACa,MADb,EAEGkD,KAFH,CAES,YAFT,EAEuB,IAFvB,EAGGD,IAHH,CAGQ,GAHR,EAGa,CAAC,EAHd,EAIGA,IAJH,CAIQ,OAJR,EAIiB,EAJjB;;UAMMjD,SAAN,CAAgB,iBAAhB,EAAmCkD,KAAnC,CAAyC,MAAzC,EAAiD,aAAjD;;UAGGlD,SADH,CACa,aADb,EAEGkD,KAFH,CAES,MAFT,EAEiB,wBAFjB,EAGGA,KAHH,CAGS,QAHT,EAGmB,iBAHnB;;UAKMlD,SAAN,CAAgB,cAAhB,EAAgCkD,KAAhC,CAAsC,MAAtC,EAA8C,iBAA9C;;OAEGpE,YAAH,GAAkBA,aAAaC,KAAb,EAAoBN,MAApB,EAA4BO,EAA5B,CAAlB;OACG4B,UAAH,GAAgBA,WAAW7B,KAAX,EAAkBN,MAAlB,EAA0BO,EAA1B,CAAhB;WACOA,EAAP;GAhCc;CAAhB;;ACLA,IAAMmE,YAAY,SAAZA,SAAY,CAACpE,KAAD,EAAQC,EAAR;SAAe,YAAM;QACjCA,GAAGe,CAAH,OAAWJ,SAAX,IAAwBX,GAAGe,CAAH,OAAW,IAAvC,EACEf,GAAGe,CAAH,GACGC,SADH,CACa,QADb,EAEGoD,MAFH;;UAIInE,OAAN,GAAgB,EAAhB;WACOD,GAAGF,YAAV;WACOE,GAAG4B,UAAV;GARgB;CAAlB;;ACKA,IAAMyC,gBAAgB,SAAhBA,aAAgB,CAACpC,UAAD,EAAaxC,MAAb,EAAqBO,EAArB,EAAyBiD,MAAzB,EAAoC;MAClDlD,QAAQ;aACH,EADG;gBAEA;GAFd;;aAKWuE,KAAX,CAAiB,SAAjB,IAA8B;aACnBR,QAAQ/D,KAAR,EAAeN,MAAf,EAAuBO,EAAvB,EAA2BiD,MAA3B,EAAmChB,UAAnC,CADmB;eAEjBkC,UAAUpE,KAAV,EAAiBC,EAAjB,CAFiB;cAGlBgC,SAASjC,KAAT,EAAgBN,MAAhB,EAAwBwC,UAAxB,CAHkB;gBAIhBnC,aAAaC,KAAb,EAAoBN,MAApB,EAA4BO,EAA5B;GAJd;CANF;;ACHA,IAAMuE,cAAc,SAAdA,WAAc,CAACtE,OAAD,EAAUR,MAAV,EAAkBO,EAAlB,EAAsBoD,IAAtB,EAA4BoB,QAA5B,EAAyC;MACrD5D,oBAAiB4D,SAASxD,SAAT,CAAmB,QAAnB,EAA6B3C,IAA7B,CAAkC4B,OAAlC,EAA2C;WAAKiB,EAAEuD,EAAP;GAA3C,CAAvB;;oBAGGC,KADH,GAEGC,MAFH,CAEU,GAFV,EAEe,QAFf,EAGGV,IAHH,CAGQ,OAHR,EAGiB,OAHjB,EAIGA,IAJH,CAIQ,WAJR,EAIqBb,IAJrB,EAKGa,IALH,CAMI,IANJ,EAOI;WAAK,WAAW7D,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BsE,OAA/B,CAAuCxB,IAAvC,CAAX,GAA0D,GAA1D,GAAgEyB,EAAEJ,EAAvE;GAPJ,EASGxD,IATH,CASQ,UAAS6D,WAAT,EAAsB;gBACdpE,KAAZ,CAAkBS,OAAO,IAAP,CAAlB;GAVJ;;oBAaeF,IAAf,CAAoB,UAAS6D,WAAT,EAAsB;WACjC,IAAP,EACGb,IADH,CACQ,OADR,EACiB,OADjB,EAEGjD,SAFH,CAEa,UAFb,EAGGkD,KAHH,CAGS,gBAHT,EAG2B,YAAW;UAC5BxD,QAAQoE,YAAYpE,KAA1B;UACIoE,YAAYL,EAAZ,KAAmBxE,QAAQb,MAAR,GAAiB,CAApC,IAAyCsB,UAAUC,SAAvD,EAAkE;eACzD,KAAP;OADF,MAEO;eACE,MAAP;;KARN;GADF;;oBAceoE,IAAf,GAAsBX,MAAtB;CA9BF;;ACAA;AACA,IAAMpC,aAAW,SAAXA,QAAW,CAACjC,KAAD,EAAQN,MAAR,EAAgBO,EAAhB,EAAoBiD,MAApB,EAA4BhB,UAA5B,EAA2C;MAClDhC,OADkD,GACtCF,KADsC,CAClDE,OADkD;;;MAGpDiC,aAAa,SAAbA,UAAa,CAACC,CAAD,EAAI6C,GAAJ,EAAY;QACvBC,cAAchF,QAAQkC,CAAR,CAApB;;SAEK,IAAI+C,IAAI,CAAb,EAAgBA,IAAID,YAAY7F,MAAhC,EAAwC8F,GAAxC,EAA6C;UACrCxE,QAAQyE,SAASC,cAAT,CAAwB,WAAWJ,GAAX,GAAiB,GAAjB,GAAuBE,CAA/C,CAAd;;UAEItE,eAAeF,KAAf,MAA0B,IAA9B,EAAoC;eAC3B,IAAP;;;;WAIG,KAAP;GAXF;;MAcM0B,UAAUhC,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+B+B,MAA/B,CAAsCH,UAAtC,CAAhB;MACM/B,UAAUiC,QAAQvD,GAAR,CAAY,aAAK;QACzBoG,cAAchF,QAAQkC,CAAR,CAApB;;WAEO8C,YACJpG,GADI,CACA,UAACqC,CAAD,EAAIgE,CAAJ;aACHtE,eACEuE,SAASC,cAAT,CACE,WAAWhF,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BsE,OAA/B,CAAuCzC,CAAvC,CAAX,GAAuD,GAAvD,GAA6D+C,CAD/D,CADF,CADG;KADA,EAQJrG,GARI,CAQA,UAACqC,CAAD,EAAIgE,CAAJ,EAAU;UACThE,MAAM,IAAN,IAAcA,MAAMP,SAAxB,EAAmC;eAC1B,IAAP;OADF,MAEO,IAAI,OAAOlB,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BgB,MAAnC,KAA8C,UAAlD,EAA8D;eAC5D,CACL9C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BgB,MAA5B,CAAmCrB,EAAE,CAAF,CAAnC,CADK,EAELzB,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BgB,MAA5B,CAAmCrB,EAAE,CAAF,CAAnC,CAFK,CAAP;OADK,MAKA;eACEA,CAAP;;KAjBC,CAAP;GAHc,CAAhB;;;;;;;;MA+BIkB,QAAQhD,MAAR,KAAmB,CAAvB,EAA0B,OAAOK,OAAOpB,IAAd;;;MAGpBmE,SAAS;UACP,cAACtB,CAAD,EAAIiB,CAAJ,EAAO+C,CAAP,EAAa;UACXG,SAASlF,QAAQ+E,CAAR,CAAf;;UAEI,OAAOzF,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BkB,SAAnC,KAAiD,UAArD,EAAiE;;;;;;;+BAE/C4C,MAAhB,8HAAwB;gBAAbC,CAAa;;gBAClBA,MAAM,IAAN,IAAcA,MAAM3E,SAAxB,EAAmC;;;;gBAKjC2E,EAAE,CAAF,KAAQ7F,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BL,EAAEiB,CAAF,CAA5B,CAAR,IACA1C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BL,EAAEiB,CAAF,CAA5B,KAAqCmD,EAAE,CAAF,CAFvC,EAGE;qBACO,IAAP;;;;;;;;;;;;;;;;;;eAIG,KAAP;OAfF,MAgBO;;;;;;gCACWD,MAAhB,mIAAwB;gBAAbC,EAAa;;gBAClBA,OAAM,IAAN,IAAcA,OAAM3E,SAAxB,EAAmC;;;;gBAI/B2E,GAAE,CAAF,KAAQpE,EAAEiB,CAAF,CAAR,IAAgBjB,EAAEiB,CAAF,KAAQmD,GAAE,CAAF,CAA5B,EAAkC;qBACzB,IAAP;;;;;;;;;;;;;;;;;;eAIG,KAAP;;KA/BS;YAkCL,gBAACpE,CAAD,EAAIiB,CAAJ,EAAO+C,CAAP,EAAa;UACbG,SAASlF,QAAQ+E,CAAR,CAAf;;UAEI,OAAOzF,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BkB,SAAnC,KAAiD,UAArD,EAAiE;;;;;;;gCAE/C4C,MAAhB,mIAAwB;gBAAbC,CAAa;;gBAClBA,MAAM,IAAN,IAAcA,MAAM3E,SAAxB,EAAmC;;;;gBAKjC2E,EAAE,CAAF,KAAQ7F,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BL,EAAEiB,CAAF,CAA5B,CAAR,IACA1C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BL,EAAEiB,CAAF,CAA5B,KAAqCmD,EAAE,CAAF,CAFvC,EAGE;qBACO,IAAP;;;;;;;;;;;;;;;;;;eAIG,KAAP;OAfF,MAgBO;;;;;;gCACWD,MAAhB,mIAAwB;gBAAbC,GAAa;;gBAClBA,QAAM,IAAN,IAAcA,QAAM3E,SAAxB,EAAmC;;;;gBAI/B2E,IAAE,CAAF,KAAQpE,EAAEiB,CAAF,CAAR,IAAgBjB,EAAEiB,CAAF,KAAQmD,IAAE,CAAF,CAA5B,EAAkC;qBACzB,IAAP;;;;;;;;;;;;;;;;;;eAIG,KAAP;;KAhES;YAmEL,gBAACpE,CAAD,EAAIiB,CAAJ,EAAO+C,CAAP,EAAa;UACbG,SAASlF,QAAQ+E,CAAR,CAAf;;;;;;;8BAEgBG,MAAhB,mIAAwB;cAAbC,CAAa;;cAClBA,MAAM,IAAN,IAAcA,MAAM3E,SAAxB,EAAmC;;;;cAKjC2E,EAAE,CAAF,KAAQ7F,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BL,EAAEiB,CAAF,CAA5B,CAAR,IACA1C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BL,EAAEiB,CAAF,CAA5B,KAAqCmD,EAAE,CAAF,CAFvC,EAGE;mBACO,IAAP;;;;;;;;;;;;;;;;;;aAIG,KAAP;;GAnFJ;;SAuFO7F,OAAOpB,IAAP,CAAYgE,MAAZ,CAAmB,aAAK;YACrBJ,WAAWS,SAAnB;WACO,KAAL;eACSN,QAAQO,KAAR,CAAc,UAACR,CAAD,EAAI+C,CAAJ;iBACnB1C,OAAO/C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBS,IAA5B,EAAkC1B,CAAlC,EAAqCiB,CAArC,EAAwC+C,CAAxC,CADmB;SAAd,CAAP;WAGG,IAAL;eACS9C,QAAQS,IAAR,CAAa,UAACV,CAAD,EAAI+C,CAAJ;iBAClB1C,OAAO/C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBS,IAA5B,EAAkC1B,CAAlC,EAAqCiB,CAArC,EAAwC+C,CAAxC,CADkB;SAAb,CAAP;;cAIM,IAAIpC,KAAJ,CAAU,6BAA6BrD,OAAOsD,cAA9C,CAAN;;GAXC,CAAP;CA3IF;;ACEA,IAAMC,iBAAe,SAAfA,YAAe,CAACvD,MAAD,EAASO,EAAT,EAAaiD,MAAb;SAAwB,wBAAgB;WACpDnB,OAAP,GAAiBoB,YAAjB;WACO1B,IAAP,CAAY,OAAZ,EAAqBxB,EAArB,EAAyBP,OAAOqC,OAAhC;OACGH,aAAH;GAHmB;CAArB;;AAMA,IAAM4D,WAAW,SAAXA,QAAW,CAACxF,KAAD,EAAQN,MAAR,EAAgBO,EAAhB,EAAoBiD,MAApB,EAA4BhB,UAA5B;SAA2C,UAC1DmB,IAD0D,EAE1DC,SAF0D,EAGvD;QACKpD,OADL,GAC6BF,KAD7B,CACKE,OADL;QACcC,UADd,GAC6BH,KAD7B,CACcG,UADd;;;QAGGoD,gBACJ7D,OAAOa,UAAP,CAAkB8C,IAAlB,EAAwBR,IAAxB,KAAiC,QAAjC,GACInD,OAAOa,UAAP,CAAkB8C,IAAlB,EAAwB7B,MAAxB,CAA+BgC,KAA/B,GACE9D,OAAOa,UAAP,CAAkB8C,IAAlB,EAAwB7B,MAAxB,CAA+BgC,KAA/B,GAAuCnE,MAAvC,GAAgD,CADlD,CADJ,GAIIK,OAAOa,UAAP,CAAkB8C,IAAlB,EAAwB7B,MAAxB,CAA+BgC,KAA/B,GAAuC,CAAvC,CALN;;QAOM7C,QAAQ+C,SAAS5C,MAAT,CAAgB,CAAC,CAAC,CAAC,EAAF,EAAM,CAAN,CAAD,EAAW,CAAC,EAAD,EAAKyC,aAAL,CAAX,CAAhB,CAAd;QACMmB,KAAKxE,QAAQmD,IAAR,IAAgBnD,QAAQmD,IAAR,EAAchE,MAA9B,GAAuC,CAAlD;QACMyE,OACJ,WAAWzD,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BsE,OAA/B,CAAuCxB,IAAvC,CAAX,GAA0D,GAA1D,GAAgEqB,EADlE;;QAGIxE,QAAQmD,IAAR,CAAJ,EAAmB;cACTA,IAAR,EAAcoC,IAAd,CAAmB;cAAA;oBAAA;;OAAnB;KADF,MAMO;cACGpC,IAAR,IAAgB,CAAC,EAAEqB,MAAF,EAAM/D,YAAN,EAAamD,UAAb,EAAD,CAAhB;;;QAGE3D,WAAWkD,IAAX,CAAJ,EAAsB;iBACTA,IAAX,EAAiBoC,IAAjB,CAAsB,EAAEf,MAAF,EAAMZ,UAAN,EAAtB;KADF,MAEO;iBACMT,IAAX,IAAmB,CAAC,EAAEqB,MAAF,EAAMZ,UAAN,EAAD,CAAnB;;;UAICH,EADH,CACM,OADN,EACe,YAAW;UAClB3B,MAAM4B,WAAN,KAAsB,IAA1B,EAAgC;eACvBnC,IAAP,CAAY,YAAZ,EAA0BxB,EAA1B,EAA8BP,OAAOqC,OAArC;YACI,OAAOC,MAAM4B,WAAN,CAAkBC,eAAzB,KAA6C,UAAjD,EAA6D;gBACrDD,WAAN,CAAkBC,eAAlB;;;KALR,EASGF,EATH,CASM,OATN,EASe,UAAS4B,CAAT,EAAY;;qBAGrB7F,MADF,EAEEO,EAFF,EAGEiD,MAHF,EAIEjB,WAASjC,KAAT,EAAgBN,MAAhB,EAAwBO,EAAxB,EAA4BiD,MAA5B,EAAoChB,UAApC,CAJF;KAXJ,EAiBGyB,EAjBH,CAiBM,KAjBN,EAiBa,YAAW;;UAEd+B,cAAcxF,QAAQmD,IAAR,EAAcnD,QAAQmD,IAAR,EAAchE,MAAd,GAAuB,CAArC,EAAwCqF,EAA5D;UACMiB,YAAYP,SAASC,cAAT,CAChB,WACEhF,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BsE,OAA/B,CAAuCxB,IAAvC,CADF,GAEE,GAFF,GAGEqC,WAJc,CAAlB;UAMME,YAAY/E,eAAe8E,SAAf,CAAlB;;UAGEC,cAAchF,SAAd,IACAgF,cAAc,IADd,IAEAA,UAAU,CAAV,MAAiBA,UAAU,CAAV,CAHnB,EAIE;iBACS5F,KAAT,EAAgBN,MAAhB,EAAwBO,EAAxB,EAA4BiD,MAA5B,EAAoChB,UAApC,EAAgDmB,IAAhD,EAAsDC,SAAtD;;oBAEYpD,QAAQmD,IAAR,CAAZ,EAA2B3D,MAA3B,EAAmCO,EAAnC,EAAuCoD,IAAvC,EAA6CC,SAA7C;;uBAEa5D,MAAb,EAAqBO,EAArB,EAAyBiD,MAAzB,EACEjB,WAASjC,KAAT,EAAgBN,MAAhB,EAAwBO,EAAxB,EAA4BiD,MAA5B,EAAoChB,UAApC,CADF;OATF,MAYO;YAEHF,MAAM4B,WAAN,IACA5B,MAAM4B,WAAN,CAAkBiC,QAAlB,OAAiC,qBADjC,IAEA7D,MAAM4D,SAAN,KAAoB,IAHtB,EAIE;aACG/D,UAAH,CAAcwB,IAAd;;;;aAIG5B,IAAP,CAAY,UAAZ,EAAwBxB,EAAxB,EAA4BP,OAAOqC,OAAnC;KAlDJ;;WAqDOpB,KAAP;GAvFe;CAAjB;;ACNA;;;;;;;;;AASA,IAAMZ,iBAAe,SAAfA,YAAe,CAACC,KAAD,EAAQN,MAAR,EAAgBO,EAAhB,EAAoBiD,MAApB,EAA4BhB,UAA5B;SAA2C,mBAAW;QACjEhC,OADiE,GACrDF,KADqD,CACjEE,OADiE;;;QAGrE,OAAOE,OAAP,KAAmB,WAAvB,EAAoC;aAC3BC,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BC,MAA/B,CAAsC,UAACC,GAAD,EAAMC,GAAN,EAAWuE,GAAX,EAAmB;YACxDC,cAAchF,QAAQQ,GAAR,CAApB;;YAEIwE,gBAAgBtE,SAAhB,IAA6BsE,gBAAgB,IAAjD,EAAuD;cACjDxE,GAAJ,IAAW,EAAX;SADF,MAEO;cACDA,GAAJ,IAAWwE,YAAY1E,MAAZ,CAAmB,UAACW,CAAD,EAAIiB,CAAJ,EAAO+C,CAAP,EAAa;gBACnC3B,QAAQ3C,eACZuE,SAASC,cAAT,CAAwB,WAAWJ,GAAX,GAAiB,GAAjB,GAAuBE,CAA/C,CADY,CAAd;gBAGI3B,UAAU,IAAd,EAAoB;kBACdrC,EAAEsE,IAAF,CAAOjC,KAAP,CAAJ;;;mBAGKrC,CAAP;WARS,EASR,EATQ,CAAX;;;eAYKV,GAAP;OAlBK,EAmBJ,EAnBI,CAAP;KADF,MAqBO;;;aAGEH,IAAP,CAAYZ,OAAOa,UAAnB,EAA+Bc,OAA/B,CAAuC,UAACF,CAAD,EAAI8D,GAAJ,EAAY;YAC7C7E,QAAQe,CAAR,MAAeP,SAAf,IAA4BR,QAAQe,CAAR,MAAe,IAA/C,EAAqD;;;;YAI/CG,MAAM5B,OAAOa,UAAP,CAAkBY,CAAlB,CAAZ;;YAEM2E,WAAW1F,QAAQe,CAAR,EAAWrC,GAAX,CAAe;iBAAKyG,EAAEzG,GAAF,CAAMwC,IAAIE,MAAV,CAAL;SAAf,CAAjB;;YAEMuE,MAAMD,SAAShH,GAAT,CAAa,UAACyG,CAAD,EAAIS,CAAJ,EAAU;cAC3BvC,SAAS+B,SAASxF,KAAT,EAAgBN,MAAhB,EAAwBO,EAAxB,EAA4BiD,MAA5B,EAAoChB,UAApC,EACbf,CADa,EAEbC,OAAO,kBAAkB6D,GAAzB,CAFa,CAAf;;;iBAMOnE,MAAP,CAAc,CAAC,CAAC,CAAC,EAAF,EAAMyE,EAAE,CAAF,CAAN,CAAD,EAAc,CAAC,EAAD,EAAKA,EAAE,CAAF,CAAL,CAAd,CAAd;;iBAEO;gBACDS,CADC;mBAEEvC,MAFF;iBAGA8B;WAHP;SATU,CAAZ;;gBAgBQpE,CAAR,IAAa4E,GAAb;;oBAEYA,GAAZ,EAAiBrG,MAAjB,EAAyBO,EAAzB,EAA6BkB,CAA7B,EAAgCC,OAAO,kBAAkB6D,GAAzB,CAAhC;;;;;YAKI5D,OAAJ,CAAY,UAAC4E,CAAD,EAAIC,CAAJ,EAAU;iBACb,YAAYjB,GAAZ,GAAkB,GAAlB,GAAwBiB,CAA/B,EACGzE,IADH,CACQwE,EAAEtF,KADV,EAEGc,IAFH,CAEQwE,EAAEtF,KAAF,CAAQe,IAFhB,EAEsBuE,EAAEE,GAAF,CAAMxE,OAAN,EAFtB;SADF;OAhCF;;;SAwCGC,aAAH;;aAEO3B,EAAP;;GArEiB;CAArB;;;;ACXA,IAAM4B,eAAa,SAAbA,UAAa,CAAC7B,KAAD,EAAQN,MAAR,EAAgBO,EAAhB;SAAuB,qBAAa;QAC7CC,OAD6C,GACjCF,KADiC,CAC7CE,OAD6C;;;QAGjD4B,cAAclB,SAAlB,EAA6B;UACvBX,GAAGe,CAAH,OAAWJ,SAAX,IAAwBX,GAAGe,CAAH,OAAW,IAAvC,EAA6C;eACpCV,IAAP,CAAYZ,OAAOa,UAAnB,EAA+Bc,OAA/B,CAAuC,UAACF,CAAD,EAAI8D,GAAJ,EAAY;cAC3CmB,YAAYlG,QAAQiB,CAAR,CAAlB;;oBAEUE,OAAV,CAAkB,UAACkE,CAAD,EAAIJ,CAAJ,EAAU;gBACpBxE,QAAQyE,SAASC,cAAT,CAAwB,WAAWJ,GAAX,GAAiB,GAAjB,GAAuBE,CAA/C,CAAd;gBACItE,eAAeF,KAAf,MAA0B,IAA9B,EAAoC;iBAC/BK,CAAH,GACGI,MADH,CACU,YAAY6D,GAAZ,GAAkB,GAAlB,GAAwBE,CADlC,EAEG1D,IAFH,CAEQ8D,EAAE5E,KAAF,CAAQe,IAFhB,EAEsB,IAFtB;;WAHJ;SAHF;;WAaGE,aAAH;;KAfJ,MAiBO;UACD3B,GAAGe,CAAH,OAAWJ,SAAX,IAAwBX,GAAGe,CAAH,OAAW,IAAvC,EAA6C;YACrCoF,YAAYlG,QAAQ4B,SAAR,CAAlB;YACMmD,MAAM5E,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BsE,OAA/B,CAAuC/C,SAAvC,CAAZ;;kBAEUT,OAAV,CAAkB,UAACkE,CAAD,EAAIJ,CAAJ,EAAU;cACpBxE,QAAQyE,SAASC,cAAT,CAAwB,WAAWJ,GAAX,GAAiB,GAAjB,GAAuBE,CAA/C,CAAd;cACItE,eAAeF,KAAf,MAA0B,IAA9B,EAAoC;eAC/BK,CAAH,GACGI,MADH,CACU,YAAY6D,GAAZ,GAAkB,GAAlB,GAAwBE,CADlC,EAEG1D,IAFH,CAEQ8D,EAAE5E,KAAF,CAAQe,IAFhB,EAEsB,IAFtB;;gBAII,OAAO6D,EAAEvD,KAAT,KAAmB,UAAvB,EAAmC;gBAC/BA,KAAF,CAAQZ,OAAO,YAAY6D,GAAZ,GAAkB,GAAlB,GAAwBE,CAA/B,CAAR;;;SARN;;WAaGvD,aAAH;;;WAGGyE,OAAP;GAzCiB;CAAnB;;ACAA,IAAMjD,aAAW,SAAXA,QAAW,CAACpD,KAAD,EAAQN,MAAR,EAAgBO,EAAhB,EAAoBiD,MAApB,EAA4BhB,UAA5B;SAA2C,UAC1DmB,IAD0D,EAE1DC,SAF0D,EAGvD;QACKpD,OADL,GACiBF,KADjB,CACKE,OADL;;aAEMF,KAAT,EAAgBN,MAAhB,EAAwBO,EAAxB,EAA4BiD,MAA5B,EAAoChB,UAApC,EAAgDmB,IAAhD,EAAsDC,SAAtD;gBACYpD,QAAQmD,IAAR,CAAZ,EAA2B3D,MAA3B,EAAmCO,EAAnC,EAAuCoD,IAAvC,EAA6CC,SAA7C;GANe;CAAjB;;ACEA,IAAMS,YAAU,SAAVA,OAAU,CAAC/D,KAAD,EAAQN,MAAR,EAAgBO,EAAhB,EAAoBiD,MAApB,EAA4BhB,UAA5B;SAA2C,YAAM;QAC3D,CAACjC,GAAGe,CAAH,EAAL,EAAa;SACRgD,UAAH;;;OAGChD,CAAH,GACGiD,MADH,CACU,OADV,EAEGC,IAFH,CAEQ,IAFR,EAEc,UAAC/C,CAAD,EAAIgE,CAAJ;aAAU,iBAAiBA,CAA3B;KAFd,EAGGjB,IAHH,CAGQ,OAHR,EAGiB,aAHjB,EAIGA,IAJH,CAIQ,WAJR,EAIqB;aAAK/C,CAAL;KAJrB,EAKGD,IALH,CAKQ,UAASC,CAAT,EAAY;iBACPnB,KAAT,EAAgBN,MAAhB,EAAwBO,EAAxB,EAA4BiD,MAA5B,EAAoChB,UAApC,EAAgDf,CAAhD,EAAmDC,OAAO,IAAP,CAAnD;KANJ;;OASGrB,YAAH,GAAkBA,eAAaC,KAAb,EAAoBN,MAApB,EAA4BO,EAA5B,EAAgCiD,MAAhC,EAAwChB,UAAxC,CAAlB;OACGL,UAAH,GAAgBA,aAAW7B,KAAX,EAAkBN,MAAlB,EAA0BO,EAA1B,CAAhB;WACOA,EAAP;GAhBc;CAAhB;;ACLA,IAAMmE,cAAY,SAAZA,SAAY,CAACpE,KAAD,EAAQC,EAAR;SAAe,YAAM;QACjCA,GAAGe,CAAH,OAAWJ,SAAX,IAAwBX,GAAGe,CAAH,OAAW,IAAvC,EACEf,GAAGe,CAAH,GACGC,SADH,CACa,cADb,EAEGoD,MAFH;;UAIInE,OAAN,GAAgB,EAAhB;WACOD,GAAGF,YAAV;WACOE,GAAG4B,UAAV;GARgB;CAAlB;;ACKA,IAAMyE,qBAAqB,SAArBA,kBAAqB,CAACpE,UAAD,EAAaxC,MAAb,EAAqBO,EAArB,EAAyBiD,MAAzB,EAAoC;MACvDlD,QAAQ;aACH,EADG;gBAEA;GAFd;;aAKWuE,KAAX,CAAiB,eAAjB,IAAoC;aACzBR,UAAQ/D,KAAR,EAAeN,MAAf,EAAuBO,EAAvB,EAA2BiD,MAA3B,EAAmChB,UAAnC,CADyB;eAEvBkC,YAAUpE,KAAV,EAAiBC,EAAjB,CAFuB;cAGxBgC,WAASjC,KAAT,EAAgBN,MAAhB,EAAwBwC,UAAxB,CAHwB;gBAItBnC,eAAaC,KAAb,EAAoBN,MAApB,EAA4BO,EAA5B;GAJd;CANF;;ACLA,IAAMmE,cAAY,SAAZA,SAAY,CAACpE,KAAD,EAAQC,EAAR;SAAe,YAAM;OAClC2F,SAAH,CACGxE,MADH,CACU,KADV,EAEGA,MAFH,CAEU,UAFV,EAGGiD,MAHH;OAIGuB,SAAH,CACGxE,MADH,CACU,KADV,EAEGA,MAFH,CAEU,mBAFV,EAGGiD,MAHH;OAIGV,EAAH,CAAM,oBAAN,EAA4B/C,SAA5B;WACOX,GAAG4B,UAAV;;UAEM0E,SAAN,GAAkB3F,SAAlB;GAZgB;CAAlB;;ACAA;AACA,IAAM4F,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAQ9G,KAAR;SAAkB,aAAK;QACvC+G,KAAK,CAACD,MAAMC,EAAN,CAAS,CAAT,IAAcD,MAAME,IAArB,EAA2BF,MAAMC,EAAN,CAAS,CAAT,IAAcD,MAAME,IAA/C,CAAX;QACEC,KAAK,CAACH,MAAMG,EAAN,CAAS,CAAT,IAAcH,MAAME,IAArB,EAA2BF,MAAMG,EAAN,CAAS,CAAT,IAAcH,MAAME,IAA/C,CADP;QAEEE,KAAK,IAAIlH,QAAQ+G,GAAG,CAAH,CAFnB;QAGEI,KAAKJ,GAAG,CAAH,KAAS,IAAIG,EAAb,CAHP;QAIEE,KAAK,IAAIpH,QAAQiH,GAAG,CAAH,CAJnB;QAKEI,KAAKJ,GAAG,CAAH,KAAS,IAAIG,EAAb,CALP;;QAOME,IAAI7E,EAAE,CAAF,CAAV;QACE8E,IAAI9E,EAAE,CAAF,CADN;QAEE+E,KAAKN,KAAKI,CAAL,GAASH,EAFhB;QAGEM,KAAKL,KAAKE,CAAL,GAASD,EAHhB;;WAKOE,IAAIG,KAAKC,GAAL,CAASH,EAAT,EAAaC,EAAb,CAAJ,IAAwBF,IAAIG,KAAKE,GAAL,CAASJ,EAAT,EAAaC,EAAb,CAAnC;GAbsB;CAAxB;;AAgBA,IAAMI,eAAe,SAAfA,YAAe,CAACxH,KAAD,EAAQN,MAAR;SAAmB,UAACyB,CAAD,EAAIuD,EAAJ,EAAW;QAC7C+B,QAAQzG,MAAMyH,MAAN,CAAa/C,EAAb,CAAZ;QACEgD,OAAOlB,gBAAgBC,KAAhB,EAAuBzG,MAAMyH,MAAN,CAAa9H,KAAb,CAAmB+E,EAAnB,CAAvB,CADT;QAEEiD,KAAKlB,MAAMmB,IAAN,CAAW9H,IAFlB;QAGE+H,KAAKpB,MAAMmB,IAAN,CAAW/H,KAHlB;QAIEsH,KAAKzH,OAAOa,UAAP,CAAkBoH,EAAlB,EAAsBnG,MAJ7B;QAKE4F,KAAK1H,OAAOa,UAAP,CAAkBsH,EAAlB,EAAsBrG,MAL7B;QAMEsG,QAAQ,CAACX,GAAGhG,EAAEwG,EAAF,CAAH,IAAYlB,MAAME,IAAnB,EAAyBS,GAAGjG,EAAE0G,EAAF,CAAH,IAAYpB,MAAME,IAA3C,CANV;WAOOe,KAAKI,KAAL,CAAP;GARmB;CAArB;;AAWA,IAAM7F,aAAW,SAAXA,QAAW,CAACC,UAAD,EAAalC,KAAb,EAAoBN,MAApB,EAA+B;;MAExCqI,MAAM1H,OAAO2H,mBAAP,CAA2BhI,MAAMyH,MAAjC,EAAyCnF,MAAzC,CAAgD;WAAK,CAAC2F,MAAM9G,CAAN,CAAN;GAAhD,CAAZ;MACEY,UAAUrC,OAAOpB,IADnB;;MAGIyJ,IAAI1I,MAAJ,KAAe,CAAnB,EAAsB;WACb0C,OAAP;;;MAGImG,YAAYV,aAAaxH,KAAb,EAAoBN,MAApB,CAAlB;;SAEOqC,QAAQO,MAAR,CAAe,aAAK;YACjBJ,WAAWS,SAAnB;WACO,KAAL;eACSoF,IAAInF,KAAJ,CAAU;iBAAMsF,UAAU/G,CAAV,EAAauD,EAAb,CAAN;SAAV,CAAP;WACG,IAAL;eACSqD,IAAIjF,IAAJ,CAAS;iBAAMoF,UAAU/G,CAAV,EAAauD,EAAb,CAAN;SAAT,CAAP;;cAEM,IAAI3B,KAAJ,CAAU,6BAA6BrD,OAAOsD,cAA9C,CAAN;;GAPC,CAAP;CAXF;;AC5BA,IAAMmF,cAAc,SAAdA,WAAc,CAACnI,KAAD,EAAQC,EAAR,EAAe;MAC3BwG,QAAQzG,MAAMyH,MAAN,CAAazH,MAAMyH,MAAN,CAAaW,MAA1B,CAAd;MACEC,MAAMpI,GAAG2F,SAAH,CAAaxE,MAAb,CAAoB,KAApB,EAA2BA,MAA3B,CAAkC,UAAlC,CADR;;SAGOpB,MAAMyH,MAAN,CAAazH,MAAMyH,MAAN,CAAaW,MAA1B,CAAP;MACInH,SAAJ,CAAc,gBAAgBwF,MAAMmB,IAAN,CAAWzC,CAAzC,EAA4Cd,MAA5C;MACIpD,SAAJ,CAAc,kBAAkBwF,MAAMmB,IAAN,CAAWzC,CAA3C,EAA8Cd,MAA9C;CANF;;ACGA,IAAMiE,YAAY,SAAZA,SAAY,CAACpG,UAAD,EAAalC,KAAb,EAAoBN,MAApB,EAA4BO,EAA5B,EAAgCiD,MAAhC;SAA2C,YAAM;QAC3DuD,QAAQzG,MAAMyH,MAAN,CAAazH,MAAMyH,MAAN,CAAaW,MAA1B,CAAd;;;;QAII3B,SAASA,MAAMC,EAAN,CAAS,CAAT,MAAgBD,MAAMG,EAAN,CAAS,CAAT,CAAzB,IAAwCH,MAAMC,EAAN,CAAS,CAAT,MAAgBD,MAAMG,EAAN,CAAS,CAAT,CAA5D,EAAyE;kBAC3D5G,KAAZ,EAAmBC,EAAnB;;;QAGI8B,UAAUE,WAASC,UAAT,EAAqBlC,KAArB,EAA4BN,MAA5B,CAAhB;UACM+H,MAAN,CAAaW,MAAb,GAAsBxH,SAAtB;WACOmB,OAAP,GAAiBA,OAAjB;OACGH,aAAH;WACOH,IAAP,CAAY,UAAZ,EAAwBxB,EAAxB,EAA4BP,OAAOqC,OAAnC;GAbgB;CAAlB;;ACCA,IAAMwG,YAAY,SAAZA,SAAY,CAChBrG,UADgB,EAEhBlC,KAFgB,EAGhBN,MAHgB,EAIhBO,EAJgB,EAKhBiD,MALgB,EAMhBuD,KANgB,EAOhB+B,WAPgB,EAQb;MACCC,OAAOxI,GAAG2F,SAAH,CAAaxE,MAAb,CAAoB,KAApB,EAA2BA,MAA3B,CAAkC,UAAlC,CAAX;MACEsD,KAAK+B,MAAMmB,IAAN,CAAWzC,CADlB;MAEEuD,SAAS,CAACjC,MAAMC,EAAP,EAAWD,MAAMG,EAAjB,CAFX;MAGE+B,QAAQF,KAAKxH,SAAL,CAAe,gBAAgByD,EAA/B,EAAmCpG,IAAnC,CAAwC,CAACmI,KAAD,CAAxC,CAHV;MAIEmC,UAAUH,KAAKxH,SAAL,CAAe,kBAAkByD,EAAjC,EAAqCpG,IAArC,CAA0CoK,MAA1C,CAJZ;MAKEG,QAAQC,MALV;;QAQGnE,KADH,GAEGV,MAFH,CAEU,MAFV,EAGGC,IAHH,CAGQ,IAHR,EAGc,WAAWQ,EAHzB,EAIGR,IAJH,CAIQ,OAJR,EAIiB,OAJjB;;QAOGA,IADH,CACQ,IADR,EACc;WAAK/C,EAAEuF,EAAF,CAAK,CAAL,CAAL;GADd,EAEGxC,IAFH,CAEQ,IAFR,EAEc;WAAK/C,EAAEuF,EAAF,CAAK,CAAL,CAAL;GAFd,EAGGxC,IAHH,CAGQ,IAHR,EAGc;WAAK/C,EAAEyF,EAAF,CAAK,CAAL,CAAL;GAHd,EAIG1C,IAJH,CAIQ,IAJR,EAIc;WAAK/C,EAAEyF,EAAF,CAAK,CAAL,CAAL;GAJd,EAKG1C,IALH,CAKQ,QALR,EAKkB,OALlB,EAMGA,IANH,CAMQ,cANR,EAMwB,CANxB;;QASGP,EADH,CACM,MADN,EACc,UAASxC,CAAT,EAAYgE,CAAZ,EAAe;QACnB4D,KAAK/G,KAAX;QACImD,IAAI,CAAR;UACM,MAAMA,CAAZ,EAAe,CAAf,IAAoBkC,KAAKC,GAAL,CAASD,KAAKE,GAAL,CAASd,MAAME,IAAN,GAAa,CAAtB,EAAyBoC,GAAG9B,CAA5B,CAAT,EAAyCR,MAAMuC,IAA/C,CAApB;UACM,MAAM7D,CAAZ,EAAe,CAAf,IAAoBkC,KAAKC,GAAL,CAASD,KAAKE,GAAL,CAASd,MAAMwC,IAAf,EAAqBF,GAAG7B,CAAxB,CAAT,EAAqCT,MAAMyC,IAA3C,CAApB;cACUhH,UAAV,EAAsBlC,KAAtB,EAA6BN,MAA7B,EAAqCO,EAArC,EAAyCiD,MAAzC,EAAiDuD,KAAjD,EAAwDtB,IAAI,CAA5D;GANJ,EAQGxB,EARH,CAQM,KARN,EAQa2E,UAAUpG,UAAV,EAAsBlC,KAAtB,EAA6BN,MAA7B,EAAqCO,EAArC,EAAyCiD,MAAzC,CARb;;UAWGyB,KADH,GAEGV,MAFH,CAEU,QAFV,EAGGC,IAHH,CAGQ,IAHR,EAGc,WAAWQ,EAHzB,EAIGR,IAJH,CAIQ,OAJR,EAIiB,OAJjB;;UAOGA,IADH,CACQ,IADR,EACc;WAAK/C,EAAE,CAAF,CAAL;GADd,EAEG+C,IAFH,CAEQ,IAFR,EAEc;WAAK/C,EAAE,CAAF,CAAL;GAFd,EAGG+C,IAHH,CAGQ,GAHR,EAGa,CAHb,EAIGC,KAJH,CAKI,SALJ,EAMI,UAAChD,CAAD,EAAIgE,CAAJ;WAAWqD,gBAAgB5H,SAAhB,IAA6BuE,MAAMqD,WAAnC,GAAiD,GAAjD,GAAuD,CAAlE;GANJ,EAQG7E,EARH,CAQM,WARN,EAQmB,YAAW;WACnB,IAAP,EAAaQ,KAAb,CAAmB,SAAnB,EAA8B,GAA9B;GATJ,EAWGR,EAXH,CAWM,UAXN,EAWkB,YAAW;WAClB,IAAP,EAAaQ,KAAb,CAAmB,SAAnB,EAA8B,CAA9B;GAZJ,EAcG1C,IAdH,CAcQoH,KAdR;CA9CF;;AA+DA,IAAMM,SAAS,SAATA,MAAS,CAACjH,UAAD,EAAalC,KAAb,EAAoBN,MAApB,EAA4BO,EAA5B,EAAgCiD,MAAhC;SAA2C,YAAM;QACxD6F,KAAK/G,KAAX;QACEyE,QAAQzG,MAAMyH,MAAN,CAAazH,MAAMyH,MAAN,CAAaW,MAA1B,CADV;;;UAIMxB,EAAN,CAAS,CAAT,IAAcS,KAAKC,GAAL,CACZD,KAAKE,GAAL,CAASd,MAAME,IAAN,GAAa,CAAtB,EAAyBoC,GAAG9B,CAAH,GAAOvH,OAAOE,MAAP,CAAcE,IAA9C,CADY,EAEZ2G,MAAMuC,IAFM,CAAd;UAIMpC,EAAN,CAAS,CAAT,IAAcS,KAAKC,GAAL,CACZD,KAAKE,GAAL,CAASd,MAAMwC,IAAf,EAAqBF,GAAG7B,CAAH,GAAOxH,OAAOE,MAAP,CAAcwJ,GAA1C,CADY,EAEZ3C,MAAMyC,IAFM,CAAd;;cAKUhH,UAAV,EAAsBlC,KAAtB,EAA6BN,MAA7B,EAAqCO,EAArC,EAAyCiD,MAAzC,EAAiDuD,KAAjD,EAAwD,CAAxD;GAda;CAAf;;ACnEA,IAAM4C,IAAI,SAAJA,CAAI;SAAU3J,OAAO4J,MAAP,GAAgB5J,OAAOE,MAAP,CAAcwJ,GAA9B,GAAoC1J,OAAOE,MAAP,CAAc2J,MAA5D;CAAV;;ACAA,IAAMC,qBAAqB,SAArBA,kBAAqB,CAAC9J,MAAD,EAASO,EAAT,EAAawJ,MAAb,EAAqBrH,CAArB,EAA2B;MAC9CwF,OAAO,EAAEzC,GAAG,CAAC,CAAN,EAASrF,MAAMc,SAAf,EAA0Bf,OAAOe,SAAjC,EAAb;SACON,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BuC,IAA/B,CAAoC,UAACxB,GAAD,EAAM6D,CAAN,EAAY;QAC1CsE,OAAOnI,GAAP,IAAcc,EAAE,CAAF,CAAlB,EAAwB;WACjB+C,CAAL,GAASA,CAAT;WACKrF,IAAL,GAAYwB,GAAZ;WACKzB,KAAL,GAAaQ,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EACXN,GAAGyJ,uBAAH,GAA6B7E,OAA7B,CAAqCvD,GAArC,IAA4C,CADjC,CAAb;aAGO,KAAP;;WAEK,IAAP;GATF;;MAYIsG,KAAK9H,IAAL,KAAcc,SAAlB,EAA6B;;SAEtBuE,CAAL,GAAS,CAAT;SACKrF,IAAL,GAAYG,GAAGyJ,uBAAH,GAA6B,CAA7B,CAAZ;SACK7J,KAAL,GAAaI,GAAGyJ,uBAAH,GAA6B,CAA7B,CAAb;GAJF,MAKO,IAAI9B,KAAK/H,KAAL,KAAee,SAAnB,EAA8B;;SAE9BuE,CAAL,GAAS9E,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BlB,MAA/B,GAAwC,CAAjD;SACKQ,KAAL,GAAa+H,KAAK9H,IAAlB;SACKA,IAAL,GAAYG,GAAGyJ,uBAAH,GACVrJ,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BlB,MAA/B,GAAwC,CAD9B,CAAZ;;;SAKKuI,IAAP;CA5BF;;ACIA;;;;AAIA,IAAM+B,cAAc,SAAdA,WAAc,CAAC3J,KAAD,EAAQN,MAAR,EAAgBO,EAAhB,EAAoBwJ,MAApB;SAA+B,YAAM;QACnDrH,IAAIwH,MAAM5J,MAAMuG,SAAN,CAAgBzC,IAAhB,EAAN,CAAR;;MAEE,CAAF,IAAO1B,EAAE,CAAF,IAAO1C,OAAOE,MAAP,CAAcE,IAA5B;MACE,CAAF,IAAOsC,EAAE,CAAF,IAAO1C,OAAOE,MAAP,CAAcwJ,GAA5B;;QAEMxB,OAAO4B,mBAAmB9J,MAAnB,EAA2BO,EAA3B,EAA+BwJ,MAA/B,EAAuCrH,CAAvC,CAAb;QACMqE,QAAQ;UACRrE,CADQ;YAENwF,IAFM;YAGN6B,OAAO7B,KAAK9H,IAAZ,CAHM;YAIN2J,OAAO7B,KAAK/H,KAAZ,CAJM;YAKN,CALM;YAMNwJ,EAAE3J,MAAF;KANR;;;UAUMgH,EAAN,CAAS,CAAT,IAAcW,KAAKC,GAAL,CAASD,KAAKE,GAAL,CAASd,MAAME,IAAf,EAAqBvE,EAAE,CAAF,CAArB,CAAT,EAAqCqE,MAAMuC,IAA3C,CAAd;UACMpC,EAAN,GAAWH,MAAMC,EAAN,CAAS3H,KAAT,EAAX;;UAEM0I,MAAN,CAAaG,KAAKzC,CAAlB,IAAuBsB,KAAvB;UACMgB,MAAN,CAAaW,MAAb,GAAsBR,KAAKzC,CAA3B;GArBkB;CAApB;;ACLA,IAAMtD,eAAa,SAAbA,UAAa,CAACK,UAAD,EAAalC,KAAb,EAAoBN,MAApB,EAA4BO,EAA5B,EAAgCiD,MAAhC;SAA2C,YAAM;QAC5D6E,MAAM1H,OAAO2H,mBAAP,CAA2BhI,MAAMyH,MAAjC,EAAyCnF,MAAzC,CAAgD;aAAK,CAAC2F,MAAM9G,CAAN,CAAN;KAAhD,CAAZ;;QAEIE,OAAJ,CAAY,aAAK;YACToG,MAAN,CAAaW,MAAb,GAAsBjH,CAAtB;kBACYnB,KAAZ,EAAmBC,EAAnB;KAFF;cAIUiC,UAAV,EAAsBlC,KAAtB,EAA6BN,MAA7B,EAAqCO,EAArC,EAAyCiD,MAAzC;GAPiB;CAAnB;;ACHA;AACA,IAAM2G,cAAc,SAAdA,WAAc;SAAc,UAACC,KAAD,EAAQC,MAAR,EAAmB;QAC7CzJ,UAAOD,OAAOC,IAAP,CAAYC,UAAZ,CAAb;;WAEOD,QAAKwC,IAAL,CACL,UAAC3B,CAAD,EAAIgE,CAAJ;aACEhE,MAAM2I,KAAN,GAAc3E,IAAIA,CAAJ,GAAQ7E,QAAKjB,MAAb,IAAuBkB,WAAW4E,IAAI,CAAf,MAAsB4E,MAA3D,GAAoE,KADtE;KADK,CAAP;GAHkB;CAApB;;ACSA,IAAMhG,YAAU,SAAVA,OAAU,CAAC7B,UAAD,EAAalC,KAAb,EAAoBN,MAApB,EAA4BO,EAA5B,EAAgCiD,MAAhC,EAAwCuG,MAAxC;SAAmD,YAAM;QACnExJ,GAAGe,CAAH,OAAWJ,SAAX,IAAwBX,GAAGe,CAAH,OAAW,IAAvC,EAA6C;SACxCgD,UAAH;;;QAGI6E,QAAQC,MAAd;;;;UAIMrB,MAAN,CAAaW,MAAb,GAAsBxH,SAAtB;;;;;UAKM6G,MAAN,CAAa9H,KAAb,GAAqB;aACnBK,MAAMyH,MAAN,CAAa/C,EAAb,MAAqB9D,SAArB,GACIA,SADJ,GAEIZ,MAAMyH,MAAN,CAAa/C,EAAb,EAAiBsE,IAAjB,GAAwBhJ,MAAMyH,MAAN,CAAa/C,EAAb,EAAiBiC,IAH1B;KAArB;;OAKGhD,EAAH,CAAM,oBAAN,EAA4B,YAAM;UAC1BoE,MAAM1H,OAAO2H,mBAAP,CAA2BhI,MAAMyH,MAAjC,EAAyCnF,MAAzC,CAAgD;eAAK,CAAC2F,MAAM9G,CAAN,CAAN;OAAhD,CAAZ;;UAEI4G,IAAI1I,MAAJ,GAAa,CAAjB,EAAoB;;YAEdgC,OAAJ,CAAY,aAAK;cACTuG,OAAO5H,MAAMyH,MAAN,CAAatG,CAAb,EAAgByG,IAA7B;gBACMH,MAAN,CAAaW,MAAb,GAAsBjH,CAAtB;;;cAGI,CAAC0I,YAAYnK,OAAOa,UAAnB,EAA+BqH,KAAK9H,IAApC,EAA0C8H,KAAK/H,KAA/C,CAAL,EAA4D;wBAC9CG,KAAZ,EAAmBC,EAAnB;;SANJ;kBASUiC,UAAV,EAAsBlC,KAAtB,EAA6BN,MAA7B,EAAqCO,EAArC,EAAyCiD,MAAzC;;KAdJ;;;OAmBG0C,SAAH,CACGxE,MADH,CACU,KADV,EAEG6C,MAFH,CAEU,GAFV,EAGGC,IAHH,CAGQ,IAHR,EAGc,QAHd,EAIGA,IAJH,CAKI,WALJ,EAMI,eAAexE,OAAOE,MAAP,CAAcE,IAA7B,GAAoC,GAApC,GAA0CJ,OAAOE,MAAP,CAAcwJ,GAAxD,GAA8D,GANlE;;;OAUGvH,UAAH,GAAgBA,aAAWK,UAAX,EAAuBlC,KAAvB,EAA8BN,MAA9B,EAAsCO,EAAtC,EAA0CiD,MAA1C,CAAhB;;UAGGS,EADH,CACM,OADN,EACegG,YAAY3J,KAAZ,EAAmBN,MAAnB,EAA2BO,EAA3B,EAA+BwJ,MAA/B,CADf,EAEG9F,EAFH,CAEM,MAFN,EAEcwF,OAAOjH,UAAP,EAAmBlC,KAAnB,EAA0BN,MAA1B,EAAkCO,EAAlC,EAAsCiD,MAAtC,CAFd,EAGGS,EAHH,CAGM,KAHN,EAGa2E,UAAUpG,UAAV,EAAsBlC,KAAtB,EAA6BN,MAA7B,EAAqCO,EAArC,EAAyCiD,MAAzC,CAHb;;;;;UAQMqD,SAAN,GAAkBtG,GAAG2F,SAAH,CACfxE,MADe,CACR,KADQ,EAEfwD,MAFe,CAER,MAFQ,EAEA,UAFA,EAGfV,IAHe,CAGV,IAHU,EAGJ,cAHI,EAIfA,IAJe,CAIV,GAJU,EAILxE,OAAOE,MAAP,CAAcE,IAJT,EAKfoE,IALe,CAKV,GALU,EAKLxE,OAAOE,MAAP,CAAcwJ,GALT,EAMflF,IANe,CAMV,OANU,EAMDzE,EAAEC,MAAF,CANC,EAOfwE,IAPe,CAOV,QAPU,EAOAmF,EAAE3J,MAAF,IAAY,CAPZ,EAQfyE,KARe,CAQT,SARS,EAQE,CARF,EASf1C,IATe,CASVoH,KATU,CAAlB;GA1Dc;CAAhB;;ACNA,IAAMmB,kBAAkB,SAAlBA,eAAkB,CAAC9H,UAAD,EAAaxC,MAAb,EAAqBO,EAArB,EAAyBiD,MAAzB,EAAiCuG,MAAjC,EAA4C;MAC5DzJ,QAAQ;YACJ,EADI;eAED;GAFb;;aAKWuE,KAAX,CAAiB,WAAjB,IAAgC;aACrBR,UAAQ7B,UAAR,EAAoBlC,KAApB,EAA2BN,MAA3B,EAAmCO,EAAnC,EAAuCiD,MAAvC,EAA+CuG,MAA/C,CADqB;eAEnBrF,YAAUpE,KAAV,EAAiBC,EAAjB,CAFmB;cAGpBgC,WAASC,UAAT,EAAqBlC,KAArB,EAA4BN,MAA5B,CAHoB;gBAIlB;aAAMM,MAAMyH,MAAZ;;GAJd;CANF;;ACJA,IAAMrD,cAAY,SAAZA,SAAY,CAACpE,KAAD,EAAQC,EAAR;SAAe,YAAM;OAClC2F,SAAH,CACGxE,MADH,CACU,KADV,EAEGA,MAFH,CAEU,QAFV,EAGGiD,MAHH;OAIGuB,SAAH,CACGxE,MADH,CACU,KADV,EAEGA,MAFH,CAEU,iBAFV,EAGGiD,MAHH;OAIGV,EAAH,CAAM,kBAAN,EAA0B/C,SAA1B;;WAEOX,GAAG4B,UAAV;;UAEM0E,SAAN,GAAkB3F,SAAlB;GAbgB;CAAlB;;ACAA,IAAMqJ,cAAc,SAAdA,WAAc,CAACC,CAAD,EAAIpF,CAAJ;SAAUuC,KAAK8C,IAAL,CAAUD,IAAIA,CAAJ,GAAQpF,IAAIA,CAAtB,CAAV;CAApB;;ACEA;AACA,IAAMsF,cAAc,SAAdA,WAAc;SAClBC,QAAQhD,KAAKiD,EAAb,GAAkB,MAAMjD,KAAKiD,EAAX,GAAgBD,KAAlC,GAA0C,MAAMhD,KAAKiD,EAAX,GAAgBD,KADxC;CAApB;;;;;;;;AASA,IAAM7D,oBAAkB,SAAlBA,eAAkB;SAAO,aAAK;QAC9B+D,aAAaH,YAAYI,OAAID,UAAhB,CAAjB;QACIE,WAAWL,YAAYI,OAAIC,QAAhB,CAAf;;QAEIF,aAAaE,QAAjB,EAA2B;UACnBC,MAAMH,UAAZ;mBACaE,QAAb;iBACWC,GAAX;;;;WAIKR,KAAKK,UAAL,IAAmBL,KAAKO,QAA/B;GAXsB;CAAxB;;AAcA,IAAMjD,iBAAe,SAAfA,YAAe,CAACxH,KAAD,EAAQN,MAAR;SAAmB,UAACyB,CAAD,EAAIuD,EAAJ,EAAW;QAC3C8F,SAAMxK,MAAM2K,IAAN,CAAWjG,EAAX,CAAZ;QACEgD,OAAOlB,kBAAgBgE,MAAhB,CADT;QAEE7C,KAAK6C,OAAI5C,IAAJ,CAAS9H,IAFhB;QAGE+H,KAAK2C,OAAI5C,IAAJ,CAAS/H,KAHhB;QAIEsH,KAAKzH,OAAOa,UAAP,CAAkBoH,EAAlB,EAAsBnG,MAJ7B;QAKE4F,KAAK1H,OAAOa,UAAP,CAAkBsH,EAAlB,EAAsBrG,MAL7B;QAME0I,IAAIlK,MAAM2K,IAAN,CAAWhL,KAAX,CAAiB+E,EAAjB,CANN;QAOEI,IAAIqC,GAAGhG,EAAEwG,EAAF,CAAH,IAAYP,GAAGjG,EAAE0G,EAAF,CAAH,CAPlB;QAQE+C,IAAIX,YAAYC,CAAZ,EAAepF,CAAf,CARN;QASEuF,QAAQhD,KAAKwD,IAAL,CAAU/F,IAAI8F,CAAd,CATV,CADiD;WAW1ClD,KAAK2C,KAAL,CAAP;GAXmB;CAArB;;AAcA,IAAMpI,aAAW,SAAXA,QAAW,CAACC,UAAD,EAAalC,KAAb,EAAoBN,MAApB,EAA+B;MACxCqI,MAAM1H,OAAO2H,mBAAP,CAA2BhI,MAAM2K,IAAjC,EAAuCrI,MAAvC,CAA8C;WAAK,CAAC2F,MAAM9G,CAAN,CAAN;GAA9C,CAAZ;MACMY,UAAUrC,OAAOpB,IAAvB;;MAEIyJ,IAAI1I,MAAJ,KAAe,CAAnB,EAAsB;WACb0C,OAAP;;;MAGImG,YAAYV,eAAaxH,KAAb,EAAoBN,MAApB,CAAlB;;SAEOqC,QAAQO,MAAR,CAAe,aAAK;YACjBJ,WAAWS,SAAnB;WACO,KAAL;eACSoF,IAAInF,KAAJ,CAAU;iBAAMsF,UAAU/G,CAAV,EAAauD,EAAb,CAAN;SAAV,CAAP;WACG,IAAL;eACSqD,IAAIjF,IAAJ,CAAS;iBAAMoF,UAAU/G,CAAV,EAAauD,EAAb,CAAN;SAAT,CAAP;;cAEM,IAAI3B,KAAJ,CAAU,6BAA6BrD,OAAOsD,cAA9C,CAAN;;GAPC,CAAP;CAVF;;ACxCA,IAAMmF,gBAAc,SAAdA,WAAc,CAACnI,KAAD,EAAQC,EAAR,EAAe;MAC3BuK,SAAMxK,MAAM2K,IAAN,CAAW3K,MAAM2K,IAAN,CAAWvC,MAAtB,CAAZ;MACEC,MAAMpI,GAAG2F,SAAH,CAAaxE,MAAb,CAAoB,KAApB,EAA2BA,MAA3B,CAAkC,QAAlC,CADR;;SAGOpB,MAAM2K,IAAN,CAAW3K,MAAM2K,IAAN,CAAWvC,MAAtB,CAAP;QACMuC,IAAN,CAAWvC,MAAX,GAAoBxH,SAApB;MACIK,SAAJ,CAAc,cAAcuJ,OAAI5C,IAAJ,CAASzC,CAArC,EAAwCd,MAAxC;MACIpD,SAAJ,CAAc,gBAAgBuJ,OAAI5C,IAAJ,CAASzC,CAAvC,EAA0Cd,MAA1C;MACIpD,SAAJ,CAAc,cAAcuJ,OAAI5C,IAAJ,CAASzC,CAArC,EAAwCd,MAAxC;CARF;;ACGA,IAAMiE,cAAY,SAAZA,SAAY,CAACpG,UAAD,EAAalC,KAAb,EAAoBN,MAApB,EAA4BO,EAA5B,EAAgCiD,MAAhC;SAA2C,YAAM;QAC3DsH,SAAMxK,MAAM2K,IAAN,CAAW3K,MAAM2K,IAAN,CAAWvC,MAAtB,CAAZ;;;;QAIIoC,UAAOA,OAAI9D,EAAJ,CAAO,CAAP,MAAc8D,OAAI5D,EAAJ,CAAO,CAAP,CAArB,IAAkC4D,OAAI9D,EAAJ,CAAO,CAAP,MAAc8D,OAAI5D,EAAJ,CAAO,CAAP,CAApD,EAA+D;oBACjD5G,KAAZ,EAAmBC,EAAnB;;;QAGEuK,MAAJ,EAAS;UACDH,QAAQrK,MAAM2K,IAAN,CAAWJ,UAAX,CAAsBvK,MAAM2K,IAAN,CAAWvC,MAAjC,CAAd;;aAEImC,UAAJ,GAAiBF,KAAjB;aACII,QAAJ,GAAeJ,KAAf;aACIG,GAAJ,CACGM,WADH,CACe9K,MAAM2K,IAAN,CAAWtL,MAAX,CAAkBW,MAAM2K,IAAN,CAAWvC,MAA7B,CADf,EAEGmC,UAFH,CAEcF,KAFd,EAGGI,QAHH,CAGYJ,KAHZ;;;UAMIM,IAAN,CAAWvC,MAAX,GAAoBxH,SAApB;WACOmB,OAAP,GAAiBE,WAASC,UAAT,EAAqBlC,KAArB,EAA4BN,MAA5B,CAAjB;OACGkC,aAAH;WACOH,IAAP,CAAY,UAAZ,EAAwBxB,EAAxB,EAA4BP,OAAOqC,OAAnC;GAvBgB;CAAlB;;ACCA,IAAMwG,cAAY,SAAZA,SAAY,CAACrG,UAAD,EAAalC,KAAb,EAAoBN,MAApB,EAA4BO,EAA5B,EAAgCiD,MAAhC,EAAwCsH,MAAxC,EAA6ChC,WAA7C,EAA6D;MACvEH,MAAMpI,GAAG2F,SAAH,CAAaxE,MAAb,CAAoB,KAApB,EAA2BA,MAA3B,CAAkC,QAAlC,CAAZ;MACEsD,KAAK8F,OAAI5C,IAAJ,CAASzC,CADhB;MAEEuD,SAAS,CAAC8B,OAAI5D,EAAL,EAAS4D,OAAIO,EAAb,CAFX;MAGEpC,QAAQN,IACLpH,SADK,CACK,cAAcyD,EADnB,EAELpG,IAFK,CAEA,CAAC,EAAEoI,IAAI8D,OAAI9D,EAAV,EAAcE,IAAI4D,OAAI5D,EAAtB,EAAD,EAA6B,EAAEF,IAAI8D,OAAI9D,EAAV,EAAcE,IAAI4D,OAAIO,EAAtB,EAA7B,CAFA,CAHV;MAMEnC,UAAUP,IAAIpH,SAAJ,CAAc,gBAAgByD,EAA9B,EAAkCpG,IAAlC,CAAuCoK,MAAvC,CANZ;MAOEG,QAAQC,MAPV;MAQEkC,QAAQ3C,IAAIpH,SAAJ,CAAc,cAAcyD,EAA5B,EAAgCpG,IAAhC,CAAqC,CAACkM,MAAD,CAArC,CARV;;QAWG7F,KADH,GAEGV,MAFH,CAEU,MAFV,EAGGC,IAHH,CAGQ,IAHR,EAGc,SAASQ,EAHvB,EAIGR,IAJH,CAIQ,OAJR,EAIiB,KAJjB,EAKGC,KALH,CAKS,MALT,EAKiB,QALjB,EAMGA,KANH,CAMS,SANT,EAMoB,GANpB;;QASGD,IADH,CACQ,GADR,EACasG,OAAIA,GADjB,EAEGtG,IAFH,CAEQ,WAFR,EAEqB,eAAesG,OAAI9D,EAAJ,CAAO,CAAP,CAAf,GAA2B,GAA3B,GAAiC8D,OAAI9D,EAAJ,CAAO,CAAP,CAAjC,GAA6C,GAFlE;;QAKG/B,KADH,GAEGV,MAFH,CAEU,MAFV,EAGGC,IAHH,CAGQ,IAHR,EAGc,SAASQ,EAHvB,EAIGR,IAJH,CAIQ,OAJR,EAIiB,KAJjB;;QAOGA,IADH,CACQ,IADR,EACc;WAAK/C,EAAEuF,EAAF,CAAK,CAAL,CAAL;GADd,EAEGxC,IAFH,CAEQ,IAFR,EAEc;WAAK/C,EAAEuF,EAAF,CAAK,CAAL,CAAL;GAFd,EAGGxC,IAHH,CAGQ,IAHR,EAGc;WAAK/C,EAAEyF,EAAF,CAAK,CAAL,CAAL;GAHd,EAIG1C,IAJH,CAIQ,IAJR,EAIc;WAAK/C,EAAEyF,EAAF,CAAK,CAAL,CAAL;GAJd,EAKG1C,IALH,CAKQ,QALR,EAKkB,OALlB,EAMGA,IANH,CAMQ,cANR,EAMwB,CANxB;;QASGP,EADH,CACM,MADN,EACc,UAACxC,CAAD,EAAIgE,CAAJ,EAAU;QACd4D,KAAK/G,KAAX;QACImD,IAAI,CAAR;;WAEI,MAAMA,CAAV,EAAa,CAAb,IAAkBkC,KAAKC,GAAL,CAASD,KAAKE,GAAL,CAASiD,OAAI7D,IAAJ,GAAW,CAApB,EAAuBoC,GAAG9B,CAA1B,CAAT,EAAuCuD,OAAIxB,IAA3C,CAAlB;WACI,MAAM7D,CAAV,EAAa,CAAb,IAAkBkC,KAAKC,GAAL,CAASD,KAAKE,GAAL,CAASiD,OAAIvB,IAAb,EAAmBF,GAAG7B,CAAtB,CAAT,EAAmCsD,OAAItB,IAAvC,CAAlB;;QAEMmB,QACJlF,MAAM,CAAN,GAAUnF,MAAM2K,IAAN,CAAWJ,UAAX,CAAsB7F,EAAtB,CAAV,GAAsC1E,MAAM2K,IAAN,CAAWF,QAAX,CAAoB/F,EAApB,CADxC;;QAIG8F,OAAID,UAAJ,GAAiBlD,KAAKiD,EAAtB,IACCE,OAAIC,QAAJ,GAAepD,KAAKiD,EADrB,IAECD,QAAQhD,KAAKiD,EAFf,IAGCE,OAAID,UAAJ,IAAkBlD,KAAKiD,EAAvB,IACCE,OAAIC,QAAJ,IAAgBpD,KAAKiD,EADtB,IAECD,SAAShD,KAAKiD,EANlB,EAOE;UACInF,MAAM,CAAV,EAAa;eACPsF,QAAJ,GAAeJ,KAAf;eACIG,GAAJ,CAAQC,QAAR,CAAiBJ,KAAjB;OAFF,MAGO,IAAIlF,MAAM,CAAV,EAAa;eACdoF,UAAJ,GAAiBF,KAAjB;eACIG,GAAJ,CAAQD,UAAR,CAAmBF,KAAnB;;;;cAIMnI,UAAV,EAAsBlC,KAAtB,EAA6BN,MAA7B,EAAqCO,EAArC,EAAyCiD,MAAzC,EAAiDsH,MAAjD,EAAsDrF,IAAI,CAA1D;GA5BJ,EA8BGxB,EA9BH,CA8BM,KA9BN,EA8Ba2E,YAAUpG,UAAV,EAAsBlC,KAAtB,EAA6BN,MAA7B,EAAqCO,EAArC,EAAyCiD,MAAzC,CA9Bb;;UAiCGyB,KADH,GAEGV,MAFH,CAEU,QAFV,EAGGC,IAHH,CAGQ,IAHR,EAGc,SAASQ,EAHvB,EAIGR,IAJH,CAIQ,OAJR,EAIiB,KAJjB;;UAOGA,IADH,CACQ,IADR,EACc;WAAK/C,EAAE,CAAF,CAAL;GADd,EAEG+C,IAFH,CAEQ,IAFR,EAEc;WAAK/C,EAAE,CAAF,CAAL;GAFd,EAGG+C,IAHH,CAGQ,GAHR,EAGa,CAHb,EAIGC,KAJH,CAKI,SALJ,EAMI,UAAChD,CAAD,EAAIgE,CAAJ;WAAWqD,gBAAgB5H,SAAhB,IAA6BuE,MAAMqD,WAAnC,GAAiD,GAAjD,GAAuD,CAAlE;GANJ,EAQG7E,EARH,CAQM,WARN,EAQmB,YAAW;WACnB,IAAP,EAAaQ,KAAb,CAAmB,SAAnB,EAA8B,GAA9B;GATJ,EAWGR,EAXH,CAWM,UAXN,EAWkB,YAAW;WAClB,IAAP,EAAaQ,KAAb,CAAmB,SAAnB,EAA8B,CAA9B;GAZJ,EAcG1C,IAdH,CAcQoH,KAdR;CA3EF;;AA4FA,IAAMM,WAAS,SAATA,MAAS,CAACjH,UAAD,EAAalC,KAAb,EAAoBN,MAApB,EAA4BO,EAA5B,EAAgCiD,MAAhC;SAA2C,YAAM;QACxD6F,KAAK/G,KAAX;QACEwI,SAAMxK,MAAM2K,IAAN,CAAW3K,MAAM2K,IAAN,CAAWvC,MAAtB,CADR;;;WAIIxB,EAAJ,CAAO,CAAP,IAAYS,KAAKC,GAAL,CACVD,KAAKE,GAAL,CAASiD,OAAI7D,IAAJ,GAAW,CAApB,EAAuBoC,GAAG9B,CAAH,GAAOvH,OAAOE,MAAP,CAAcE,IAA5C,CADU,EAEV0K,OAAIxB,IAFM,CAAZ;WAIIpC,EAAJ,CAAO,CAAP,IAAYS,KAAKC,GAAL,CAASD,KAAKE,GAAL,CAASiD,OAAIvB,IAAb,EAAmBF,GAAG7B,CAAH,GAAOxH,OAAOE,MAAP,CAAcwJ,GAAxC,CAAT,EAAuDoB,OAAItB,IAA3D,CAAZ;WACI6B,EAAJ,GAASP,OAAI5D,EAAJ,CAAO7H,KAAP,EAAT;gBACUmD,UAAV,EAAsBlC,KAAtB,EAA6BN,MAA7B,EAAqCO,EAArC,EAAyCiD,MAAzC,EAAiDsH,MAAjD,EAAsD,CAAtD;GAXa;CAAf;;AC3FA;;;;AAIA,IAAMb,gBAAc,SAAdA,WAAc,CAAC3J,KAAD,EAAQN,MAAR,EAAgBO,EAAhB,EAAoBwJ,MAApB;SAA+B,YAAM;QACjDrH,IAAIwH,MAAM5J,MAAMuG,SAAN,CAAgBzC,IAAhB,EAAN,CAAV;;MAEE,CAAF,IAAO1B,EAAE,CAAF,IAAO1C,OAAOE,MAAP,CAAcE,IAA5B;MACE,CAAF,IAAOsC,EAAE,CAAF,IAAO1C,OAAOE,MAAP,CAAcwJ,GAA5B;;QAEMxB,OAAO4B,mBAAmB9J,MAAnB,EAA2BO,EAA3B,EAA+BwJ,MAA/B,EAAuCrH,CAAvC,CAAb;QACMoI,SAAM;UACNpI,CADM;YAEJwF,IAFI;YAGJ6B,OAAO7B,KAAK9H,IAAZ,CAHI;YAIJ2J,OAAO7B,KAAK/H,KAAZ,CAJI;YAKJ,CALI;YAMJwJ,EAAE3J,MAAF,CANI;kBAOEkB,SAPF;gBAQAA,SARA;WASLqK,MAAQC,WAAR,CAAoB,CAApB;KATP;;;WAaIxE,EAAJ,CAAO,CAAP,IAAYW,KAAKC,GAAL,CAASD,KAAKE,GAAL,CAASiD,OAAI7D,IAAb,EAAmBvE,EAAE,CAAF,CAAnB,CAAT,EAAmCoI,OAAIxB,IAAvC,CAAZ;WACIpC,EAAJ,GAAS4D,OAAI9D,EAAJ,CAAO3H,KAAP,EAAT;WACIgM,EAAJ,GAASP,OAAI9D,EAAJ,CAAO3H,KAAP,EAAT;;UAEM4L,IAAN,CAAW/C,KAAKzC,CAAhB,IAAqBqF,MAArB;UACMG,IAAN,CAAWvC,MAAX,GAAoBR,KAAKzC,CAAzB;GAzBkB;CAApB;;ACNA,IAAMtD,eAAa,SAAbA,UAAa,CAACK,UAAD,EAAalC,KAAb,EAAoBN,MAApB,EAA4BO,EAA5B,EAAgCiD,MAAhC;SAA2C,YAAM;QAC5D6E,MAAM1H,OAAO2H,mBAAP,CAA2BhI,MAAM2K,IAAjC,EAAuCrI,MAAvC,CAA8C;aAAK,CAAC2F,MAAM9G,CAAN,CAAN;KAA9C,CAAZ;;QAEIE,OAAJ,CAAY,aAAK;YACTsJ,IAAN,CAAWvC,MAAX,GAAoBjH,CAApB;oBACYnB,KAAZ,EAAmBC,EAAnB;KAFF;gBAIUiC,UAAV,EAAsBlC,KAAtB,EAA6BN,MAA7B,EAAqCO,EAArC,EAAyCiD,MAAzC;GAPiB;CAAnB;;ACSA;AACA,IAAMmH,QAAQ,SAARA,KAAQ,CAAC3D,EAAD,EAAKE,EAAL,EAAY;MAClBsD,IAAIxD,GAAG,CAAH,IAAQE,GAAG,CAAH,CAAlB;MACE9B,IAAI4B,GAAG,CAAH,IAAQE,GAAG,CAAH,CADd;MAEEgE,IAAIX,YAAYC,CAAZ,EAAepF,CAAf,CAFN;;SAIOuC,KAAKwD,IAAL,CAAU/F,IAAI8F,CAAd,CAAP;CALF;;AAQA,IAAMH,WAAW,SAAXA,QAAW;SAAS,cAAM;QACxBD,SAAMxK,MAAM2K,IAAN,CAAWjG,EAAX,CAAZ;QACI8F,WAAQ5J,SAAZ,EAAuB;aACdA,SAAP;;QAEEuK,SAASd,MAAMG,OAAI9D,EAAV,EAAc8D,OAAI5D,EAAlB,CAAb;QACEwE,SAAS,CAACD,MAAD,GAAU9D,KAAKiD,EAAL,GAAU,CAD/B;;QAGIE,OAAI9D,EAAJ,CAAO,CAAP,IAAY8D,OAAI5D,EAAJ,CAAO,CAAP,CAAhB,EAA2B;eAChB,IAAIS,KAAKiD,EAAT,GAAcc,MAAvB;;;WAGKA,MAAP;GAZe;CAAjB;;AAeA,IAAMb,aAAa,SAAbA,UAAa;SAAS,cAAM;QAC1BC,SAAMxK,MAAM2K,IAAN,CAAWjG,EAAX,CAAZ;QACI8F,WAAQ5J,SAAZ,EAAuB;aACdA,SAAP;;;QAGEuK,SAASd,MAAMG,OAAI9D,EAAV,EAAc8D,OAAIO,EAAlB,CAAb;QACEK,SAAS,CAACD,MAAD,GAAU9D,KAAKiD,EAAL,GAAU,CAD/B;;QAGIE,OAAI9D,EAAJ,CAAO,CAAP,IAAY8D,OAAIO,EAAJ,CAAO,CAAP,CAAhB,EAA2B;eAChB,IAAI1D,KAAKiD,EAAT,GAAcc,MAAvB;;;WAGKA,MAAP;GAbiB;CAAnB;;AAgBA,IAAM/L,SAAS,SAATA,MAAS;SAAS,cAAM;QACtBmL,SAAMxK,MAAM2K,IAAN,CAAWjG,EAAX,CAAZ;;QAEI8F,WAAQ5J,SAAZ,EAAuB;aACdA,SAAP;;;QAGIsJ,IAAIM,OAAI9D,EAAJ,CAAO,CAAP,IAAY8D,OAAI5D,EAAJ,CAAO,CAAP,CAAtB;QACE9B,IAAI0F,OAAI9D,EAAJ,CAAO,CAAP,IAAY8D,OAAI5D,EAAJ,CAAO,CAAP,CADlB;;WAGOqD,YAAYC,CAAZ,EAAepF,CAAf,CAAP;GAVa;CAAf;;AAaA,IAAMf,YAAU,SAAVA,OAAU,CAAC7B,UAAD,EAAalC,KAAb,EAAoBN,MAApB,EAA4BO,EAA5B,EAAgCiD,MAAhC,EAAwCuG,MAAxC;SAAmD,YAAM;QACnE,CAACxJ,GAAGe,CAAH,EAAL,EAAa;SACRgD,UAAH;;;QAGI6E,QAAQC,MAAd;;;;UAIM6B,IAAN,CAAWvC,MAAX,GAAoBxH,SAApB;;;;;UAKM+J,IAAN,CAAWhL,KAAX,GAAmB,cAAM;UACjB6K,SAAMxK,MAAM2K,IAAN,CAAWjG,EAAX,CAAZ;aACO8F,WAAQ5J,SAAR,GAAoBA,SAApB,GAAgC4J,OAAIxB,IAAJ,GAAWwB,OAAI7D,IAAtD;KAFF;;;UAMMgE,IAAN,CAAWF,QAAX,GAAsBA,SAASzK,KAAT,CAAtB;UACM2K,IAAN,CAAWJ,UAAX,GAAwBA,WAAWvK,KAAX,CAAxB;UACM2K,IAAN,CAAWtL,MAAX,GAAoBA,OAAOW,KAAP,CAApB;;OAEG2D,EAAH,CAAM,kBAAN,EAA0B,YAAM;UACxBoE,MAAM1H,OAAO2H,mBAAP,CAA2B2C,IAA3B,EAAiCrI,MAAjC,CAAwC;eAAK,CAAC2F,MAAM9G,CAAN,CAAN;OAAxC,CAAZ;;UAEI4G,IAAI1I,MAAJ,GAAa,CAAjB,EAAoB;;YAEdgC,OAAJ,CAAY,aAAK;cACTuG,OAAO+C,KAAKxJ,CAAL,EAAQyG,IAArB;gBACM+C,IAAN,CAAWvC,MAAX,GAAoBjH,CAApB;;;cAGI,CAAC0I,YAAYjC,IAAZ,EAAkBA,KAAK9H,IAAvB,EAA6B8H,KAAK/H,KAAlC,CAAL,EAA+C;0BACjCG,KAAZ,EAAmBC,EAAnB;;SANJ;oBASUiC,UAAV,EAAsBlC,KAAtB,EAA6BN,MAA7B,EAAqCO,EAArC,EAAyCiD,MAAzC;;KAdJ;;;OAmBG0C,SAAH,CACGxE,MADH,CACU,KADV,EAEG6C,MAFH,CAEU,GAFV,EAGGC,IAHH,CAGQ,IAHR,EAGc,MAHd,EAIGA,IAJH,CAKI,WALJ,EAMI,eAAexE,OAAOE,MAAP,CAAcE,IAA7B,GAAoC,GAApC,GAA0CJ,OAAOE,MAAP,CAAcwJ,GAAxD,GAA8D,GANlE;;;OAUGvH,UAAH,GAAgBA,aAAWK,UAAX,EAAuBlC,KAAvB,EAA8BN,MAA9B,EAAsCO,EAAtC,EAA0CiD,MAA1C,CAAhB;;UAGGS,EADH,CACM,OADN,EACegG,cAAY3J,KAAZ,EAAmBN,MAAnB,EAA2BO,EAA3B,EAA+BwJ,MAA/B,CADf,EAEG9F,EAFH,CAEM,MAFN,EAEcwF,SAAOjH,UAAP,EAAmBlC,KAAnB,EAA0BN,MAA1B,EAAkCO,EAAlC,EAAsCiD,MAAtC,CAFd,EAGGS,EAHH,CAGM,KAHN,EAGa2E,YAAUpG,UAAV,EAAsBlC,KAAtB,EAA6BN,MAA7B,EAAqCO,EAArC,EAAyCiD,MAAzC,CAHb;;;;;UAQMqD,SAAN,GAAkBtG,GAAG2F,SAAH,CACfxE,MADe,CACR,KADQ,EAEfwD,MAFe,CAER,MAFQ,EAEA,QAFA,EAGfV,IAHe,CAGV,IAHU,EAGJ,YAHI,EAIfA,IAJe,CAIV,GAJU,EAILxE,OAAOE,MAAP,CAAcE,IAJT,EAKfoE,IALe,CAKV,GALU,EAKLxE,OAAOE,MAAP,CAAcwJ,GALT,EAMflF,IANe,CAMV,OANU,EAMDzE,EAAEC,MAAF,CANC,EAOfwE,IAPe,CAOV,QAPU,EAOAmF,EAAE3J,MAAF,IAAY,CAPZ,EAQfyE,KARe,CAQT,SARS,EAQE,CARF,EASf1C,IATe,CASVoH,KATU,CAAlB;GA/Dc;CAAhB;;AC7DA,IAAMwC,sBAAsB,SAAtBA,mBAAsB,CAACnJ,UAAD,EAAaxC,MAAb,EAAqBO,EAArB,EAAyBiD,MAAzB,EAAiCuG,MAAjC,EAA4C;MAChEzJ,QAAQ;UACN,EADM;eAED;GAFb;;aAKWuE,KAAX,CAAiB,SAAjB,IAA8B;aACnBR,UAAQ7B,UAAR,EAAoBlC,KAApB,EAA2BN,MAA3B,EAAmCO,EAAnC,EAAuCiD,MAAvC,EAA+CuG,MAA/C,CADmB;eAEjBrF,YAAUpE,KAAV,EAAiBC,EAAjB,CAFiB;cAGlBgC,WAASC,UAAT,EAAqBlC,KAArB,EAA4BN,MAA5B,CAHkB;gBAIhB;aAAMM,MAAM2K,IAAZ;;GAJd;CANF;;ACJA;;AAEA,IAAMW,eAAe,SAAfA,YAAe,CAACpB,CAAD,EAAIpF,CAAJ,EAAO8F,CAAP,EAAUzJ,CAAV,EAAgB;SAC5B;OAEH,CAAC,CAAC+I,EAAEjD,CAAF,GAAMnC,EAAEoC,CAAR,GAAYgD,EAAEhD,CAAF,GAAMpC,EAAEmC,CAArB,KAA2B2D,EAAE3D,CAAF,GAAM9F,EAAE8F,CAAnC,IACC,CAACiD,EAAEjD,CAAF,GAAMnC,EAAEmC,CAAT,KAAe2D,EAAE3D,CAAF,GAAM9F,EAAE+F,CAAR,GAAY0D,EAAE1D,CAAF,GAAM/F,EAAE8F,CAAnC,CADF,KAEC,CAACiD,EAAEjD,CAAF,GAAMnC,EAAEmC,CAAT,KAAe2D,EAAE1D,CAAF,GAAM/F,EAAE+F,CAAvB,IAA4B,CAACgD,EAAEhD,CAAF,GAAMpC,EAAEoC,CAAT,KAAe0D,EAAE3D,CAAF,GAAM9F,EAAE8F,CAAvB,CAF7B,CAFG;OAMH,CAAC,CAACiD,EAAEjD,CAAF,GAAMnC,EAAEoC,CAAR,GAAYgD,EAAEhD,CAAF,GAAMpC,EAAEmC,CAArB,KAA2B2D,EAAE1D,CAAF,GAAM/F,EAAE+F,CAAnC,IACC,CAACgD,EAAEhD,CAAF,GAAMpC,EAAEoC,CAAT,KAAe0D,EAAE3D,CAAF,GAAM9F,EAAE+F,CAAR,GAAY0D,EAAE1D,CAAF,GAAM/F,EAAE8F,CAAnC,CADF,KAEC,CAACiD,EAAEjD,CAAF,GAAMnC,EAAEmC,CAAT,KAAe2D,EAAE1D,CAAF,GAAM/F,EAAE+F,CAAvB,IAA4B,CAACgD,EAAEhD,CAAF,GAAMpC,EAAEoC,CAAT,KAAe0D,EAAE3D,CAAF,GAAM9F,EAAE8F,CAAvB,CAF7B;GANJ;CADF;;ACFA;;AAEA,IAAMsE,iBAAiB,SAAjBA,cAAiB;SAAM,oBAAY;;QAEjCC,mBAAmBC,OAAOD,gBAAP,IAA2B,CAApD;;;QAGME,eAAetG,SAASuG,aAAT,CAAuB,QAAvB,CAArB;iBACahM,KAAb,GAAqBM,GAAG2L,MAAH,CAAUC,UAAV,CAAqBC,WAArB,GAAmCN,gBAAxD;iBACalC,MAAb,GACE,CAACrJ,GAAG2L,MAAH,CAAUC,UAAV,CAAqBE,YAArB,GAAoC,EAArC,IAA2CP,gBAD7C;iBAEarH,KAAb,CAAmBxE,KAAnB,GAA2B+L,aAAa/L,KAAb,GAAqB6L,gBAArB,GAAwC,IAAnE;iBACarH,KAAb,CAAmBmF,MAAnB,GAA4BoC,aAAapC,MAAb,GAAsBkC,gBAAtB,GAAyC,IAArE;;;QAGMQ,UAAUN,aAAaO,UAAb,CAAwB,IAAxB,CAAhB;YACQC,SAAR,GAAoB,SAApB;YACQC,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuBT,aAAa/L,KAApC,EAA2C+L,aAAapC,MAAxD;;;SAGK,IAAM8C,GAAX,IAAkBnM,GAAG2L,MAArB,EAA6B;cACnBS,SAAR,CACEpM,GAAG2L,MAAH,CAAUQ,GAAV,CADF,EAEE,CAFF,EAGE,KAAKZ,gBAHP,EAIEE,aAAa/L,KAJf,EAKE+L,aAAapC,MAAb,GAAsB,KAAKkC,gBAL7B;;;;QAUIc,SAASb,OAAOc,GAAP,IAAcd,OAAOe,SAArB,IAAkCf,MAAjD;QACMgB,aAAa,IAAIC,aAAJ,EAAnB;QACMC,SAASF,WAAWG,iBAAX,CACb3M,GAAG2F,SAAH,CAAaxE,MAAb,CAAoB,KAApB,EAA2B0C,IAA3B,EADa,CAAf;;;QAKM+I,MAAM,+BAA+BpB,OAAOqB,IAAP,CAAYH,MAAZ,CAA3C;QACMI,MAAM,IAAIC,KAAJ,EAAZ;QACIC,MAAJ,GAAa,YAAM;cACTZ,SAAR,CACEU,GADF,EAEE,CAFF,EAGE,CAHF,EAIEA,IAAIpN,KAAJ,GAAY6L,gBAJd,EAKEuB,IAAIzD,MAAJ,GAAakC,gBALf;UAOI,OAAO0B,QAAP,KAAoB,UAAxB,EAAoC;iBACzBxB,YAAT;;KATJ;QAYImB,GAAJ,GAAUA,GAAV;GAlDqB;CAAvB;;ACAA,IAAM5K,aAAW,SAAXA,QAAW,CAACvC,MAAD,EAASO,EAAT;SAAgB,YAAM;QACjCoC,UAAU,EAAd;QACIjC,UAAU,EAAd;QACI+M,SAAS,EAAb;;;QAGIzN,OAAOQ,OAAP,CAAeb,MAAf,KAA0B,CAA9B,EAAiC;UAC3B+N,QAAQnN,GACTe,CADS,GAETC,SAFS,CAEC,QAFD,EAGTmM,KAHS,EAAZ;WAIK,IAAIlH,IAAI,CAAb,EAAgBA,IAAIkH,MAAM/N,MAA1B,EAAkC6G,GAAlC,EAAuC;YACjCrF,eAAeuM,MAAMlH,CAAN,CAAf,MAA6B,IAAjC,EAAuC;kBAC7BT,IAAR,CAAa2H,MAAMlH,CAAN,EAASmH,QAAtB;cACIC,SAAS,EAAb;cACIC,SAAS1M,eAAeuM,MAAMlH,CAAN,CAAf,CAAb;cAEE,OAAOxG,OAAOa,UAAP,CAAkB6M,MAAMlH,CAAN,EAASmH,QAA3B,EAAqC7L,MAArC,CAA4CgM,MAA5C,GAAqD,CAArD,CAAP,KACA,QAFF,EAGE;iBACK,IAAIrI,IAAI,CAAb,EAAgBA,IAAIoI,OAAOlO,MAA3B,EAAmC8F,GAAnC,EAAwC;kBAEpC9C,QAAQoL,QAAR,CAAiBL,MAAMlH,CAAN,EAASmH,QAA1B,KACA3N,OAAOgO,QAAP,CAAgBD,QAAhB,CAAyBL,MAAMlH,CAAN,EAASmH,QAAlC,CAFF,EAGE;uBACO5H,IAAP,CACE/F,OAAOa,UAAP,CAAkB6M,MAAMlH,CAAN,EAASmH,QAA3B,EAAqC7L,MAArC,CAA4CgB,MAA5C,CAAmD+K,OAAOpI,CAAP,CAAnD,CADF;eAJF,MAOO,IAAIzF,OAAOa,UAAP,CAAkB6M,MAAMlH,CAAN,EAASmH,QAA3B,EAAqC7L,MAArC,OAAkD,CAAtD,EAAyD;uBACvDmM,OAAP,CACEjO,OAAOa,UAAP,CAAkB6M,MAAMlH,CAAN,EAASmH,QAA3B,EAAqC7L,MAArC,CAA4CgB,MAA5C,CAAmD+K,OAAOpI,CAAP,CAAnD,CADF;;;oBAKIM,IAAR,CAAa6H,MAAb;iBACK,IAAIM,KAAK,CAAd,EAAiBA,KAAKxN,QAAQf,MAA9B,EAAsCuO,IAAtC,EAA4C;kBACtCxN,QAAQwN,EAAR,EAAYvO,MAAZ,KAAuB,CAA3B,EAA8B;wBACpBuO,EAAR,IAAc,CAAC,CAAD,EAAI,CAAJ,CAAd;;;WArBN,MAwBO;mBACER,MAAMlH,CAAN,EAASmH,QAAhB,IAA4BxM,eAAeuM,MAAMlH,CAAN,CAAf,CAA5B;gBACI2H,WAAWnO,OAAOa,UAAP,CAAkB6M,MAAMlH,CAAN,EAASmH,QAA3B,EAAqC7L,MAArC,CAA4CgC,KAA5C,EAAf;gBACIsK,YAAYpO,OAAOa,UAAP,CAAkB6M,MAAMlH,CAAN,EAASmH,QAA3B,EAAqC7L,MAArC,CAA4CgM,MAA5C,EAAhB;iBACK,IAAIxH,IAAI,CAAb,EAAgBA,IAAI6H,SAASxO,MAA7B,EAAqC2G,GAArC,EAA0C;kBAEtC6H,SAAS7H,CAAT,KAAeuH,OAAO,CAAP,CAAf,IACAM,SAAS7H,CAAT,KAAeuH,OAAO,CAAP,CADf,IAEAlL,QAAQoL,QAAR,CAAiBL,MAAMlH,CAAN,EAASmH,QAA1B,CAFA,IAGA3N,OAAOgO,QAAP,CAAgBD,QAAhB,CAAyBL,MAAMlH,CAAN,EAASmH,QAAlC,CAJF,EAKE;uBACO5H,IAAP,CAAYoI,SAAS7H,CAAT,CAAZ;eANF,MAOO,IAAI6H,SAAS7H,CAAT,KAAeuH,OAAO,CAAP,CAAf,IAA4BM,SAAS7H,CAAT,KAAeuH,OAAO,CAAP,CAA/C,EAA0D;uBACxDI,OAAP,CAAeE,SAAS7H,CAAT,CAAf;;;oBAGIP,IAAR,CAAa6H,MAAb;iBACK,IAAIM,MAAK,CAAd,EAAiBA,MAAKxN,QAAQf,MAA9B,EAAsCuO,KAAtC,EAA4C;kBACtCxN,QAAQwN,GAAR,EAAYvO,MAAZ,KAAuB,CAA3B,EAA8B;wBACpBuO,GAAR,IAAc,CAAC,CAAD,EAAI,CAAJ,CAAd;;;;;;;UAOJnL,SAAS;cACP,cAAStB,CAAT,EAAYiB,CAAZ,EAAeN,SAAf,EAA0B;cAC1BiM,WAAW5M,EAAEiB,CAAF,CAAf;cACI4L,gBAAgBtO,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CACjBgM,MADiB,GAEjB3I,OAFiB,CAETkJ,QAFS,CAApB;cAGIE,qBAAqBvO,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BgC,KAA5B,GACvBwK,aADuB,CAAzB;iBAIEC,sBAAsBd,OAAO/K,CAAP,EAAU,CAAV,CAAtB,IACA6L,sBAAsBd,OAAO/K,CAAP,EAAU,CAAV,CAFxB;SATW;gBAcL,gBAASjB,CAAT,EAAYiB,CAAZ,EAAeN,SAAf,EAA0B;iBACzB1B,QAAQ0B,SAAR,EAAmB,CAAnB,KAAyBX,EAAEiB,CAAF,CAAzB,IAAiCjB,EAAEiB,CAAF,KAAQhC,QAAQ0B,SAAR,EAAmB,CAAnB,CAAhD;SAfW;gBAiBL,gBAASX,CAAT,EAAYiB,CAAZ,EAAeN,SAAf,EAA0B;cAC5BiM,WAAW5M,EAAEiB,CAAF,CAAf;cACI4L,gBAAgBtO,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CACjBgM,MADiB,GAEjB3I,OAFiB,CAETkJ,QAFS,CAApB;cAGIE,qBAAqBvO,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BgC,KAA5B,GACvBwK,aADuB,CAAzB;iBAIEC,sBAAsBd,OAAO/K,CAAP,EAAU,CAAV,CAAtB,IACA6L,sBAAsBd,OAAO/K,CAAP,EAAU,CAAV,CAFxB;;OAzBJ;aA+BO1C,OAAOpB,IAAP,CAAYgE,MAAZ,CAAmB;eACxBD,QAAQO,KAAR,CAAc,UAACR,CAAD,EAAIN,SAAJ;iBACZW,OAAO/C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBS,IAA5B,EAAkC1B,CAAlC,EAAqCiB,CAArC,EAAwCN,SAAxC,CADY;SAAd,CADwB;OAAnB,CAAP;KA3FF,MAgGO;;;;UAIDoM,iBAAiB,EAArB;;iCACSC,GALJ;YAMCxN,QAAQjB,OAAOQ,OAAP,CAAeiO,GAAf,CAAZ;YACIb,SAAS,EAAb;YACIC,SAAS5M,MAAMG,MAAnB;YACIuB,UAAU,CAAC1B,MAAMrC,IAAP,CAAd;YAEE,OAAOoB,OAAOa,UAAP,CAAkBI,MAAMrC,IAAxB,EAA8BkD,MAA9B,CAAqCgM,MAArC,GAA8C,CAA9C,CAAP,KAA4D,QAD9D,EAEE;eACK,IAAIrI,KAAI,CAAb,EAAgBA,KAAIoI,OAAOlO,MAA3B,EAAmC8F,IAAnC,EAAwC;gBAEpC9C,QAAQoL,QAAR,CAAiB9M,MAAMrC,IAAvB,KACAoB,OAAOgO,QAAP,CAAgBD,QAAhB,CAAyB9M,MAAMrC,IAA/B,CAFF,EAGE;qBACOmH,IAAP,CAAY/F,OAAOa,UAAP,CAAkBI,MAAMrC,IAAxB,EAA8BkD,MAA9B,CAAqCgB,MAArC,CAA4C+K,OAAOpI,EAAP,CAA5C,CAAZ;aAJF,MAKO,IAAIzF,OAAOa,UAAP,CAAkBI,MAAMrC,IAAxB,EAA8BkD,MAA9B,OAA2C,CAA/C,EAAkD;qBAChDmM,OAAP,CACEjO,OAAOa,UAAP,CAAkBI,MAAMrC,IAAxB,EAA8BkD,MAA9B,CAAqCgB,MAArC,CAA4C+K,OAAOpI,EAAP,CAA5C,CADF;;;kBAKIM,IAAR,CAAa6H,MAAb;eACK,IAAIM,OAAK,CAAd,EAAiBA,OAAKxN,QAAQf,MAA9B,EAAsCuO,MAAtC,EAA4C;gBACtCxN,QAAQwN,IAAR,EAAYvO,MAAZ,KAAuB,CAA3B,EAA8B;sBACpBuO,IAAR,IAAc,CAAC,CAAD,EAAI,CAAJ,CAAd;;;SAlBN,MAqBO;iBACEjN,MAAMrC,IAAb,IAAqBqC,MAAMG,MAA3B;cACI+M,YAAWnO,OAAOa,UAAP,CAAkBI,MAAMrC,IAAxB,EAA8BkD,MAA9B,CAAqCgC,KAArC,EAAf;cACIsK,aAAYpO,OAAOa,UAAP,CAAkBI,MAAMrC,IAAxB,EAA8BkD,MAA9B,CAAqCgM,MAArC,EAAhB;eACK,IAAIxH,KAAI,CAAb,EAAgBA,KAAI6H,UAASxO,MAA7B,EAAqC2G,IAArC,EAA0C;gBAEtC6H,UAAS7H,EAAT,KAAeuH,OAAO,CAAP,CAAf,IACAM,UAAS7H,EAAT,KAAeuH,OAAO,CAAP,CADf,IAEAlL,QAAQoL,QAAR,CAAiB9M,MAAMrC,IAAvB,CAFA,IAGAoB,OAAOgO,QAAP,CAAgBD,QAAhB,CAAyB9M,MAAMrC,IAA/B,CAJF,EAKE;qBACOmH,IAAP,CAAYoI,UAAS7H,EAAT,CAAZ;aANF,MAOO,IAAI6H,UAAS7H,EAAT,KAAeuH,OAAO,CAAP,CAAf,IAA4BM,UAAS7H,EAAT,KAAeuH,OAAO,CAAP,CAA/C,EAA0D;qBACxDI,OAAP,CAAeE,UAAS7H,EAAT,CAAf;;;kBAGIP,IAAR,CAAa6H,MAAb;eACK,IAAIM,OAAK,CAAd,EAAiBA,OAAKxN,QAAQf,MAA9B,EAAsCuO,MAAtC,EAA4C;gBACtCxN,QAAQwN,IAAR,EAAYvO,MAAZ,KAAuB,CAA3B,EAA8B;sBACpBuO,IAAR,IAAc,CAAC,CAAD,EAAI,CAAJ,CAAd;;;;YAIFnL,SAAS;gBACL,cAAStB,CAAT,EAAYiB,CAAZ,EAAeN,SAAf,EAA0B;gBAC1BiM,WAAW5M,EAAEiB,CAAF,CAAf;gBACI4L,gBAAgBtO,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CACjBgM,MADiB,GAEjB3I,OAFiB,CAETkJ,QAFS,CAApB;gBAGIE,qBAAqBvO,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BgC,KAA5B,GACvBwK,aADuB,CAAzB;mBAIEC,sBAAsBd,OAAO/K,CAAP,EAAU,CAAV,CAAtB,IACA6L,sBAAsBd,OAAO/K,CAAP,EAAU,CAAV,CAFxB;WATS;kBAcH,gBAASjB,CAAT,EAAYiB,CAAZ,EAAeN,SAAf,EAA0B;mBACzB1B,QAAQ+N,GAAR,EAAa,CAAb,KAAmBhN,EAAEiB,CAAF,CAAnB,IAA2BjB,EAAEiB,CAAF,KAAQhC,QAAQ+N,GAAR,EAAa,CAAb,CAA1C;WAfS;kBAiBH,gBAAShN,CAAT,EAAYiB,CAAZ,EAAeN,SAAf,EAA0B;gBAC5BiM,WAAW5M,EAAEiB,CAAF,CAAf;gBACI4L,gBAAgBtO,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CACjBgM,MADiB,GAEjB3I,OAFiB,CAETkJ,QAFS,CAApB;gBAGIE,qBAAqBvO,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BgC,KAA5B,GACvBwK,aADuB,CAAzB;mBAIEC,sBAAsBd,OAAO/K,CAAP,EAAU,CAAV,CAAtB,IACA6L,sBAAsBd,OAAO/K,CAAP,EAAU,CAAV,CAFxB;;SAzBJ;;;;;YAmCIgM,WAAW1O,OAAOpB,IAAP,CAAYgE,MAAZ,CAAmB;iBAChCD,QAAQO,KAAR,CAAc,UAACR,CAAD,EAAIN,SAAJ;mBACZW,OAAO/C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBS,IAA5B,EAAkC1B,CAAlC,EAAqCiB,CAArC,EAAwCN,SAAxC,CADY;WAAd,CADgC;SAAnB,CAAf;aAKK,IAAIuM,IAAI,CAAb,EAAgBA,IAAID,SAAS/O,MAA7B,EAAqCgP,GAArC,EAA0C;yBACzB5I,IAAf,CAAoB2I,SAASC,CAAT,CAApB;;kBAEQ,EAAV;iBACS,EAAT;;;WA7FG,IAAIF,MAAM,CAAf,EAAkBA,MAAMzO,OAAOQ,OAAP,CAAeb,MAAvC,EAA+C8O,KAA/C,EAAsD;cAA7CA,GAA6C;;aA+F/CD,cAAP;;GA1Ma;CAAjB;;ACFA,IAAMlL,iBAAiB,SAAjBA,cAAiB,CAACd,UAAD,EAAaxC,MAAb,EAAqBO,EAArB;SAA4B,YAAsB;QAArB0C,SAAqB,uEAAT,IAAS;;QACnEA,cAAc,IAAlB,EAAwB;aACfT,WAAWS,SAAlB;;;gBAGU2L,OAAO3L,SAAP,EAAkB4L,WAAlB,EAAZ;QACI5L,cAAc,KAAd,IAAuBA,cAAc,IAAzC,EAA+C;YACvC,IAAII,KAAJ,CAAU,uBAAuBJ,SAAjC,CAAN;;;eAGSA,SAAX,GAAuBA,SAAvB;WACOZ,OAAP,GAAiBG,WAAWsM,WAAX,GAAyBvM,QAAzB,EAAjB;OACGL,aAAH;WACO3B,EAAP;GAbqB;CAAvB;;AAgBA,IAAMwO,YAAY,SAAZA,SAAY,CAACvM,UAAD,EAAaxC,MAAb,EAAqBO,EAArB;SAA4B,YAAiB;QAAhByO,IAAgB,uEAAT,IAAS;;QACzDA,SAAS,IAAb,EAAmB;aACVxM,WAAWwM,IAAlB;;;QAGEzO,GAAG0O,UAAH,GAAgB9J,OAAhB,CAAwB6J,IAAxB,MAAkC,CAAC,CAAvC,EAA0C;YAClC,IAAI3L,KAAJ,CAAU,2CAA2C2L,IAArD,CAAN;;;;;QAKEA,SAASxM,WAAWwM,IAAxB,EAA8B;;;UAGxBxM,WAAWwM,IAAX,KAAoB,MAAxB,EAAgC;WAC3B7M,UAAH;;;;iBAIS0C,KAAX,CAAiBrC,WAAWwM,IAA5B,EAAkCtK,SAAlC,CAA4CnE,EAA5C;;iBAEWyO,IAAX,GAAkBA,IAAlB;iBACWnK,KAAX,CAAiBrC,WAAWwM,IAA5B,EAAkC3K,OAAlC;UACI2K,SAAS,MAAb,EAAqB;eACZzO,GAAG+C,cAAV;OADF,MAEO;WACFA,cAAH,GAAoBA,eAAed,UAAf,EAA2BxC,MAA3B,EAAmCO,EAAnC,CAApB;;;;WAIGA,EAAP;GA9BgB;CAAlB;;AChBA;;;;;;;AAOA,IAAM2O,kBAAkB,SAAlBA,eAAkB;SAAU;WAChClP,OAAOa,UAAP,CAAkBY,CAAlB,EAAqB0N,KAArB,GAA6BnP,OAAOa,UAAP,CAAkBY,CAAlB,EAAqB0N,KAAlD,GAA0D1N,CAD1B;GAAV;CAAxB;;ACLA,IAAM2N,uBAAuB,SAAvBA,oBAAuB,CAACpP,MAAD,EAASO,EAAT,EAAaoD,IAAb;SAC3B,UAASvB,SAAT,EAAoB;OACfiN,IAAH,CAAQjN,SAAR;OACGD,UAAH,CAAcC,SAAd;WACO,KAAKkN,aAAZ,EACGC,UADH,GAEGC,QAFH,CAEYxP,OAAOyP,aAFnB,EAGG1N,IAHH,CAGQ4B,KAAK+L,KAAL,CAAW1P,OAAOa,UAAP,CAAkBuB,SAAlB,EAA6BN,MAAxC,CAHR;OAIGjD,MAAH;GARyB;CAA7B;;ACAA,IAAM8Q,eAAe,SAAfA,YAAe,CAAC3P,MAAD,EAASO,EAAT,EAAgB;MAC/B,CAACP,OAAO2P,YAAZ,EAA0B;;MAEtBC,QAAQtN,MAAMuN,MAAlB;UACQD,QAAQ,CAAR,GAAY,CAAC,CAAb,GAAiBA,KAAzB;UACQA,QAAQ,CAAR,GAAY,CAAZ,GAAgBA,KAAxB;;SAEOE,sBAAP,IAAiCF,KAAjC;KACGjH,GAAH,CACGpH,SADH,CACa,YADb,EAEGiD,IAFH,CAGI,WAHJ,EAII,4BAA4BxE,OAAO8P,sBAAnC,GAA4D,GAJhE;QAMMC,cAAN;CAdF;;;;ACIA,IAAMC,aAAa,SAAbA,UAAa,CAAChQ,MAAD,EAASO,EAAT,EAAa0P,QAAb,EAAuBtM,IAAvB,EAA6BuM,KAA7B;SAAuC,YAErD;QADHT,aACG,uEADa,IACb;;QACCA,kBAAkB,IAAtB,EAA4B;sBACVzP,OAAOyP,aAAvB;;;QAGIU,SAAS5P,GAAGoI,GAAH,CACZpH,SADY,CACF,YADE,EAEZ3C,IAFY,CAEP2B,GAAGyJ,uBAAH,EAFO,CAAf;;WAKG/E,KADH,GAEGV,MAFH,CAEU,OAFV,EAGGC,IAHH,CAGQ,OAHR,EAGiB,WAHjB,EAIGA,IAJH,CAIQ,WAJR,EAIqB;aAAK,eAAeyL,SAASvN,CAAT,CAAf,GAA6B,GAAlC;KAJrB,EAKG+B,KALH,CAKS,SALT,EAKoB,CALpB,EAMGF,MANH,CAMU,OANV,EAOGC,IAPH,CAOQ,OAPR,EAOiB,MAPjB,EAQGA,IARH,CAQQ,WARR,EAQqB,gBARrB,EASGhD,IATH,CASQ,UAASC,CAAT,EAAY;UACV2O,cAAc1O,OAAO,IAAP,EAAaK,IAAb,CAClBxB,GAAG8P,eAAH,CAAmB1M,IAAnB,EAAyB3D,OAAOa,UAAP,CAAkBY,CAAlB,CAAzB,CADkB,CAApB;;kBAKGF,SADH,CACa,MADb,EAEGkD,KAFH,CAES,MAFT,EAEiB,MAFjB,EAGGA,KAHH,CAGS,QAHT,EAGmB,MAHnB,EAIGA,KAJH,CAIS,iBAJT,EAI4B,YAJ5B;;kBAOGlD,SADH,CACa,MADb,EAEGkD,KAFH,CAES,MAFT,EAEiB,MAFjB,EAGGA,KAHH,CAGS,QAHT,EAGmB,MAHnB,EAIGA,KAJH,CAIS,iBAJT,EAI4B,YAJ5B;KApBJ,EA0BGF,MA1BH,CA0BU,UA1BV,EA2BGC,IA3BH,CA2BQ,aA3BR,EA2BuB,QA3BvB,EA4BGA,IA5BH,CA4BQ,OA5BR,EA4BiB,OA5BjB,EA6BGA,IA7BH,CA6BQ,GA7BR,EA6Ba,CA7Bb,EA8BGA,IA9BH,CA8BQ,GA9BR,EA8Ba,CA9Bb,EA+BGA,IA/BH,CAgCI,WAhCJ,EAiCI,4BAA4BxE,OAAO8P,sBAAnC,GAA4D,GAjChE,EAmCGQ,IAnCH,CAmCQpB,gBAAgBlP,MAAhB,CAnCR,EAoCGiE,EApCH,CAoCM,UApCN,EAoCkBmL,qBAAqBpP,MAArB,EAA6BO,EAA7B,EAAiCoD,IAAjC,CApClB,EAqCGM,EArCH,CAqCM,OArCN,EAqCe0L,aAAa3P,MAAb,EAAqBO,EAArB,CArCf;;;WAwCOiE,IAAP,CAAY,SAAZ,EAAuB,CAAvB;WAEG9C,MADH,CACU,OADV,EAEG6N,UAFH,GAGGC,QAHH,CAGYC,aAHZ,EAIGjO,IAJH,CAIQ,UAASC,CAAT,EAAY;aACT,IAAP,EAAaM,IAAb,CAAkBxB,GAAG8P,eAAH,CAAmB1M,IAAnB,EAAyB3D,OAAOa,UAAP,CAAkBY,CAAlB,CAAzB,CAAlB;KALJ;WAQGC,MADH,CACU,QADV,EAEG6N,UAFH,GAGGC,QAHH,CAGYC,aAHZ,EAIGa,IAJH,CAIQpB,gBAAgBlP,MAAhB,CAJR,EAKGwE,IALH,CAMI,WANJ,EAOI,4BAA4BxE,OAAO8P,sBAAnC,GAA4D,GAPhE;;;WAWOxK,IAAP,GAAcX,MAAd;;QAEMrD,IAAIf,GAAGoI,GAAH,CAAOpH,SAAP,CAAiB,YAAjB,CAAV;MACEgO,UAAF,GACGC,QADH,CACYC,aADZ,EAEGjL,IAFH,CAEQ,WAFR,EAEqB;aAAK,eAAeyL,SAASvN,CAAT,CAAf,GAA6B,GAAlC;KAFrB,EAGG+B,KAHH,CAGS,SAHT,EAGoB,CAHpB;;OAKGkE,GAAH,CACGpH,SADH,CACa,OADb,EAEGgO,UAFH,GAGGC,QAHH,CAGYC,aAHZ,EAIGjO,IAJH,CAIQ,UAASC,CAAT,EAAY;aACT,IAAP,EAAaM,IAAb,CAAkBxB,GAAG8P,eAAH,CAAmB1M,IAAnB,EAAyB3D,OAAOa,UAAP,CAAkBY,CAAlB,CAAzB,CAAlB;KALJ;;QAQIyO,MAAMK,SAAV,EAAqBhQ,GAAGgQ,SAAH;QACjBL,MAAMM,WAAV,EAAuBjQ,GAAGiQ,WAAH;QACnBjQ,GAAGwO,SAAH,OAAmB,MAAvB,EAA+B;UACvBC,OAAOzO,GAAGwO,SAAH,EAAb;SACGA,SAAH,CAAa,MAAb;SACGA,SAAH,CAAaC,IAAb;;WAEKrI,OAAP;GA7FiB;CAAnB;;ACNA;AACA,IAAM8J,WAAW,SAAXA,QAAW,SAAU;MACnB9G,IAAI3J,OAAO4J,MAAP,GAAgB5J,OAAOE,MAAP,CAAcwJ,GAA9B,GAAoC1J,OAAOE,MAAP,CAAc2J,MAA5D;;MAEI7J,OAAO0Q,kBAAP,IAA6B,QAAjC,EAA2C;WAClC,CACL/G,IACE,CADF,GAEE3J,OAAO2Q,yBAAP,CAAiC9G,MAFnC,GAGE7J,OAAO2Q,yBAAP,CAAiCjH,GAJ9B,EAKL,CALK,CAAP;GADF,MAQO,IAAI1J,OAAO0Q,kBAAP,IAA6B,KAAjC,EAAwC;WACtC,CACL/G,IAAI,CADC,EAEL,IACE3J,OAAO2Q,yBAAP,CAAiC9G,MADnC,GAEE7J,OAAO2Q,yBAAP,CAAiCjH,GAJ9B,CAAP;;SAOK,CAACC,IAAI,CAAL,EAAQ,CAAR,CAAP;CAnBF;;ACMA,IAAMiH,YAAY,SAAZA,SAAY,CAAC5Q,MAAD,EAASO,EAAT,EAAawJ,MAAb,EAAqB8G,GAArB;SAChB,YAAW;;QAEHC,gBAAgB;YACd,cAAStK,CAAT,EAAY;YACZuK,UAAU3P,OAAOpB,OAAOpB,IAAd,EAAoB;iBAAM6C,EAAE+E,CAAF,IAAO/E,EAAE+E,CAAF,EAAKwK,OAAL,EAAP,GAAwB,IAA9B;SAApB,CAAd;;YAEID,QAAQ,CAAR,MAAeA,QAAQ,CAAR,CAAnB,EAA+B;iBACtBE,aACJnD,MADI,CACGiD,OADH,EAEJjN,KAFI,CAEE2M,SAASzQ,MAAT,CAFF,CAAP;;YAIEA,OAAOgO,QAAP,CAAgBD,QAAhB,CAAyBvH,CAAzB,CAAJ,EAAiC;oBACrBuK,QAAQ3R,GAAR,CAAY;mBAAO8R,SAASjD,OAAT,CAAiBkD,GAAjB,CAAP;WAAZ,CAAV;;eAEKC,YACJtD,MADI,CACGiD,OADH,EAEJjN,KAFI,CAEE2M,SAASzQ,MAAT,CAFF,CAAP;OAZkB;cAgBZ,gBAASwG,CAAT,EAAY;YACduK,UAAU3P,OAAOpB,OAAOpB,IAAd,EAAoB;iBAAK,CAAC6C,EAAE+E,CAAF,CAAN;SAApB,CAAd;;YAEIuK,QAAQ,CAAR,MAAeA,QAAQ,CAAR,CAAnB,EAA+B;iBACtBE,aACJnD,MADI,CACGiD,OADH,EAEJjN,KAFI,CAEE2M,SAASzQ,MAAT,CAFF,CAAP;;YAIEA,OAAOgO,QAAP,CAAgBD,QAAhB,CAAyBvH,CAAzB,CAAJ,EAAiC;oBACrBuK,QAAQ3R,GAAR,CAAY;mBAAO8R,SAASjD,OAAT,CAAiBkD,GAAjB,CAAP;WAAZ,CAAV;;eAEKE,cACJvD,MADI,CACGiD,OADH,EAEJjN,KAFI,CAEE2M,SAASzQ,MAAT,CAFF,CAAP;OA3BkB;cA+BZ,gBAASwG,CAAT,EAAY;YACd8K,SAAS,EAAb;YACExD,SAAS,EADX;;;eAIOlP,IAAP,CAAYQ,GAAZ,CAAgB,aAAK;cACfsD,EAAE8D,CAAF,MAAStF,SAAT,IAAsBlB,OAAO0Q,kBAAP,KAA8B,WAAxD,EAAqE;mBAC5D,IAAP,CADmE;;cAGjEY,OAAO5O,EAAE8D,CAAF,CAAP,MAAiBtF,SAArB,EAAgC;mBACvBwB,EAAE8D,CAAF,CAAP,IAAe,CAAf;WADF,MAEO;mBACE9D,EAAE8D,CAAF,CAAP,IAAe8K,OAAO5O,EAAE8D,CAAF,CAAP,IAAe,CAA9B;;SAPJ;YAUIxG,OAAOgO,QAAP,CAAgBD,QAAhB,CAAyBvH,CAAzB,CAAJ,EAAiC;mBACtB7F,OAAO2H,mBAAP,CAA2BgJ,MAA3B,EAAmCC,IAAnC,EAAT;SADF,MAEO;cACDC,UAAU7Q,OAAO2H,mBAAP,CAA2BgJ,MAA3B,EAAmCC,IAAnC,EAAd;eACK,IAAI9L,IAAI,CAAb,EAAgBA,IAAI9E,OAAO2H,mBAAP,CAA2BgJ,MAA3B,EAAmC3R,MAAvD,EAA+D8F,GAA/D,EAAoE;mBAC3DM,IAAP,CAAYyL,QAAQC,GAAR,EAAZ;;;;;YAKAC,mBAAmB,EAAvB;YACI5D,OAAOnO,MAAP,KAAkB,CAAtB,EAAyB;;mBAEd,CAAC,GAAD,EAAMmO,OAAO,CAAP,CAAN,EAAiB,GAAjB,CAAT;;YAEE6D,QAAQlB,SAASzQ,MAAT,EAAiB,CAAjB,KAAuB8N,OAAOnO,MAAP,GAAgB,CAAvC,CAAZ;aACK,IAAI2G,IAAI,CAAb,EAAgBA,IAAIwH,OAAOnO,MAA3B,EAAmC2G,GAAnC,EAAwC;cAClCoL,iBAAiB/R,MAAjB,KAA4B,CAAhC,EAAmC;6BAChBoG,IAAjB,CAAsB,CAAtB;;;2BAGeA,IAAjB,CAAsB2L,iBAAiBpL,IAAI,CAArB,IAA0BqL,KAAhD;;eAEKC,eACJ9D,MADI,CACGA,MADH,EAEJhK,KAFI,CAEE4N,gBAFF,CAAP;;KArEJ;WA0EO9Q,IAAP,CAAYZ,OAAOa,UAAnB,EAA+Bc,OAA/B,CAAuC,UAAS6E,CAAT,EAAY;UAE/CxG,OAAOa,UAAP,CAAkB2F,CAAlB,EAAqB1E,MAArB,KAAgCZ,SAAhC,IACAlB,OAAOa,UAAP,CAAkB2F,CAAlB,EAAqB1E,MAArB,KAAgC,IAFlC,EAGE;eACOjB,UAAP,CAAkB2F,CAAlB,EAAqB1E,MAArB,GAA8BgP,cAAc9Q,OAAOa,UAAP,CAAkB2F,CAAlB,EAAqBrD,IAAnC,EAC5BqD,CAD4B,CAA9B;;KALJ;;;WAYO1C,KAAP,CAAa,CAAC,CAAD,EAAI/D,EAAEC,MAAF,CAAJ,CAAb,EAA6B,CAA7B;;QAEM8L,mBAAmBC,OAAOD,gBAAP,IAA2B,CAApD;;;OAGG5F,SAAH,CACG3E,SADH,CACa,QADb,EAEGkD,KAFH,CAES,YAFT,EAEuBzE,OAAOE,MAAP,CAAcwJ,GAAd,GAAoB,IAF3C,EAGGjF,KAHH,CAGS,aAHT,EAGwBzE,OAAOE,MAAP,CAAcE,IAAd,GAAqB,IAH7C,EAIGqE,KAJH,CAIS,OAJT,EAIkB1E,EAAEC,MAAF,IAAY,CAAZ,GAAgB,IAJlC,EAKGyE,KALH,CAKS,QALT,EAKmBkF,EAAE3J,MAAF,IAAY,CAAZ,GAAgB,IALnC,EAMGwE,IANH,CAMQ,OANR,EAMiB,CAACzE,EAAEC,MAAF,IAAY,CAAb,IAAkB8L,gBANnC,EAOGtH,IAPH,CAOQ,QAPR,EAOkB,CAACmF,EAAE3J,MAAF,IAAY,CAAb,IAAkB8L,gBAPpC;;QASIK,UAAJ,CAAe0F,WAAf,GAA6B7R,OAAO8R,KAApC;QACI3F,UAAJ,CAAe4F,SAAf,GAA2B,GAA3B;QACI5F,UAAJ,CAAe6F,wBAAf,GAA0ChS,OAAOiS,SAAjD;QACI9F,UAAJ,CAAe+F,WAAf,GAA6BlS,OAAOmS,KAApC;QACIhG,UAAJ,CAAeuD,KAAf,CAAqB5D,gBAArB,EAAuCA,gBAAvC;QACIzJ,OAAJ,CAAYwP,WAAZ,GAA0B7R,OAAOoS,YAAjC;QACI/P,OAAJ,CAAY0P,SAAZ,GAAwB,GAAxB;QACI1P,OAAJ,CAAY2P,wBAAZ,GAAuChS,OAAOiS,SAA9C;QACI5P,OAAJ,CAAY6P,WAAZ,GAA0BlS,OAAOmS,KAAjC;QACI9P,OAAJ,CAAYqN,KAAZ,CAAkB5D,gBAAlB,EAAoCA,gBAApC;QACIuG,SAAJ,CAAcN,SAAd,GAA0B,CAA1B;QACIM,SAAJ,CAAc3C,KAAd,CAAoB5D,gBAApB,EAAsCA,gBAAtC;;WAEO,IAAP;GApHc;CAAlB;;ACJA,IAAMyE,YAAY,SAAZA,SAAY,CAACvQ,MAAD,EAASO,EAAT,EAAa2P,KAAb;SAChB,YAAW;QACL,CAAC3P,GAAGe,CAAH,EAAL,EAAa;SACRgD,UAAH;;;QAGIhD,IAAIf,GAAGe,CAAH,EAAV;;;MAGEiD,MAAF,CAAS,OAAT,EACGC,IADH,CACQ,OADR,EACiB,OADjB,EAEGhD,IAFH,CAEQ,UAASC,CAAT,EAAY;UACZzB,OAAOa,UAAP,CAAkBY,CAAlB,MAAyBP,SAA7B,EAAwC;eAC/BL,UAAP,CAAkBY,CAAlB,EAAqB,OAArB,IAAgCuC,OAAOtC,OAAO,IAAP,CAAP,EAAqBN,MAArB,CAA4B,CAC1D,CAAC,CAAC,EAAF,EAAM,CAAN,CAD0D,EAE1D,CAAC,EAAD,EAAKpB,OAAOa,UAAP,CAAkBY,CAAlB,EAAqBK,MAArB,CAA4BgC,KAA5B,GAAoC,CAApC,CAAL,CAF0D,CAA5B,CAAhC;eAIO,IAAP,EAAa/B,IAAb,CACE/B,OAAOa,UAAP,CAAkBY,CAAlB,EAAqB,OAArB,EACGwC,EADH,CACM,OADN,EACe,YAAW;cAClB3B,MAAM4B,WAAN,KAAsB,IAAtB,IAA8B,CAAC5B,MAAM4B,WAAN,CAAkBoO,OAArD,EAA8D;eACzDnQ,UAAH;;SAHN,EAMG8B,EANH,CAMM,OANN,EAMe,YAAW;cAClB,CAAC3B,MAAM4B,WAAN,CAAkBoO,OAAvB,EAAgC;eAC3BrR,KAAH;;SARN,EAWGgD,EAXH,CAWM,KAXN,EAWa,YAAW;;;;;cAKhB3B,MAAM4B,WAAN,CAAkBoO,OAAtB,EAA+B;gBACzBC,OAAO7Q,OAAO,IAAP,EACRA,MADQ,CACD,YADC,EAERgM,KAFQ,GAEA,CAFA,EAEG8E,SAFd;mBAGOD,KAAKE,OAAL,CACL,mBADK,EAEL,2BACE,aADF,GAEEzS,OAAOQ,OAAP,CAAeb,MAFjB,GAGE,GALG,CAAP;gBAOI+S,MAAMhR,OAAO,IAAP,EAAagM,KAAb,GAAqB,CAArB,EAAwBC,QAAlC;gBACI1M,QAAQ;kBACNjB,OAAOQ,OAAP,CAAeb,MADT;sBAEFwB,eAAe,IAAf,CAFE;oBAGJoR,IAHI;oBAIJG;aAJR;mBAMOlS,OAAP,CAAeuF,IAAf,CAAoB9E,KAApB;mBACOS,OAAO,IAAP,EAAagM,KAAb,GAAqB,CAArB,EAAwBiF,UAA/B,EACGjR,MADH,CACU,OADV,EAEGgM,KAFH,GAEW,CAFX,EAEc8E,SAFd,IAE2BD,IAF3B;eAGGtR,KAAH;mBACOJ,UAAP,CAAkBY,CAAlB,EAAqBR,KAArB,CAA2Be,IAA3B,CAAgCN,OAAO,IAAP,EAAa,IAAb,CAAhC;mBACO,IAAP,EACGA,MADH,CACU,YADV,EAEG8C,IAFH,CAEQ,OAFR,EAEiB,cAFjB;eAGG+L,SAAH;WA3BF,MA4BO;eACFtP,KAAH;;SA7CN,CADF;eAkDO,IAAP,EAAagD,EAAb,CAAgB,UAAhB,EAA4B,YAAW;aAClC9B,UAAH,CAAcV,CAAd;SADF;;KA1DN;;UAgEM8O,SAAN,GAAkB,IAAlB;WACO,IAAP;GA1Ec;CAAlB;;ACDA,IAAMqC,cAAc,SAAdA,WAAc,CAAC5S,MAAD,EAASO,EAAT;SAClB,UAASsS,MAAT,EAAiB1P,IAAjB,EAAuB;QACf2P,IAAI3P,QAAQ,QAAlB;QACI,OAAO0P,MAAP,KAAkB,WAAtB,EAAmC;eACxB,IAAT;;;;QAIE,CAAClS,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BlB,MAApC,EAA4C;SACvCoT,gBAAH;;OAECnC,SAAH;;;QAGMoC,SAASrS,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+B+B,MAA/B,CACb;aAAK5C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBS,IAArB,IAA6B2P,CAAlC;KADa,CAAf;;QAIID,MAAJ,EAAY;UACN9B,UAAU3P,OACZ4R,OACG5T,GADH,CACO;eAAKY,OAAOa,UAAP,CAAkBY,CAAlB,EAAqBK,MAArB,CAA4BgM,MAA5B,EAAL;OADP,EAEGhN,MAFH,CAEU,UAACE,GAAD,EAAMD,GAAN;eAAcC,IAAIzB,MAAJ,CAAWwB,GAAX,CAAd;OAFV,CADY,CAAd;;aAMOY,OAAP,CAAe,aAAK;eACXd,UAAP,CAAkBY,CAAlB,EAAqBK,MAArB,CAA4BgM,MAA5B,CAAmCiD,OAAnC;OADF;KAPF,MAUO;aACEpP,OAAP,CAAe,aAAK;eACXd,UAAP,CAAkBY,CAAlB,EAAqBK,MAArB,CAA4BgM,MAA5B,CAAmC1M,OAAOpB,OAAOpB,IAAd,EAAoB;iBAAK,CAAC6C,EAAE+E,CAAF,CAAN;SAApB,CAAnC;OADF;;;;QAMExG,OAAOiT,eAAP,KAA2B,IAA/B,EAAqC;SAChCA,eAAH,CAAmBjT,OAAOiT,eAA1B;;;WAGK,IAAP;GAvCgB;CAApB;;ACFA,IAAMC,uBAAuB,SAAvBA,oBAAuB,CAACrS,UAAD,EAAaoP,QAAb;SAA0B;WACrDtP,OAAOC,IAAP,CAAYC,UAAZ,EAAwBzB,GAAxB,CAA4B,aAAK;UACzBmI,IAAI0I,SAASxO,CAAT,CAAV;UACM+F,IAAI3G,WAAWY,CAAX,EAAcK,MAAd,CAAqBqR,IAAI1R,CAAJ,CAArB,CAAV;aACO,CAAC8F,CAAD,EAAIC,CAAJ,CAAP;KAHF,CADqD;GAA1B;CAA7B;;;;;;;;;;;;;;;;ACAA,IAAM4L,UAAU,SAAVA,OAAU;SAAK3R,MAAM,IAAN,IAAcA,MAAMP,SAAzB;CAAhB;;AAEA,IAAMmS,yBAAyB,SAAzBA,sBAAyB,CAACrT,MAAD,EAASO,EAAT;SAC7B,UAAS2H,IAAT,EAAe;QACPoL,QAAQ/S,GAAGgT,oBAAH,CAAwBvT,OAAOpB,IAA/B,CAAd;WACOsJ,OAAOA,IAAP,GAAcvH,OAAOC,IAAP,CAAY0S,KAAZ,CAArB;;WAEOpL,KAAKpH,MAAL,CAAY,UAACC,GAAD,EAAMC,GAAN,EAAWyE,CAAX,EAAiB;UAC5Be,IAAIxG,OAAOa,UAAP,CAAkBG,GAAlB,IAAyBhB,OAAOa,UAAP,CAAkBG,GAAlB,CAAzB,GAAkD,EAA5D;UACIA,GAAJ,iBACKwF,CADL;gBAEU4M,QAAQ5M,EAAEgN,MAAV,IAAoBhN,EAAEgN,MAAtB,GAA+B,MAFzC;eAGSJ,QAAQ5M,EAAEiN,KAAV,IAAmBjN,EAAEiN,KAArB,GAA6B,CAHtC;uBAIiBL,QAAQ5M,EAAEkN,aAAV,IAA2BlN,EAAEkN,aAA7B,GAA6C,CAJ9D;uBAKiBN,QAAQ5M,EAAEmN,aAAV,IAA2BnN,EAAEmN,aAA7B,GAA6C,CAL9D;qBAMeP,QAAQ5M,EAAEoN,WAAV,IAAyBpN,EAAEoN,WAA3B,GAAyC,CANxD;cAOQR,QAAQ5M,EAAErD,IAAV,IAAkBqD,EAAErD,IAApB,GAA2BmQ,MAAMtS,GAAN,CAPnC;eAQSoS,QAAQ5M,EAAEqN,KAAV,IAAmBrN,EAAEqN,KAArB,GAA6BpO;;;aAG/B1E,GAAP;KAbK,EAcJ,EAdI,CAAP;GAL2B;CAA/B;;ACOA;;;;;;;;;;AAUA,IAAMuD,aAAa,SAAbA,UAAa,CAACtE,MAAD,EAASO,EAAT,EAAawJ,MAAb,EAAqBmG,KAArB,EAA4BvM,IAA5B;SACjB,YAAW;QACLpD,GAAGe,CAAH,OAAWJ,SAAf,EAA0B;SACrB4S,UAAH;;;OAGCC,EAAH,GAAQxT,GAAGoI,GAAH,CACLpH,SADK,CACK,YADL,EAEL3C,IAFK,CAEA2B,GAAGyJ,uBAAH,EAFA,EAE8B,UAASvI,CAAT,EAAY;aACvCA,CAAP;KAHI,EAKLwD,KALK,GAMLV,MANK,CAME,OANF,EAOLC,IAPK,CAOA,OAPA,EAOS,WAPT,EAQLA,IARK,CAQA,WARA,EAQa,UAAS/C,CAAT,EAAY;aACtB,eAAesI,OAAOtI,CAAP,CAAf,GAA2B,GAAlC;KATI,CAAR;;OAYGsS,EAAH,CACGxP,MADH,CACU,OADV,EAEGC,IAFH,CAEQ,OAFR,EAEiB,MAFjB,EAGGA,IAHH,CAGQ,WAHR,EAGqB,gBAHrB,EAIGhD,IAJH,CAIQ,UAASC,CAAT,EAAY;UACZ2O,cAAc1O,OAAO,IAAP,EAAaK,IAAb,CAChBxB,GAAG8P,eAAH,CAAmB1M,IAAnB,EAAyB3D,OAAOa,UAAP,CAAkBY,CAAlB,CAAzB,CADgB,CAAlB;;kBAKGF,SADH,CACa,MADb,EAEGkD,KAFH,CAES,MAFT,EAEiB,MAFjB,EAGGA,KAHH,CAGS,QAHT,EAGmB,MAHnB,EAIGA,KAJH,CAIS,iBAJT,EAI4B,YAJ5B;;kBAOGlD,SADH,CACa,MADb,EAEGkD,KAFH,CAES,MAFT,EAEiB,MAFjB,EAGGA,KAHH,CAGS,QAHT,EAGmB,MAHnB,EAIGA,KAJH,CAIS,iBAJT,EAI4B,YAJ5B;KAfJ,EAsBGF,MAtBH,CAsBU,UAtBV,EAuBGC,IAvBH,CAuBQ,aAvBR,EAuBuB,QAvBvB,EAwBGA,IAxBH,CAwBQ,GAxBR,EAwBa,CAxBb,EAyBGA,IAzBH,CA0BI,WA1BJ,EA2BI,4BAA4BxE,OAAO8P,sBAAnC,GAA4D,GA3BhE,EA6BGtL,IA7BH,CA6BQ,GA7BR,EA6Ba,CA7Bb,EA8BGA,IA9BH,CA8BQ,OA9BR,EA8BiB,OA9BjB,EA+BG8L,IA/BH,CA+BQpB,gBAAgBlP,MAAhB,CA/BR,EAgCGiE,EAhCH,CAgCM,UAhCN,EAgCkBmL,qBAAqBpP,MAArB,EAA6BO,EAA7B,EAAiCoD,IAAjC,CAhClB,EAiCGM,EAjCH,CAiCM,OAjCN,EAiCe0L,aAAa3P,MAAb,EAAqBO,EAArB,CAjCf;;QAmCIP,OAAO0Q,kBAAP,IAA6B,KAAjC,EAAwC;SACnC/H,GAAH,CACGpE,MADH,CACU,MADV,EAEGC,IAFH,CAEQ,IAFR,EAEc,CAFd,EAGGA,IAHH,CAGQ,IAHR,EAGc,IAAIxE,OAAO2Q,yBAAP,CAAiCjH,GAHnD,EAIGlF,IAJH,CAIQ,IAJR,EAIczE,EAAEC,MAAF,CAJd,EAKGwE,IALH,CAKQ,IALR,EAKc,IAAIxE,OAAO2Q,yBAAP,CAAiCjH,GALnD,EAMGlF,IANH,CAMQ,cANR,EAMwB,CANxB,EAOGA,IAPH,CAOQ,QAPR,EAOkB,MAPlB,EAQGA,IARH,CAQQ,MARR,EAQgB,MARhB,EASGA,IATH,CASQ,iBATR,EAS2B,YAT3B;KADF,MAWO,IAAIxE,OAAO0Q,kBAAP,IAA6B,QAAjC,EAA2C;SAC7C/H,GAAH,CACGpE,MADH,CACU,MADV,EAEGC,IAFH,CAEQ,IAFR,EAEc,CAFd,EAGGA,IAHH,CAGQ,IAHR,EAGcmF,EAAE3J,MAAF,IAAY,CAAZ,GAAgBA,OAAO2Q,yBAAP,CAAiC9G,MAH/D,EAIGrF,IAJH,CAIQ,IAJR,EAIczE,EAAEC,MAAF,CAJd,EAKGwE,IALH,CAKQ,IALR,EAKcmF,EAAE3J,MAAF,IAAY,CAAZ,GAAgBA,OAAO2Q,yBAAP,CAAiC9G,MAL/D,EAMGrF,IANH,CAMQ,cANR,EAMwB,CANxB,EAOGA,IAPH,CAOQ,QAPR,EAOkB,MAPlB,EAQGA,IARH,CAQQ,MARR,EAQgB,MARhB,EASGA,IATH,CASQ,iBATR,EAS2B,YAT3B;;;UAYIwP,IAAN,GAAa,IAAb;WACO,IAAP;GA9Ee;CAAnB;;;;;ACfA,IAAMC,WAAW,SAAXA,QAAW,CAACjU,MAAD,EAASO,EAAT,EAAa0P,QAAb;SAA0B,cAAM;QACzCiE,IAAIC,MAAM,GAAhB;QACMtD,MAAMtQ,GAAGsQ,GAAH,CAAOuD,KAAnB;QACMvJ,aAAa,CAAnB;QACME,WAAW,IAAIpD,KAAKiD,EAA1B;QACIsH,WAAJ,GAAkBtK,IAAI,CAAC,IAAID,KAAK0M,GAAL,CAASrU,OAAOpB,IAAP,CAAYe,MAArB,EAA6B,IAAI,CAAjC,CAAL,EAA0C,CAA1C,CAAJ,CAAlB;WACOf,IAAP,CAAY+C,OAAZ,CAAoB,aAAK;cACf3B,OAAOa,UAAf,EAA2Bc,OAA3B,CAAmC,UAACe,CAAD,EAAI+C,CAAJ,EAAU;YACvC6O,SAAJ;YACIxJ,GAAJ,CACEmF,SAASvN,CAAT,CADF,EAEE1C,OAAOa,UAAP,CAAkB6B,EAAEgK,GAApB,EAAyB5K,MAAzB,CAAgCL,EAAEiB,CAAF,CAAhC,CAFF,EAGEwR,CAHF,EAIErJ,UAJF,EAKEE,QALF;YAOIwJ,MAAJ;YACIC,IAAJ;OAVF;KADF;WAcO7N,OAAP;GApBe;CAAjB;;ACFA,IAAM0J,kBAAkB,SAAlBA,eAAkB,CAAC1M,IAAD,EAAOvB,SAAP,EAAqB;MACvCqS,gBAAJ;;UAEQrS,UAAUoR,MAAlB;SACO,MAAL;gBACYkB,SAAStS,UAAUN,MAAnB,CAAV;;SAEG,OAAL;gBACY6S,UAAUvS,UAAUN,MAApB,CAAV;;SAEG,KAAL;gBACY8S,QAAQxS,UAAUN,MAAlB,CAAV;;SAEG,QAAL;gBACY+S,WAAWzS,UAAUN,MAArB,CAAV;;;gBAGU4S,SAAStS,UAAUN,MAAnB,CAAV;;;;UAKD2R,KADH,CACSrR,UAAUqR,KADnB,EAEGqB,UAFH,CAEc1S,UAAU0S,UAFxB,EAGGC,aAHH,CAGiB3S,UAAUsR,aAH3B,EAIGsB,aAJH,CAIiB5S,UAAUuR,aAJ3B,EAKGC,WALH,CAKexR,UAAUwR,WALzB,EAMGqB,UANH,CAMc7S,UAAU6S,UANxB;;SAQOR,OAAP;CA7BF;;ACGA;AACA,IAAMjE,cAAc,SAAdA,WAAc,CAACxQ,MAAD,EAASO,EAAT,EAAawJ,MAAb,EAAqBkG,QAArB,EAA+BiF,QAA/B,EAAyChF,KAAzC;SAClB,YAAW;QACL3P,GAAGe,CAAH,OAAWJ,SAAf,EAA0BX,GAAG+D,UAAH;QACpBhD,IAAIf,GAAGe,CAAH,EAAV;;MAEEmD,KAAF,CAAQ,QAAR,EAAkB,MAAlB,EAA0B1C,IAA1B,CACEqH,OACGnF,EADH,CACM,OADN,EACe,UAASxC,CAAT,EAAY;eACdA,CAAT,IAAc,KAAK0T,UAAL,GAAkBpL,OAAOtI,CAAP,CAAhC;KAFJ,EAIGwC,EAJH,CAIM,MAJN,EAIc,UAASxC,CAAT,EAAY;eACbA,CAAT,IAAckG,KAAKC,GAAL,CACZ7H,EAAEC,MAAF,CADY,EAEZ2H,KAAKE,GAAL,CAAS,CAAT,EAAa,KAAKsN,UAAL,IAAmB7S,MAAM8S,EAAtC,CAFY,CAAd;SAIGC,cAAH;aACOvH,MAAP,CAAcvN,GAAGyJ,uBAAH,EAAd;SACGnL,MAAH;QACE2F,IAAF,CAAO,WAAP,EAAoB;eAAK,eAAeyL,SAASxO,CAAT,CAAf,GAA6B,GAAlC;OAApB;KAZJ,EAcGwC,EAdH,CAcM,KAdN,EAca,UAASxC,CAAT,EAAY;aACd,KAAK0T,UAAZ;aACOD,SAASzT,CAAT,CAAP;aACO,IAAP,EACG8N,UADH,GAEG/K,IAFH,CAEQ,WAFR,EAEqB,eAAeuF,OAAOtI,CAAP,CAAf,GAA2B,GAFhD;SAGG5C,MAAH;KApBJ,CADF;UAwBM2R,WAAN,GAAoB,IAApB;WACO,IAAP;GA9BgB;CAApB;;ACNA;;AAEA,IAAM8E,SAAS,SAATA,MAAS,CAACtV,MAAD,EAASO,EAAT,EAAa2P,KAAb,EAAoB1M,MAApB,EAA+B;SACrC,YAAW;;OAEb0C,SAAH,CACGxE,MADH,CACU,KADV,EAEG8C,IAFH,CAEQ,OAFR,EAEiBxE,OAAOC,KAFxB,EAGGuE,IAHH,CAGQ,QAHR,EAGkBxE,OAAO4J,MAHzB;OAIGjB,GAAH,CAAOnE,IAAP,CACE,WADF,EAEE,eAAexE,OAAOE,MAAP,CAAcE,IAA7B,GAAoC,GAApC,GAA0CJ,OAAOE,MAAP,CAAcwJ,GAAxD,GAA8D,GAFhE;;;QAMIwG,MAAMK,SAAV,EAAqBhQ,GAAG4B,UAAH;;;OAGlByO,SAAH;;;QAGIrQ,GAAGe,CAAH,EAAJ,EAAYf,GAAG+D,UAAH;QACR4L,MAAMK,SAAV,EAAqBhQ,GAAGgQ,SAAH;QACjBL,MAAMM,WAAV,EAAuBjQ,GAAGiQ,WAAH;;WAEhBzO,IAAP,CAAY,QAAZ,EAAsB,IAAtB,EAA4B;aACnB/B,OAAOC,KADY;cAElBD,OAAO4J,MAFW;cAGlB5J,OAAOE;KAHjB;;WAMO,IAAP;GA5BF;CADF;;ACFA;;;AAGA,IAAMqV,UAAU,SAAVA,OAAU,CAACvV,MAAD,EAASO,EAAT,EAAawJ,MAAb;SAAwB,mBAAW;QAC3CyL,WAAWjV,GAAGyJ,uBAAH,GAA6B,CAA7B,CAAjB;;OAEGyL,uBAAH,CAA2BC,OAA3B;;;;QAIMC,YAAYH,aAAajV,GAAGyJ,uBAAH,GAA6B,CAA7B,CAA/B;;QAEI2L,SAAJ,EAAe;aACN7H,MAAP,CAAcvN,GAAGyJ,uBAAH,EAAd;UACM4L,cAAc5V,OAAO4V,WAAP,CAAmBvW,KAAnB,CAAyB,CAAzB,CAApB;SACGwW,WAAH;;UAEMvU,IAAIf,GAAGe,CAAH,EAAV;QACEiO,UAAF,GACGC,QADH,CACY,IADZ,EAEGhL,IAFH,CAEQ,WAFR,EAEqB;eAAK,eAAeuF,OAAOtI,CAAP,CAAf,GAA2B,GAAhC;OAFrB;SAGG5C,MAAH;;;UAGI+W,YAAYjW,MAAZ,KAAuB,CAA3B,EAA8B;WACzB0S,SAAH,CAAauD,WAAb;;;GAtBU;CAAhB;;ACHA,IAAMP,iBAAiB,SAAjBA,cAAiB,CAACrV,MAAD,EAASiQ,QAAT;SAAsB,YAAM;QAC3C6F,OAAOnV,OAAOoV,MAAP,CAAc,EAAd,EAAkB/V,OAAOa,UAAzB,CAAb;QACMmV,qBAAqBrV,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+B0Q,IAA/B,CACzB,UAAC/G,CAAD,EAAIpF,CAAJ;aAAW6K,SAASzF,CAAT,IAAcyF,SAAS7K,CAAT,CAAd,KAA8B,CAA9B,GAAkC,CAAlC,GAAsC6K,SAASzF,CAAT,IAAcyF,SAAS7K,CAAT,CAA/D;KADyB,CAA3B;WAGOvE,UAAP,GAAoB,EAApB;uBACmBc,OAAnB,CAA2B,UAACe,CAAD,EAAI+C,CAAJ,EAAU;aAC5B5E,UAAP,CAAkB6B,CAAlB,IAAuBoT,KAAKpT,CAAL,CAAvB;aACO7B,UAAP,CAAkB6B,CAAlB,EAAqBmR,KAArB,GAA6BpO,CAA7B;KAFF;GANqB;CAAvB;;ACAA,IAAMgQ,0BAA0B,SAA1BA,uBAA0B;SAAU,mBAAW;QAC7CK,OAAOnV,OAAOoV,MAAP,CAAc,EAAd,EAAkB/V,OAAOa,UAAzB,CAAb;QACMmV,qBAAqBrV,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+B0Q,IAA/B,CAAoC,UAAC/G,CAAD,EAAIpF,CAAJ,EAAU;UACjE6Q,kBACJjW,OAAOa,UAAP,CAAkB2J,CAAlB,EAAqB1I,MAArB,CAA4B4T,QAAQlL,CAAR,CAA5B,IACAxK,OAAOa,UAAP,CAAkBuE,CAAlB,EAAqBtD,MAArB,CAA4B4T,QAAQtQ,CAAR,CAA5B,CAFF;;;;;aAOO6Q,oBAAoB,CAApB,GAAwBzL,EAAE0L,aAAF,CAAgB9Q,CAAhB,CAAxB,GAA6C6Q,eAApD;KARyB,CAA3B;WAUOpV,UAAP,GAAoB,EAApB;uBACmBc,OAAnB,CAA2B,UAACe,CAAD,EAAI+C,CAAJ,EAAU;aAC5B5E,UAAP,CAAkB6B,CAAlB,IAAuBoT,KAAKpT,CAAL,CAAvB;aACO7B,UAAP,CAAkB6B,CAAlB,EAAqBmR,KAArB,GAA6BpO,CAA7B;KAFF;GAb8B;CAAhC;;ACAA,IAAM0Q,YAAY,SAAZA,SAAY,CAACnW,MAAD,EAASwC,UAAT,EAAwB;MACpCxC,OAAOqC,OAAP,IAAkBrC,OAAOqC,OAAP,CAAe1C,MAAf,KAA0BK,OAAOpB,IAAP,CAAYe,MAA5D,EACE,OAAO,IAAP;;MAEIyW,SAAS5T,WAAWsM,WAAX,GAAyBuH,UAAzB,EAAf;;OAEK,IAAI3J,GAAT,IAAgB0J,MAAhB,EAAwB;QAClBA,OAAOE,cAAP,CAAsB5J,GAAtB,CAAJ,EAAgC;aACvB,IAAP;;;SAGG,KAAP;CAXF;;ACIA,IAAM7M,QAAQ,SAARA,KAAQ,CAACG,MAAD,EAASO,EAAT,EAAasQ,GAAb,EAAkBrO,UAAlB;SACZ,UAAS+T,KAAT,EAAgB;QACVA,KAAJ,EAAWC,SAAX,CAAqB,CAArB,EAAwB,CAAxB,EAA2BzW,EAAEC,MAAF,IAAY,CAAvC,EAA0C2J,EAAE3J,MAAF,IAAY,CAAtD;;;;;QAKIuW,UAAU,SAAV,IAAuBJ,UAAUnW,MAAV,EAAkBwC,UAAlB,CAA3B,EAA0D;UACpDH,OAAJ,CAAYmK,SAAZ,GAAwBjM,GAAG2F,SAAH,CAAazB,KAAb,CAAmB,kBAAnB,CAAxB;UACIpC,OAAJ,CAAY6P,WAAZ,GAA0B,IAAIlS,OAAOyW,cAArC;UACIpU,OAAJ,CAAYoK,QAAZ,CAAqB,CAArB,EAAwB,CAAxB,EAA2B1M,EAAEC,MAAF,IAAY,CAAvC,EAA0C2J,EAAE3J,MAAF,IAAY,CAAtD;UACIqC,OAAJ,CAAY6P,WAAZ,GAA0BlS,OAAOmS,KAAjC;;WAEK,IAAP;GAbU;CAAd;;ACJA,IAAMuE,mBAAmB,SAAnBA,gBAAmB,CAAC1W,MAAD,EAASiQ,QAAT,EAAmBkD,GAAnB,EAA2B;MAC5CwD,YAAY,EAAlB;;MAEMjU,IAAI/B,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,CAAV;MACM+V,OAAOlU,EAAE/C,MAAf;MACM6K,IAAI,GAAV,CALkD;OAM7C,IAAI/E,IAAI,CAAb,EAAgBA,IAAImR,IAApB,EAA0B,EAAEnR,CAA5B,EAA+B;;QAEvB8B,IAAI0I,SAASvN,EAAE+C,CAAF,CAAT,CAAV;QACM+B,IAAIxH,OAAOa,UAAP,CAAkB6B,EAAE+C,CAAF,CAAlB,EAAwB3D,MAAxB,CAA+BqR,IAAIzQ,EAAE+C,CAAF,CAAJ,CAA/B,CAAV;cACUM,IAAV,CAAe8Q,GAAG,CAACtP,CAAD,EAAIC,CAAJ,CAAH,CAAf;;;QAGI/B,IAAImR,OAAO,CAAf,EAAkB;UACVE,KAAKvP,IAAIiD,KAAKyF,SAASvN,EAAE+C,IAAI,CAAN,CAAT,IAAqB8B,CAA1B,CAAf;UACIwP,KAAKvP,IAAIgD,KAAKxK,OAAOa,UAAP,CAAkB6B,EAAE+C,IAAI,CAAN,CAAlB,EAA4B3D,MAA5B,CAAmCqR,IAAIzQ,EAAE+C,IAAI,CAAN,CAAJ,CAAnC,IAAoD+B,CAAzD,CAAb;UACIxH,OAAOiT,eAAP,KAA2B,IAA/B,EAAqC;YAC7B+D,eAAehX,OAAOiX,gBAAP,CAClBC,GADkB,CAEjBlX,OAAOa,UAAP,CAAkBb,OAAOiT,eAAzB,EAA0CnR,MAA1C,CACEqR,IAAInT,OAAOiT,eAAX,CADF,CAFiB,EAMlBiE,GANkB,CAMdxU,EAAE+C,CAAF,CANc,CAArB;YAOM0R,gBAAgBnX,OAAOiX,gBAAP,CACnBC,GADmB,CAElBlX,OAAOa,UAAP,CAAkBb,OAAOiT,eAAzB,EAA0CnR,MAA1C,CACEqR,IAAInT,OAAOiT,eAAX,CADF,CAFkB,EAMnBiE,GANmB,CAMfxU,EAAE+C,IAAI,CAAN,CANe,CAAtB;YAOI2R,WAAW,OAAOJ,eAAeG,aAAtB,CAAf;aACKC,WAAW,CAAC,IAAIpX,OAAOqX,gBAAZ,KAAiCN,KAAKK,QAAtC,CAAhB;;gBAEQrR,IAAV,CAAe8Q,GAAG,CAACC,EAAD,EAAKC,EAAL,CAAH,CAAf;;;;SAIGJ,SAAP;CAtCF;;ACAA,IAAMW,uBAAuB,SAAvBA,oBAAuB,CAACC,UAAD,EAAaZ,SAAb,EAA2B;MAChDC,OAAOD,UAAUhX,MAAvB;MACM6K,IAAI+M,UAAV;MACMC,MAAM,EAAZ;;MAEIzR,IAAJ,CAAS4Q,UAAU,CAAV,CAAT;MACI5Q,IAAJ,CACE8Q,GAAG,CACDF,UAAU,CAAV,EAAa9Q,CAAb,CAAe,CAAf,IAAoB2E,IAAI,CAAJ,IAASmM,UAAU,CAAV,EAAa9Q,CAAb,CAAe,CAAf,IAAoB8Q,UAAU,CAAV,EAAa9Q,CAAb,CAAe,CAAf,CAA7B,CADnB,EAED8Q,UAAU,CAAV,EAAa9Q,CAAb,CAAe,CAAf,CAFC,CAAH,CADF;OAMK,IAAI4R,MAAM,CAAf,EAAkBA,MAAMb,OAAO,CAA/B,EAAkC,EAAEa,GAApC,EAAyC;QACnCC,MAAMf,UAAUc,GAAV,CAAV;QACIrX,OAAOuW,UAAUc,MAAM,CAAhB,CAAX;QACItX,QAAQwW,UAAUc,MAAM,CAAhB,CAAZ;;QAEIE,OAAOvX,KAAKwX,QAAL,CAAczX,KAAd,CAAX;QACI4F,IAAJ,CAAS2R,IAAIpY,GAAJ,CAAQqY,KAAKpQ,CAAL,CAAOiD,CAAP,CAAR,CAAT;QACIzE,IAAJ,CAAS2R,GAAT;QACI3R,IAAJ,CAAS2R,IAAIE,QAAJ,CAAaD,KAAKpQ,CAAL,CAAOiD,CAAP,CAAb,CAAT;;MAEEzE,IAAJ,CACE8Q,GAAG,CACDF,UAAUC,OAAO,CAAjB,EAAoB/Q,CAApB,CAAsB,CAAtB,IACE2E,IAAI,CAAJ,IAASmM,UAAUC,OAAO,CAAjB,EAAoB/Q,CAApB,CAAsB,CAAtB,IAA2B8Q,UAAUC,OAAO,CAAjB,EAAoB/Q,CAApB,CAAsB,CAAtB,CAApC,CAFD,EAGD8Q,UAAUC,OAAO,CAAjB,EAAoB/Q,CAApB,CAAsB,CAAtB,CAHC,CAAH,CADF;MAOIE,IAAJ,CAAS4Q,UAAUC,OAAO,CAAjB,CAAT;;SAEOY,GAAP;CA/BF;;ACAA;AACA;AAKA,IAAMK,cAAc,SAAdA,WAAc,CAAC7X,MAAD,EAASiQ,QAAT,EAAmBxO,CAAnB,EAAsBoP,GAAtB,EAA8B;MAC1C8F,YAAYD,iBAAiB1W,MAAjB,EAAyBiQ,QAAzB,EAAmCxO,CAAnC,CAAlB;MACM+V,MAAMF,qBAAqBtX,OAAOuX,UAA5B,EAAwCZ,SAAxC,CAAZ;;MAEImB,MAAJ,CAAWN,IAAI,CAAJ,EAAO3R,CAAP,CAAS,CAAT,CAAX,EAAwB2R,IAAI,CAAJ,EAAO3R,CAAP,CAAS,CAAT,CAAxB;;OAEK,IAAIJ,IAAI,CAAb,EAAgBA,IAAI+R,IAAI7X,MAAxB,EAAgC8F,KAAK,CAArC,EAAwC;QAClCzF,OAAO+X,iBAAX,EAA8B;WACvB,IAAIzR,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;YACtBmG,QAAJ,CAAa+K,IAAI/R,IAAIa,CAAR,EAAWT,CAAX,CAAa,CAAb,CAAb,EAA8B2R,IAAI/R,IAAIa,CAAR,EAAWT,CAAX,CAAa,CAAb,CAA9B,EAA+C,CAA/C,EAAkD,CAAlD;;;QAGAmS,aAAJ,CACER,IAAI/R,CAAJ,EAAOI,CAAP,CAAS,CAAT,CADF,EAEE2R,IAAI/R,CAAJ,EAAOI,CAAP,CAAS,CAAT,CAFF,EAGE2R,IAAI/R,IAAI,CAAR,EAAWI,CAAX,CAAa,CAAb,CAHF,EAIE2R,IAAI/R,IAAI,CAAR,EAAWI,CAAX,CAAa,CAAb,CAJF,EAKE2R,IAAI/R,IAAI,CAAR,EAAWI,CAAX,CAAa,CAAb,CALF,EAME2R,IAAI/R,IAAI,CAAR,EAAWI,CAAX,CAAa,CAAb,CANF;;CAZJ;;;AAwBA,IAAMoS,kBAAkB,SAAlBA,eAAkB,SAAU;MAC5BjY,OAAO0Q,kBAAP,IAA6B,QAAjC,EAA2C;WAClC/G,EAAE3J,MAAF,IAAY,CAAnB;GADF,MAEO,IAAIA,OAAO0Q,kBAAP,IAA6B,KAAjC,EAAwC;WACtC,CAAP;GADK,MAEA;YACGwH,GAAR,CACE,kFADF;;SAIKvO,EAAE3J,MAAF,IAAY,CAAnB;CAVF;;AAaA,IAAMmY,aAAa,SAAbA,UAAa,CAACnY,MAAD,EAASiQ,QAAT,EAAmBxO,CAAnB,EAAsBoP,GAAtB,EAA8B;UACvC7Q,OAAOa,UAAf,EAA2Bc,OAA3B,CAAmC,UAACe,CAAD,EAAI+C,CAAJ,EAAU;;QAEvCA,KAAK,CAAT,EAAY;UACNqS,MAAJ,CACE7H,SAASvN,EAAEgK,GAAX,CADF,EAEE,OAAOjL,EAAEiB,EAAEgK,GAAJ,CAAP,IAAmB,WAAnB,GACIuL,gBAAgBjY,MAAhB,CADJ,GAEIA,OAAOa,UAAP,CAAkB6B,EAAEgK,GAApB,EAAyB5K,MAAzB,CAAgCL,EAAEiB,EAAEgK,GAAJ,CAAhC,CAJN;KADF,MAOO;UACD0L,MAAJ,CACEnI,SAASvN,EAAEgK,GAAX,CADF,EAEE,OAAOjL,EAAEiB,EAAEgK,GAAJ,CAAP,IAAmB,WAAnB,GACIuL,gBAAgBjY,MAAhB,CADJ,GAEIA,OAAOa,UAAP,CAAkB6B,EAAEgK,GAApB,EAAyB5K,MAAzB,CAAgCL,EAAEiB,EAAEgK,GAAJ,CAAhC,CAJN;;GAVJ;CADF;;;AAsBA,IAAM2L,YAAY,SAAZA,SAAY,CAACrY,MAAD,EAASiQ,QAAT,EAAmBxO,CAAnB,EAAsBoP,GAAtB,EAA8B;MAC1CyD,SAAJ;MAEGtU,OAAOiT,eAAP,KAA2B,IAA3B,IAAmCjT,OAAOqX,gBAAP,GAA0B,CAA9D,IACArX,OAAOuX,UAAP,GAAoB,CAFtB,EAGE;gBACYvX,MAAZ,EAAoBiQ,QAApB,EAA8BxO,CAA9B,EAAiCoP,GAAjC;GAJF,MAKO;eACM7Q,MAAX,EAAmBiQ,QAAnB,EAA6BxO,CAA7B,EAAgCoP,GAAhC;;MAEE0D,MAAJ;CAVF;;ACjEA,IAAM+D,WAAW,SAAXA,QAAW;SAAM,OAAOC,CAAP,KAAa,UAAb,GAA0BA,CAA1B,GAA8B;WAAMA,CAAN;GAApC;CAAjB;;ACIA,IAAMC,cAAc,SAAdA,WAAc,CAACxY,MAAD,EAAS6Q,GAAT,EAAcZ,QAAd;SAA2B,UAACxO,CAAD,EAAIgE,CAAJ,EAAU;QACnDzF,OAAOoS,YAAP,KAAwB,IAA5B,EAAkC;UAC5B/P,OAAJ,CAAYwP,WAAZ,GAA0B4G,SAAQzY,OAAOoS,YAAf,EAA6B3Q,CAA7B,EAAgCgE,CAAhC,CAA1B;KADF,MAEO;UACDpD,OAAJ,CAAYwP,WAAZ,GAA0B4G,SAAQzY,OAAO8R,KAAf,EAAsBrQ,CAAtB,EAAyBgE,CAAzB,CAA1B;;WAEK4S,UAAUrY,MAAV,EAAkBiQ,QAAlB,EAA4BxO,CAA5B,EAA+BoP,IAAIxO,OAAnC,CAAP;GANkB;CAApB;;AASA,IAAMqW,uBAAuB,SAAvBA,oBAAuB,CAAC1Y,MAAD,EAAS6Q,GAAT,EAAcZ,QAAd,EAAwB1P,EAAxB,EAA4BiC,UAA5B;SAA2C,YAAM;OACzE3C,KAAH,CAAS,SAAT;;QAEIsW,UAAUnW,MAAV,EAAkBwC,UAAlB,KAAiCxC,OAAOqC,OAAP,KAAmB,KAAxD,EAA+D;aACtDA,OAAP,CAAeV,OAAf,CAAuB6W,YAAYxY,MAAZ,EAAoB6Q,GAApB,EAAyBZ,QAAzB,CAAvB;;GAJyB;CAA7B;;AAQA,IAAM0I,qBAAqB,SAArBA,kBAAqB,CAAC3Y,MAAD,EAASwC,UAAT,EAAqBoW,YAArB;SAAsC,YAAM;QACjEzC,UAAUnW,MAAV,EAAkBwC,UAAlB,CAAJ,EAAmC;mBACpBxC,OAAOqC,OAApB;KADF,MAEO;mBACQ,EAAb,EADK;;GAHkB;CAA3B;;AAQA,IAAMH,gBAAgB,SAAhBA,aAAgB,CAAClC,MAAD,EAASO,EAAT,EAAaiD,MAAb;SACpB,YAAW;QACL,CAAC7C,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BlB,MAApC,EAA4CY,GAAGwS,gBAAH;;OAEzC7Q,aAAH,CAAiBlC,OAAOgP,IAAxB;WACOjN,IAAP,CAAY,QAAZ,EAAsB,IAAtB;WACO,IAAP;GANkB;CAAtB;;AC3BA,IAAMI,eAAa,SAAbA,UAAa;SACjB,UAASC,SAAT,EAAoB;QACZyW,gBAAgB,EAAtB;SACK,IAAIvS,IAAI,CAAb,EAAgBA,IAAItG,OAAOQ,OAAP,CAAeb,MAAnC,EAA2C2G,GAA3C,EAAgD;UAC1CtG,OAAOQ,OAAP,CAAe8F,CAAf,EAAkB1H,IAAlB,KAA2BwD,SAA/B,EAA0C;sBAC1B2D,IAAd,CAAmB/F,OAAOQ,OAAP,CAAe8F,CAAf,CAAnB;;;;WAIG9F,OAAP,GAAiBqY,aAAjB;WACOxW,OAAP,GAAiB,KAAjB;;QAEI9B,GAAGe,CAAH,OAAWJ,SAAf,EAA0B;UAClBwM,QAAQnN,GACXe,CADW,GAEXC,SAFW,CAED,QAFC,EAGXmM,KAHW,EAAd;WAIK,IAAIjI,IAAI,CAAb,EAAgBA,IAAIiI,MAAM/N,MAA1B,EAAkC8F,GAAlC,EAAuC;YACjCiI,MAAMjI,CAAN,EAASkI,QAAT,KAAsBvL,SAA1B,EAAqC;;iBAE5BV,OAAOgM,MAAMjI,CAAN,CAAP,EAAiBiI,KAAjB,GAAyB,CAAzB,EAA4BiF,UAAnC,EACGpR,SADH,CACa,QADb,EAEGoD,MAFH;iBAGO9D,UAAP,CAAkBuB,SAAlB,EAA6BnB,KAA7B,CAAmCe,IAAnC,CAAwCN,OAAOgM,MAAMjI,CAAN,CAAP,EAAiB,IAAjB,CAAxC;;;;;WAKC,IAAP;GA5Be;CAAnB;;ACFA;AACA,IAAMqT,SAAS,SAATA,MAAS,IAAK;SACX,GAAG3S,QAAH,CACJpE,IADI,CACCwW,CADD,EAEJQ,KAFI,CAEE,eAFF,EAEmB,CAFnB,EAGJC,WAHI,EAAP;CADF;;ACDA;AACA,IAAM7S,WAAW,SAAXA,QAAW;SAAU;WACzB,2BACAxF,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BlB,MAD/B,GAEA,eAFA,GAGAgB,OAAOC,IAAP,CAAYZ,OAAOpB,IAAP,CAAY,CAAZ,CAAZ,EAA4Be,MAH5B,GAIA,YAJA,GAKAK,OAAOpB,IAAP,CAAYe,MALZ,GAMA,OAPyB;GAAV;CAAjB;;ACDA;AACA,IAAMsZ,gBAAgB,SAAhBA,aAAgB,MAAO;MACvBC,MAAM,EAAV;OACK,IAAIzT,IAAI,CAAb,EAAgBA,IAAI0T,IAAIxZ,MAAJ,GAAa,CAAjC,EAAoC8F,GAApC,EAAyC;QACnCM,IAAJ,CAAS,CAACoT,IAAI1T,CAAJ,CAAD,EAAS0T,IAAI1T,IAAI,CAAR,CAAT,CAAT;;SAEKyT,GAAP;CALF;;ACIA,IAAME,gBAAgB,SAAhBA,aAAgB,CAACpZ,MAAD,EAAS6Q,GAAT,EAAcZ,QAAd;SAA2B,UAACxO,CAAD,EAAIgE,CAAJ,EAAU;QACrD4M,SAAJ,CAAcR,WAAd,GAA4B4G,SAAQzY,OAAO8R,KAAf,EAAsBrQ,CAAtB,EAAyBgE,CAAzB,CAA5B;WACO4S,UAAUrY,MAAV,EAAkBiQ,QAAlB,EAA4BxO,CAA5B,EAA+BoP,IAAIwB,SAAnC,CAAP;GAFoB;CAAtB;;;AAMA,IAAMA,YAAY,SAAZA,SAAY,CAACrS,MAAD,EAASO,EAAT,EAAa2L,MAAb,EAAqB1I,MAArB,EAA6BqN,GAA7B,EAAkCZ,QAAlC;SAChB,YAAsB;QAAbrR,IAAa,uEAAN,IAAM;;QAChBA,SAAS,IAAb,EAAmB;aACVoB,OAAO4V,WAAd;;;WAGKA,WAAP,GAAqBhX,IAArB;OACGiB,KAAH,CAAS,WAAT;cACU,CAACqM,OAAOC,UAAR,EAAoBD,OAAO7J,OAA3B,CAAV,EAA+CgX,OAA/C,CAAuD,OAAvD,EAAgE,IAAhE;SACK1X,OAAL,CAAayX,cAAcpZ,MAAd,EAAsB6Q,GAAtB,EAA2BZ,QAA3B,CAAb;WACOlO,IAAP,CAAY,WAAZ,EAAyB,IAAzB,EAA+BnD,IAA/B;WACO,IAAP;GAXc;CAAlB;;ACTA;AACA,IAAMiX,cAAc,SAAdA,WAAc,CAAC7V,MAAD,EAASO,EAAT,EAAa2L,MAAb;SAClB,YAAW;WACF0J,WAAP,GAAqB,EAArB;OACG/V,KAAH,CAAS,WAAT;cACU,CAACqM,OAAOC,UAAR,EAAoBD,OAAO7J,OAA3B,CAAV,EAA+CgX,OAA/C,CAAuD,OAAvD,EAAgE,KAAhE;WACO,IAAP;GALgB;CAApB;;ACHA,IAAMvF,aAAa,SAAbA,UAAa;SACjB,YAAW;OACNC,EAAH,CAAMpP,MAAN;;WAEOpE,GAAGwT,EAAV;WACO,IAAP;GALe;CAAnB;;ACAA;;;;;;;;;;;AAWA,IAAMlV,SAAS,SAATA,MAAS,CAACmB,MAAD,EAASO,EAAT,EAAaiD,MAAb;SACb,YAAW;;QAEL,CAAC7C,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BlB,MAApC,EAA4C;SACvCoT,gBAAH;;OAECnC,SAAH;;OAEG/R,MAAH,CAAUmB,OAAOgP,IAAjB;;WAEOjN,IAAP,CAAY,QAAZ,EAAsB,IAAtB;WACO,IAAP;GAXW;CAAf;;ACRA,IAAMuX,iBAAiB,SAAjBA,cAAiB,CAACtZ,MAAD,EAAS6Q,GAAT,EAAcZ,QAAd;SAA2B,UAACxO,CAAD,EAAIgE,CAAJ,EAAU;QACtD0G,UAAJ,CAAe0F,WAAf,GAA6B4G,SAAQzY,OAAO8R,KAAf,EAAsBrQ,CAAtB,EAAyBgE,CAAzB,CAA7B;WACO4S,UAAUrY,MAAV,EAAkBiQ,QAAlB,EAA4BxO,CAA5B,EAA+BoP,IAAI1E,UAAnC,CAAP;GAFqB;CAAvB;;AAKA,IAAMoN,gBAAgB,SAAhBA,aAAgB,CAACvZ,MAAD,EAASO,EAAT,EAAasQ,GAAb,EAAkBZ,QAAlB;SAA+B,YAAM;OACtDpQ,KAAH,CAAS,YAAT;OACGA,KAAH,CAAS,WAAT;;OAEGqC,aAAH,CAAiBsX,OAAjB;;WAEO5a,IAAP,CAAY+C,OAAZ,CAAoB2X,eAAetZ,MAAf,EAAuB6Q,GAAvB,EAA4BZ,QAA5B,CAApB;GANoB;CAAtB;;AASA,IAAMwJ,qBAAqB,SAArBA,kBAAqB,CAACzZ,MAAD,EAASO,EAAT,EAAamZ,eAAb;SAAiC,YAAM;OAC7DxX,aAAH,CAAiByX,KAAjB;oBACgB3Z,OAAOpB,IAAvB;GAFyB;CAA3B;;ACfA;AACA,IAAMgb,sBAAsB,SAAtBA,mBAAsB;SAC1BC,WAAWtB,CAAX,KAAiBA,CAAjB,IAAsBA,MAAM,IAA5B,GAAmC,QAAnC,GAA8CO,OAAOP,CAAP,CADpB;CAA5B;;ACDA;AACA,IAAMhF,uBAAuB,SAAvBA,oBAAuB;SAC3B5S,OAAOC,IAAP,CAAYhC,KAAK,CAAL,CAAZ,EAAqBkC,MAArB,CAA4B,UAACC,GAAD,EAAMC,GAAN,EAAc;QAClC0L,MAAMnE,MAAMuR,OAAO9Y,GAAP,CAAN,IAAqBA,GAArB,GAA2B+Y,SAAS/Y,GAAT,CAAvC;QACI0L,GAAJ,IAAWkN,oBAAoBhb,KAAK,CAAL,EAAQoC,GAAR,CAApB,CAAX;;WAEOD,GAAP;GAJF,EAKG,EALH,CAD2B;CAA7B;;ACDA,IAAMiJ,0BAA0B,SAA1BA,uBAA0B;SAAU;WACxCrJ,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+B0Q,IAA/B,CAAoC,UAAChK,CAAD,EAAIC,CAAJ;aAClCwS,UAAUha,OAAOa,UAAP,CAAkB0G,CAAlB,EAAqBsM,KAA/B,EAAsC7T,OAAOa,UAAP,CAAkB2G,CAAlB,EAAqBqM,KAA3D,CADkC;KAApC,CADwC;GAAV;CAAhC;;ACFA,IAAMoG,cAAc,SAAdA,WAAc;SAClB,YAAW;UACHA,WAAN,GAAoB,IAApB;WACO,IAAP;GAHgB;CAApB;;ACAA,IAAMC,UAAU,SAAVA,OAAU,CAAChK,KAAD,EAAQ3P,EAAR;SACd,YAAW;UACH2Z,OAAN,GAAgB,IAAhB;OACGzD,cAAH,CAAkB,GAAlB;OACG5X,MAAH;WACO,IAAP;GALY;CAAhB;;ACEA;;;;;;;;AAQA,IAAMsb,OAAO,SAAPA,IAAO,CAACna,MAAD,EAASkM,MAAT,EAAiB2E,GAAjB,EAAyB;;;;;;;MAO9BtQ,KAAK,SAALA,EAAK,CAAS2F,SAAT,EAAoB;gBACjB3F,GAAG2F,SAAH,GAAexE,OAAOwE,SAAP,CAA3B;;WAEOjG,KAAP,GAAeiG,UAAU9B,IAAV,GAAiBgI,WAAhC;WACOxC,MAAP,GAAgB1D,UAAU9B,IAAV,GAAiBiI,YAAjC;;KAEC,OAAD,EAAU,YAAV,EAAwB,SAAxB,EAAmC,WAAnC,EAAgD1K,OAAhD,CAAwD,iBAAS;aACxD4U,KAAP,IAAgBrQ,UACb3B,MADa,CACN,QADM,EAEbC,IAFa,CAER,OAFQ,EAEC+R,KAFD,EAGbnS,IAHa,EAAhB;UAIImS,KAAJ,IAAarK,OAAOqK,KAAP,EAAchK,UAAd,CAAyB,IAAzB,CAAb;KALF;;;OASG5D,GAAH,GAASzC,UACN3B,MADM,CACC,KADD,EAENC,IAFM,CAED,OAFC,EAEQxE,OAAOC,KAFf,EAGNuE,IAHM,CAGD,QAHC,EAGSxE,OAAO4J,MAHhB,EAINnF,KAJM,CAIA,MAJA,EAIQ,iBAJR,EAKNA,KALM,CAKA,UALA,EAKY,UALZ,EAONF,MAPM,CAOC,OAPD,EAQNC,IARM,CASL,WATK,EAUL,eAAexE,OAAOE,MAAP,CAAcE,IAA7B,GAAoC,GAApC,GAA0CJ,OAAOE,MAAP,CAAcwJ,GAAxD,GAA8D,GAVzD,CAAT;;WAaOnJ,EAAP;GA5BF;;;SAgCOA,EAAP;CAvCF;;ACVA,IAAM8O,OAAO,SAAPA,IAAO;SACX,UAAS5N,CAAT,EAAY;;WAEHZ,UAAP,CAAkBY,CAAlB,EAAqBK,MAArB,CAA4BgM,MAA5B,CACE9N,OAAOa,UAAP,CAAkBY,CAAlB,EAAqBK,MAArB,CAA4BgM,MAA5B,GAAqC7L,OAArC,EADF,EAFU;;WAMH,IAAP;GAPS;CAAb;;ACAA,IAAM8Q,mBAAmB,SAAnBA,gBAAmB;SACvB,YAAW;OACNlS,UAAH,CAAcN,GAAG8S,sBAAH,EAAd;WACO,IAAP;GAHqB;CAAzB;;ACAA,IAAM3D,QAAQ,SAARA,KAAQ,CAAC1P,MAAD,EAASO,EAAT;SACZ,UAASkB,CAAT,EAAYqM,MAAZ,EAAoB;WACXjN,UAAP,CAAkBY,CAAlB,EAAqBK,MAArB,CAA4BgM,MAA5B,CAAmCA,MAAnC;OACGjP,MAAH,GAAY2a,OAAZ;;WAEO,IAAP;GALU;CAAd;;;;ACAA,IAAMY,gBAAgB;QACd,EADc;eAEP,EAFO;cAGR,EAHQ;0BAII,CAJJ;WAKX,EALW;WAMX,KANW;gBAON,IAPM;kBAQJ,GARI;QASd,SATc;QAUd,EAVc;SAWb,GAXa;UAYZ,GAZY;UAaZ,EAAE1Q,KAAK,EAAP,EAAWvJ,OAAO,EAAlB,EAAsB0J,QAAQ,EAA9B,EAAkCzJ,MAAM,EAAxC,EAbY;sBAcA,WAdA;6BAeO,EAAEsJ,KAAK,CAAP,EAAUvJ,OAAO,CAAjB,EAAoB0J,QAAQ,CAA5B,EAA+BzJ,MAAM,CAArC,EAfP;SAgBb,MAhBa;aAiBT,aAjBS;SAkBb,GAlBa;oBAmBF,GAnBE;mBAoBH,IApBG;cAqBR,GArBQ;qBAsBD,KAtBC;YAuBV,EAvBU;YAwBV,EAxBU;iBAyBL,IAzBK;gBA0BN;CA1BhB;;;;ACOA,IAAMia,YAAY,SAAZA,SAAY,aAAc;MACxBra,SAASW,OAAOoV,MAAP,CAAc,EAAd,EAAkBqE,aAAlB,EAAiCE,UAAjC,CAAf;;MAEIA,cAAcA,WAAWC,eAA7B,EAA8C;YACpCC,IAAR,CACE,oFADF;YAGQF,WAAWC,eAAnB,EAAoC5Y,OAApC,CAA4C,aAAK;UAC3C3B,OAAOa,UAAP,CAAkBY,EAAEiL,GAApB,CAAJ,EAA8B;eACrB7L,UAAP,CAAkBY,EAAEiL,GAApB,EAAyByC,KAAzB,GAAiCnP,OAAOa,UAAP,CAAkBY,EAAEiL,GAApB,EAAyByC,KAAzB,GAC7BnP,OAAOa,UAAP,CAAkBY,EAAEiL,GAApB,EAAyByC,KADI,GAE7B1N,EAAEhC,KAFN;OADF,MAIO;eACEoB,UAAP,CAAkBY,EAAEiL,GAApB,IAA2B;iBAClBjL,EAAEhC;SADX;;KANJ;;;MAaIgb,aAAa,CACjB,QADiB,EAEjB,QAFiB,EAGjB,WAHiB,EAIjB,OAJiB,EAKjB,UALiB,EAMjB,YANiB,EAOjB,aAPiB,EAQjBlb,MARiB,CAQVqB,KAAKZ,MAAL,CARU,CAAnB;;MAUMwD,SAASkX,SAASC,KAAT,CAAehU,OAAf,EAAqB8T,UAArB,CAAf;MACEvK,QAAQ;eACK,KADL;iBAEO,KAFP;UAGA,KAHA;iBAIO,KAJP;WAKC;GANX;MAQEnG,SAASkH,YARX;MASEiE,WAAW,EATb;MAUEvR,OAAO+Q,WAAWjB,KAAX,CAAiB,CAAjB,CAVT;MAWE5C,MAAM,EAXR;MAYE3E,SAAS,EAZX;;MAcMjL,QAAQ;WACL;YACC;iBACK,iBAASV,EAAT,EAAa,EADlB;mBAEO,mBAASA,EAAT,EAAa,EAFpB;kBAGM,oBAAW;iBACZ,EAAP;SAJE;oBAMQ,sBAAW;iBACd,EAAP;;;KATM;UAaN,MAbM;eAcD,KAdC;iBAeC,uBAAW;aACf,KAAKsE,KAAL,CAAW,KAAKmK,IAAhB,CAAP;;GAhBJ;;SAoBO;kBAAA;kBAAA;0BAAA;gBAAA;kBAAA;sBAAA;cAAA;YAAA;kBAAA;;GAAP;CAhEF;;ACPA,IAAM4L,0BAA0B,SAA1BA,uBAA0B,CAAC5a,MAAD,EAASyB,CAAT,EAAe;MACvCwV,mBAAmB,IAAI4D,GAAJ,EAAzB;MACMC,gBAAgB,IAAID,GAAJ,EAAtB;;SAEOjc,IAAP,CAAY+C,OAAZ,CAAoB,UAASwR,GAAT,EAAc;QAC5B4H,SAAS/a,OAAOa,UAAP,CAAkBY,CAAlB,EAAqBK,MAArB,CAA4BqR,IAAI1R,CAAJ,CAA5B,CAAb;QACI,CAACqZ,cAAcE,GAAd,CAAkBD,MAAlB,CAAL,EAAgC;oBAChBE,GAAd,CAAkBF,MAAlB,EAA0B,CAA1B;;QAEEG,QAAQJ,cAAc5D,GAAd,CAAkB6D,MAAlB,CAAZ;kBACcE,GAAd,CAAkBF,MAAlB,EAA0BG,QAAQ,CAAlC;GANF;;SASOtc,IAAP,CAAY+C,OAAZ,CAAoB,UAASwR,GAAT,EAAc;WACzBvS,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BzB,GAA/B,CAAmC,aAAK;UAClC2b,SAAS/a,OAAOa,UAAP,CAAkBY,CAAlB,EAAqBK,MAArB,CAA4BqR,IAAI1R,CAAJ,CAA5B,CAAb;UACI,CAACwV,iBAAiB+D,GAAjB,CAAqBD,MAArB,CAAL,EAAmC;YAC3BI,OAAO,IAAIN,GAAJ,EAAb;yBACiBI,GAAjB,CAAqBF,MAArB,EAA6BI,IAA7B;;UAEE,CAAClE,iBAAiBC,GAAjB,CAAqB6D,MAArB,EAA6BC,GAA7B,CAAiCtY,CAAjC,CAAL,EAA0C;yBACvBwU,GAAjB,CAAqB6D,MAArB,EAA6BE,GAA7B,CAAiCvY,CAAjC,EAAoC,CAApC;;UAEEjD,QAAQwX,iBAAiBC,GAAjB,CAAqB6D,MAArB,EAA6B7D,GAA7B,CAAiCxU,CAAjC,CAAZ;eACS1C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BqR,IAAIzQ,CAAJ,CAA5B,IAAsCoY,cAAc5D,GAAd,CAAkB6D,MAAlB,CAA/C;uBACiB7D,GAAjB,CAAqB6D,MAArB,EAA6BE,GAA7B,CAAiCvY,CAAjC,EAAoCjD,KAApC;KAXF;GADF;;SAgBOwX,gBAAP;CA7BF;;;;ACKA,IAAMmE,UAAU,SAAVA,OAAU,CAACjC,GAAD,EAAMkC,KAAN,EAAgB;QACxB1Z,OAAN,CAAc,cAAM;WACXwX,IAAImC,EAAJ,CAAP;GADF;SAGOnC,GAAP;CAJF;;AAOA,IAAMoC,cAAc,SAAdA,WAAc,CAClBvb,MADkB,EAElB6Q,GAFkB,EAGlBtQ,EAHkB,EAIlBwJ,MAJkB,EAKlBmG,KALkB,EAMlB0I,YANkB,EAOlBc,eAPkB;SASlBgB,SACGC,KADH,CACShU,OADT,EACehG,OAAOC,IAAP,CAAYZ,MAAZ,CADf,EAEGiE,EAFH,CAEM,WAFN,EAEmB,aAAK;QAChBkI,UAAJ,CAAe6F,wBAAf,GAA0CvQ,EAAEhC,KAA5C;QACI4C,OAAJ,CAAY2P,wBAAZ,GAAuCvQ,EAAEhC,KAAzC;GAJJ,EAMGwE,EANH,CAMM,OANN,EAMe,aAAK;QACZkI,UAAJ,CAAe+F,WAAf,GAA6BzQ,EAAEhC,KAA/B;QACI4C,OAAJ,CAAY6P,WAAZ,GAA0BzQ,EAAEhC,KAA5B;GARJ,EAUGwE,EAVH,CAUM,cAVN,EAUsB,aAAK;QACnB5B,OAAJ,CAAYwP,WAAZ,GAA0BpQ,EAAEhC,KAA5B;GAXJ,EAaGwE,EAbH,CAaM,OAbN,EAae;WAAK1D,GAAG+U,MAAH,EAAL;GAbf,EAcGrR,EAdH,CAcM,QAdN,EAcgB;WAAK1D,GAAG+U,MAAH,EAAL;GAdhB,EAeGrR,EAfH,CAeM,QAfN,EAegB;WAAK1D,GAAG+U,MAAH,EAAL;GAfhB,EAgBGrR,EAhBH,CAgBM,MAhBN,EAgBc,aAAK;iBACFzE,IAAb,CAAkBiC,EAAEhC,KAApB;oBACgBD,IAAhB,CAAqBiC,EAAEhC,KAAvB;GAlBJ,EAoBGwE,EApBH,CAoBM,YApBN,EAoBoB,aAAK;WACdpD,UAAP,GAAoBN,GAAG8S,sBAAH,CAA0B1S,OAAOC,IAAP,CAAYa,EAAEhC,KAAd,CAA1B,CAApB;WACOqO,MAAP,CAAcvN,GAAGyJ,uBAAH,EAAd;OACGqL,cAAH;QACInF,MAAM+J,WAAV,EAAuB;SAClBpb,MAAH,GAAYmR,UAAZ;;GAzBN,EA4BG/L,EA5BH,CA4BM,iBA5BN,EA4ByB,aAAK;QACtB,CAACtD,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BlB,MAApC,EAA4CY,GAAGwS,gBAAH;OACzCnC,SAAH;QACI,OAAOnP,EAAEhC,KAAT,KAAmB,QAAvB,EAAiC;UAC3BgC,EAAEhC,KAAF,GAAUkB,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BlB,MAA7C,EAAqD;eAC5CsT,eAAP,GAAyBjT,OAAOa,UAAP,CAAkBY,EAAEhC,KAApB,CAAzB;OADF,MAEO,IAAIgC,EAAEhC,KAAF,GAAUO,OAAOwb,QAAP,CAAgB7b,MAA9B,EAAsC;eACpCsT,eAAP,GAAyBjT,OAAOwb,QAAP,CAAgB/Z,EAAEhC,KAAlB,CAAzB;;KAJJ,MAMO;aACEwT,eAAP,GAAyBxR,EAAEhC,KAA3B;;;WAGKwX,gBAAP,GAA0B2D,wBACxB5a,MADwB,EAExBA,OAAOiT,eAFiB,CAA1B;QAII/C,MAAM+J,WAAV,EAAuB;SAClBpb,MAAH;;GA9CN,EAiDGoF,EAjDH,CAiDM,UAjDN,EAiDkB,aAAK;OAChBpD,UAAH,CAAcN,GAAG8S,sBAAH,EAAd;OACGxS,UAAH,CAAcua,QAAQpb,OAAOa,UAAf,EAA2BY,EAAEhC,KAA7B,CAAd;GAnDJ,EAqDGwE,EArDH,CAqDM,UArDN,EAqDkB,aAAK;QACfxC,EAAEhC,KAAF,IAAWgC,EAAEhC,KAAF,CAAQE,MAAvB,EAA+B;QAC3BF,KAAF,CAAQkC,OAAR,CAAgB,UAASgC,IAAT,EAAe;AAC7ByL,AACD,OAFD;SAGGY,UAAH,CAAc,CAAd;;GA1DN,CATkB;CAApB;;ACZA,IAAMyL,SAAS,SAATA,MAAS,CAACC,GAAD,EAAMpb,KAAN,EAAakD,MAAb,EAAqBmY,YAArB,EAAsC;SAC5C/a,IAAP,CAAYN,KAAZ,EAAmBqB,OAAnB,CAA2B,UAAS+K,GAAT,EAAc;QACnCA,GAAJ,IAAW,UAASnF,CAAT,EAAY;UACjB,CAAC7H,UAAUC,MAAf,EAAuB;eACdW,MAAMoM,GAAN,CAAP;;UAGAA,QAAQ,YAAR,IACA/L,OAAOib,SAAP,CAAiBzV,QAAjB,CAA0BpE,IAA1B,CAA+BwF,CAA/B,MAAsC,gBAFxC,EAGE;gBACQiT,IAAR,CAAa,wDAAb;YACIkB,IAAIrI,sBAAJ,CAA2B9L,CAA3B,CAAJ;;UAEEsU,MAAMvb,MAAMoM,GAAN,CAAV;YACMA,GAAN,IAAanF,CAAb;mBACaxF,IAAb,CAAkB2K,GAAlB,EAAuBgP,GAAvB,EAA4B,EAAEjc,OAAO8H,CAAT,EAAYuU,UAAUD,GAAtB,EAA5B;aACO9Z,IAAP,CAAY2K,GAAZ,EAAiBgP,GAAjB,EAAsB,EAAEjc,OAAO8H,CAAT,EAAYuU,UAAUD,GAAtB,EAAtB;aACOH,GAAP;KAfF;GADF;CADF;;ACAA;AACA;AAGA,IAAMK,YAAY,SAAZA,SAAY,CAACC,MAAD,EAASC,MAAT,EAAiBC,MAAjB;SAChB,YAAW;QACHzc,QAAQyc,OAAOvB,KAAP,CAAasB,MAAb,EAAqBvc,SAArB,CAAd;WACOD,UAAUwc,MAAV,GAAmBD,MAAnB,GAA4Bvc,KAAnC;GAHc;CAAlB;;AAMA,IAAM0c,UAAU,SAAVA,OAAU,CAACH,MAAD,EAASC,MAAT,EAAiBC,MAAjB,EAA4B;SACnCA,MAAP,IAAiBH,UAAUC,MAAV,EAAkBC,MAAlB,EAA0BA,OAAOC,MAAP,CAA1B,CAAjB;SACOF,MAAP;CAFF;;AAKA,IAAMI,aAAa,SAAbA,UAAa,CACjBC,EADiB,EAEjBxL,GAFiB,EAGjBtQ,EAHiB,EAIjBwJ,MAJiB,EAKjBmG,KALiB,EAMjB0I,YANiB,EAOjBc,eAPiB,EAQjBlW,MARiB,EASjBG,IATiB,EAUd;MACGgY,eAAeJ,YACnBc,EADmB,EAEnBxL,GAFmB,EAGnBtQ,EAHmB,EAInBwJ,MAJmB,EAKnBmG,KALmB,EAMnB0I,YANmB,EAOnBc,eAPmB,CAArB;;;SAWOnZ,EAAP,EAAW8b,EAAX,EAAe7Y,MAAf,EAAuBmY,YAAvB;;;;UAIQpb,EAAR,EAAYiD,MAAZ,EAAoB,IAApB;;UAGEjD,EADF,EAEEoD,IAFF,EAGE,OAHF,EAIE,QAJF,EAKE,YALF,EAME,eANF,EAOE,UAPF,EAQE,aARF,EASE,YATF;CA5BF;;ACfA;AACA;AAgEA,IAAM2Y,YAAY,SAAZA,SAAY,aAAc;MACxBhc,QAAQ+Z,UAAUC,UAAV,CAAd;MAEEta,MAH4B,GAY1BM,KAZ0B,CAG5BN,MAH4B;MAI5BwD,MAJ4B,GAY1BlD,KAZ0B,CAI5BkD,MAJ4B;MAK5B0M,KAL4B,GAY1B5P,KAZ0B,CAK5B4P,KAL4B;MAM5BnG,MAN4B,GAY1BzJ,KAZ0B,CAM5ByJ,MAN4B;MAO5BmL,QAP4B,GAY1B5U,KAZ0B,CAO5B4U,QAP4B;MAQ5BvR,IAR4B,GAY1BrD,KAZ0B,CAQ5BqD,IAR4B;MAS5BkN,GAT4B,GAY1BvQ,KAZ0B,CAS5BuQ,GAT4B;MAU5B3E,MAV4B,GAY1B5L,KAZ0B,CAU5B4L,MAV4B;MAW5BjL,KAX4B,GAY1BX,KAZ0B,CAW5BW,KAX4B;;;MAcxBV,KAAK4Z,KAAKna,MAAL,EAAakM,MAAb,EAAqB2E,GAArB,CAAX;;MAEMZ,WAAW,SAAXA,QAAW,IAAK;QAChBlG,OAAOjG,KAAP,GAAenE,MAAf,KAA0B,CAA9B,EAAiC;aACxBmE,KAAP,CAAa,CAAC,CAAD,EAAI/D,EAAEC,MAAF,CAAJ,CAAb,EAA6B,CAA7B;;WAEKkV,SAASzT,CAAT,KAAe,IAAf,GAAsBsI,OAAOtI,CAAP,CAAtB,GAAkCyT,SAASzT,CAAT,CAAzC;GAJF;;MAOMmX,eAAepa,YAAYga,YAAYxY,MAAZ,EAAoB6Q,GAApB,EAAyBZ,QAAzB,CAAZ,EAClBzQ,IADkB,CACb,EADa,EAElBK,KAFkB,CAEZ;WAAMU,GAAGV,KAAH,CAAS,SAAT,CAAN;GAFY,CAArB;;MAIM6Z,kBAAkBlb,YAAY8a,eAAetZ,MAAf,EAAuB6Q,GAAvB,EAA4BZ,QAA5B,CAAZ,EACrBzQ,IADqB,CAChB,EADgB,EAErBK,KAFqB,CAEf,YAAW;OACbA,KAAH,CAAS,YAAT;OACGA,KAAH,CAAS,WAAT;GAJoB,CAAxB;;aAQEG,MADF,EAEE6Q,GAFF,EAGEtQ,EAHF,EAIEwJ,MAJF,EAKEmG,KALF,EAME0I,YANF,EAOEc,eAPF,EAQElW,MARF,EASEG,IATF;;;KAaGrD,KAAH,GAAWN,MAAX;KACGkQ,KAAH,GAAWA,KAAX;;KAEGU,SAAH,GAAeA,UAAU5Q,MAAV,EAAkBO,EAAlB,EAAsBwJ,MAAtB,EAA8B8G,GAA9B,CAAf;KACGnB,KAAH,GAAWA,MAAM1P,MAAN,EAAcO,EAAd,CAAX;KACG8O,IAAH,GAAUA,KAAKrP,MAAL,CAAV;KACG4S,WAAH,GAAiBA,YAAY5S,MAAZ,EAAoBO,EAApB,CAAjB;KACGwS,gBAAH,GAAsBA,iBAAiBxS,EAAjB,CAAtB;;KAEGgT,oBAAH,GAA0BA,oBAA1B;KACGF,sBAAH,GAA4BA,uBAAuBrT,MAAvB,EAA+BO,EAA/B,CAA5B;KACGyJ,uBAAH,GAA6BA,wBAAwBhK,MAAxB,CAA7B;;;KAGGnB,MAAH,GAAYA,OAAOmB,MAAP,EAAeO,EAAf,EAAmBiD,MAAnB,CAAZ;KACGtB,aAAH,GAAmBA,cAAclC,MAAd,EAAsBO,EAAtB,EAA0BiD,MAA1B,CAAnB;KACG3E,MAAH,CAAU2a,OAAV,GAAoBD,cAAcvZ,MAAd,EAAsBO,EAAtB,EAA0BsQ,GAA1B,EAA+BZ,QAA/B,CAApB;KACGpR,MAAH,CAAU8a,KAAV,GAAkBF,mBAAmBzZ,MAAnB,EAA2BO,EAA3B,EAA+BmZ,eAA/B,CAAlB;KACGxX,aAAH,CAAiBsX,OAAjB,GAA2Bd,qBACzB1Y,MADyB,EAEzB6Q,GAFyB,EAGzBZ,QAHyB,EAIzB1P,EAJyB,EAKzBU,KALyB,CAA3B;KAOGiB,aAAH,CAAiByX,KAAjB,GAAyBhB,mBAAmB3Y,MAAnB,EAA2BiB,KAA3B,EAAkC2X,YAAlC,CAAzB;;KAEG2D,sBAAH,GAA4BrJ,qBAAqBlT,OAAOa,UAA5B,EAAwCoP,QAAxC,CAA5B;KACGiK,OAAH,GAAaA,QAAQhK,KAAR,EAAe3P,EAAf,CAAb;KACG0T,QAAH,GAAcA,SAASjU,MAAT,EAAiBO,EAAjB,EAAqB0P,QAArB,CAAd;KACGpQ,KAAH,GAAWA,MAAMG,MAAN,EAAcO,EAAd,EAAkBsQ,GAAlB,EAAuB5P,KAAvB,CAAX;KACGqD,UAAH,GAAgBA,WAAWtE,MAAX,EAAmBO,EAAnB,EAAuBwJ,MAAvB,EAA+BmG,KAA/B,EAAsCvM,IAAtC,CAAhB;KACGmQ,UAAH,GAAgBA,WAAWvT,EAAX,CAAhB;KACGyP,UAAH,GAAgBA,WAAWhQ,MAAX,EAAmBO,EAAnB,EAAuB0P,QAAvB,EAAiCtM,IAAjC,EAAuCuM,KAAvC,CAAhB;KACGG,eAAH,GAAqBA,eAArB;KACGE,SAAH,GAAeA,UAAUvQ,MAAV,EAAkBO,EAAlB,EAAsB2P,KAAtB,CAAf;KACG/N,UAAH,GAAgBA,aAAWnC,MAAX,CAAhB;KACGuC,QAAH,GAAcA,WAASvC,MAAT,EAAiBO,EAAjB,CAAd;KACGiQ,WAAH,GAAiBA,YAAYxQ,MAAZ,EAAoBO,EAApB,EAAwBwJ,MAAxB,EAAgCkG,QAAhC,EAA0CiF,QAA1C,EAAoDhF,KAApD,CAAjB;;;;;KAKGqF,OAAH,GAAaA,QAAQvV,MAAR,EAAgBO,EAAhB,EAAoBwJ,MAApB,CAAb;KACG0L,uBAAH,GAA6BA,wBAAwBzV,MAAxB,CAA7B;KACGqV,cAAH,GAAoBA,eAAerV,MAAf,EAAuBiQ,QAAvB,CAApB;;;KAGGuM,cAAH,GAAoBvD,aAApB;KACGgB,WAAH,GAAiBA,YAAY/J,KAAZ,CAAjB;;;KAGGnG,MAAH,GAAYA,MAAZ;KACG8G,GAAH,GAASA,GAAT;KACG3E,MAAH,GAAYA,MAAZ;KACG5K,CAAH,GAAO;WAAMf,GAAGwT,EAAT;GAAP;;;;KAIGuB,MAAH,GAAYA,OAAOtV,MAAP,EAAeO,EAAf,EAAmB2P,KAAnB,EAA0B1M,MAA1B,CAAZ;;;KAGG6O,SAAH,GAAeA,UAAUrS,MAAV,EAAkBO,EAAlB,EAAsB2L,MAAtB,EAA8B1I,MAA9B,EAAsCqN,GAAtC,EAA2CZ,QAA3C,CAAf;;KAEG4F,WAAH,GAAiBA,YAAY7V,MAAZ,EAAoBO,EAApB,EAAwB2L,MAAxB,CAAjB;;;;KAIGN,YAAH,GAAkBA,YAAlB;;;;KAIGC,cAAH,GAAoBA,eAAetL,EAAf,CAApB;KACG0O,UAAH,GAAgB;WAAMtO,OAAO2H,mBAAP,CAA2BrH,MAAM4D,KAAjC,CAAN;GAAhB;KACGkK,SAAH,GAAeA,UAAU9N,KAAV,EAAiBjB,MAAjB,EAAyBO,EAAzB,CAAf;;;gBAGcU,KAAd,EAAqBjB,MAArB,EAA6BO,EAA7B,EAAiCiD,MAAjC;kBACgBvC,KAAhB,EAAuBjB,MAAvB,EAA+BO,EAA/B,EAAmCiD,MAAnC,EAA2CuG,MAA3C;sBACoB9I,KAApB,EAA2BjB,MAA3B,EAAmCO,EAAnC,EAAuCiD,MAAvC,EAA+CuG,MAA/C;qBACmB9I,KAAnB,EAA0BjB,MAA1B,EAAkCO,EAAlC,EAAsCiD,MAAtC;;KAEGiZ,OAAH,GAAaA,OAAb;;KAEGtW,QAAH,GAAcA,SAASnG,MAAT,CAAd;KACG8Y,MAAH,GAAYA,MAAZ;;KAEGc,mBAAH,GAAyBA,mBAAzB;;SAEOrZ,EAAP;CAxIF;;;;"}