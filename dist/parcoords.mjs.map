{"version":3,"file":"parcoords.mjs","sources":["../src/RenderQueue.js","../src/helper/extend.js","../src/helper/without.js","../src/helper/rebind.js","../src/helper/functor.js","../src/initialState.js","../src/index.js"],"sourcesContent":["import 'requestanimationframe';\n\nconst renderQueue = function(func) {\n  let _queue = [], // data to be rendered\n    _rate = 1000, // number of calls per frame\n    _invalidate = function() {}, // invalidate last render queue\n    _clear = function() {}; // clearing function\n\n  let rq = function(data) {\n    if (data) rq.data(data);\n    _invalidate();\n    _clear();\n    rq.render();\n  };\n\n  rq.render = function() {\n    let valid = true;\n    _invalidate = rq.invalidate = function() {\n      valid = false;\n    };\n\n    function doFrame() {\n      if (!valid) return true;\n      let chunk = _queue.splice(0, _rate);\n      chunk.map(func);\n      requestAnimationFrame(doFrame);\n    }\n\n    doFrame();\n  };\n\n  rq.data = function(data) {\n    _invalidate();\n    _queue = data.slice(0); // creates a copy of the data\n    return rq;\n  };\n\n  rq.add = function(data) {\n    _queue = _queue.concat(data);\n  };\n\n  rq.rate = function(value) {\n    if (!arguments.length) return _rate;\n    _rate = value;\n    return rq;\n  };\n\n  rq.remaining = function() {\n    return _queue.length;\n  };\n\n  // clear the canvas\n  rq.clear = function(func) {\n    if (!arguments.length) {\n      _clear();\n      return rq;\n    }\n    _clear = func;\n    return rq;\n  };\n\n  rq.invalidate = _invalidate;\n\n  return rq;\n};\n\nexport default renderQueue;\n","const extend = (target, source) => {\n  for (let key in source) {\n    target[key] = source[key];\n  }\n  return target;\n};\n\nexport default extend;\n","const without = (arr, items) => {\n  items.forEach(el => {\n    delete arr[el];\n  });\n  return arr;\n};\n\nexport default without;\n","const d3_rebind = (target, source, method) => {\n  return function() {\n    let value = method.apply(source, arguments);\n    return value === source ? target : value;\n  };\n};\n\nconst _rebind = (target, source, method) => {\n  target[method] = d3_rebind(target, source, source[method]);\n  return target;\n};\n\nexport default _rebind;\n","const _functor = v => {\n  return typeof v === 'function'\n    ? v\n    : function() {\n        return v;\n      };\n};\n\nexport default _functor;\n","const InitialState = {\n    data: [],\n    highlighted: [],\n    dimensions: {},\n    dimensionTitleRotation: 0,\n    brushes: [],\n    brushed: false,\n    brushedColor: null,\n    alphaOnBrushed: 0.0,\n    mode: 'default',\n    rate: 20,\n    width: 600,\n    height: 300,\n    margin: {top: 24, right: 20, bottom: 12, left: 20},\n    nullValueSeparator: 'undefined', // set to \"top\" or \"bottom\"\n    nullValueSeparatorPadding: {top: 8, right: 0, bottom: 8, left: 0},\n    color: '#069',\n    composite: 'source-over',\n    alpha: 0.7,\n    bundlingStrength: 0.5,\n    bundleDimension: null,\n    smoothness: 0.0,\n    showControlPoints: false,\n    hideAxis: [],\n    flipAxes: [],\n    animationTime: 1100, // How long it takes to flip the axis when you double click\n    rotateLabels: false,\n};\n\nexport default InitialState;","import {select, selectAll, event, mouse} from 'd3-selection';\nimport {keys, entries, map} from 'd3-collection';\nimport {dispatch} from 'd3-dispatch';\nimport {extent, ascending, min} from 'd3-array';\nimport {scalePoint, scaleOrdinal, scaleTime, scaleLinear} from 'd3-scale';\nimport {line, arc as d3Arc} from 'd3-shape';\nimport {axisBottom, axisLeft, axisRight, axisTop} from 'd3-axis';\nimport {brushSelection, brushY} from 'd3-brush';\nimport {drag} from 'd3-drag';\n\nimport './parallel-coordinates.css';\nimport renderQueue from './RenderQueue';\n\nimport {_functor, _rebind, extend, without} from './helper';\n\nimport InitialState from './initialState';\n\n//============================================================================================\n\nconst ParCoords = config => {\n    const __  = extend(InitialState, config);\n\n    if (config && config.dimensionTitles) {\n        console.warn(\n            'dimensionTitles passed in config is deprecated. Add title to dimension object.'\n        );\n        entries(config.dimensionTitles).forEach(function (d) {\n            if (__.dimensions[d.key]) {\n                __.dimensions[d.key].title = __.dimensions[d.key].title\n                    ? __.dimensions[d.key].title\n                    : d.value;\n            } else {\n                __.dimensions[d.key] = {\n                    title: d.value,\n                };\n            }\n        });\n    }\n    let pc = function (selection) {\n        selection = pc.selection = select(selection);\n\n        __.width = selection.node().clientWidth;\n        __.height = selection.node().clientHeight;\n        // canvas data layers\n        ['marks', 'foreground', 'brushed', 'highlight'].forEach(function (layer) {\n            canvas[layer] = selection\n                .append('canvas')\n                .attr('class', layer)\n                .node();\n            ctx[layer] = canvas[layer].getContext('2d');\n        });\n\n        // svg tick and brush layers\n        pc.svg = selection\n            .append('svg')\n            .attr('width', __.width)\n            .attr('height', __.height)\n            .style('font', '14px sans-serif')\n            .style('position', 'absolute')\n\n            .append('svg:g')\n            .attr(\n                'transform',\n                'translate(' + __.margin.left + ',' + __.margin.top + ')'\n            );\n\n        return pc;\n    };\n\n    let eventTypes = [\n        'render',\n        'resize',\n        'highlight',\n        'brush',\n        'brushend',\n        'brushstart',\n        'axesreorder',\n    ].concat(keys(__));\n    let events = dispatch.apply(this, eventTypes),\n        w = function () {\n            return __.width - __.margin.right - __.margin.left;\n        },\n        h = function () {\n            return __.height - __.margin.top - __.margin.bottom;\n        },\n        flags = {\n            brushable: false,\n            reorderable: false,\n            axes: false,\n            interactive: false,\n            debug: false,\n        },\n        xscale = scalePoint(),\n        dragging = {},\n        _line = line(),\n        axis = axisLeft().ticks(5),\n        g, // groups for axes, brushes\n        ctx = {},\n        canvas = {},\n        clusterCentroids = [];\n\n    // side effects for setters\n    let side_effects = dispatch\n        .apply(this, keys(__))\n        .on('composite', function (d) {\n            ctx.foreground.globalCompositeOperation = d.value;\n            ctx.brushed.globalCompositeOperation = d.value;\n        })\n        .on('alpha', function (d) {\n            ctx.foreground.globalAlpha = d.value;\n            ctx.brushed.globalAlpha = d.value;\n        })\n        .on('brushedColor', function (d) {\n            ctx.brushed.strokeStyle = d.value;\n        })\n        .on('width', function (d) {\n            pc.resize();\n        })\n        .on('height', function (d) {\n            pc.resize();\n        })\n        .on('margin', function (d) {\n            pc.resize();\n        })\n        .on('rate', function (d) {\n            brushedQueue.rate(d.value);\n            foregroundQueue.rate(d.value);\n        })\n        .on('dimensions', function (d) {\n            __.dimensions = pc.applyDimensionDefaults(keys(d.value));\n            xscale.domain(pc.getOrderedDimensionKeys());\n            pc.sortDimensions();\n            if (flags.interactive) {\n                pc.render().updateAxes();\n            }\n        })\n        .on('bundleDimension', function (d) {\n            if (!keys(__.dimensions).length) pc.detectDimensions();\n            pc.autoscale();\n            if (typeof d.value === 'number') {\n                if (d.value < keys(__.dimensions).length) {\n                    __.bundleDimension = __.dimensions[d.value];\n                } else if (d.value < __.hideAxis.length) {\n                    __.bundleDimension = __.hideAxis[d.value];\n                }\n            } else {\n                __.bundleDimension = d.value;\n            }\n\n            __.clusterCentroids = compute_cluster_centroids(__.bundleDimension);\n            if (flags.interactive) {\n                pc.render();\n            }\n        })\n        .on('hideAxis', function (d) {\n            pc.dimensions(pc.applyDimensionDefaults());\n            pc.dimensions(without(__.dimensions, d.value));\n        })\n        .on('flipAxes', function (d) {\n            if (d.value && d.value.length) {\n                d.value.forEach(function (axis) {\n                    flipAxisAndUpdatePCP(axis);\n                });\n                pc.updateAxes(0);\n            }\n        });\n\n    // expose the state of the chart\n    pc.state = __;\n    pc.flags = flags;\n\n    // create getter/setters\n    getset(pc, __, events);\n\n    // expose events\n    _rebind(pc, events, 'on');\n\n    // getter/setter with event firing\n    function getset(obj, state, events) {\n        keys(state).forEach(function (key) {\n            obj[key] = function (x) {\n                if (!arguments.length) {\n                    return state[key];\n                }\n                if (\n                    key === 'dimensions' &&\n                    Object.prototype.toString.call(x) === '[object Array]'\n                ) {\n                    console.warn(\n                        'pc.dimensions([]) is deprecated, use pc.dimensions({})'\n                    );\n                    x = pc.applyDimensionDefaults(x);\n                }\n                let old = state[key];\n                state[key] = x;\n                side_effects.call(key, pc, {value: x, previous: old});\n                events.call(key, pc, {value: x, previous: old});\n                return obj;\n            };\n        });\n    }\n\n    /** adjusts an axis' default range [h()+1, 1] if a NullValueSeparator is set */\n    function getRange() {\n        if (__.nullValueSeparator == 'bottom') {\n            return [\n                h() +\n                1 -\n                __.nullValueSeparatorPadding.bottom -\n                __.nullValueSeparatorPadding.top,\n                1,\n            ];\n        } else if (__.nullValueSeparator == 'top') {\n            return [\n                h() + 1,\n                1 +\n                __.nullValueSeparatorPadding.bottom +\n                __.nullValueSeparatorPadding.top,\n            ];\n        }\n        return [h() + 1, 1];\n    }\n\n    pc.autoscale = function () {\n        // yscale\n        let defaultScales = {\n            date: function (k) {\n                let _extent = extent(__.data, function (d) {\n                    return d[k] ? d[k].getTime() : null;\n                });\n                // special case if single value\n                if (_extent[0] === _extent[1]) {\n                    return scalePoint()\n                        .domain(_extent)\n                        .range(getRange());\n                }\n                if (__.flipAxes.includes(k)) {\n                    let tempDate = [];\n                    _extent.forEach(function (val) {\n                        tempDate.unshift(val);\n                    });\n                    _extent = tempDate;\n                }\n                return scaleTime()\n                    .domain(_extent)\n                    .range(getRange());\n            },\n            number: function (k) {\n                let _extent = extent(__.data, function (d) {\n                    return +d[k];\n                });\n                // special case if single value\n                if (_extent[0] === _extent[1]) {\n                    return scalePoint()\n                        .domain(_extent)\n                        .range(getRange());\n                }\n                if (__.flipAxes.includes(k)) {\n                    let temp = [];\n                    _extent.forEach(function (val) {\n                        temp.unshift(val);\n                    });\n                    _extent = temp;\n                }\n                return scaleLinear()\n                    .domain(_extent)\n                    .range(getRange());\n            },\n            string: function (k) {\n                let counts = {},\n                    domain = [];\n                // Let's get the count for each value so that we can sort the domain based\n                // on the number of items for each value.\n                __.data.map(function (p) {\n                    if (p[k] === undefined && __.nullValueSeparator !== 'undefined') {\n                        return; // null values will be drawn beyond the horizontal null value separator!\n                    }\n                    if (counts[p[k]] === undefined) {\n                        counts[p[k]] = 1;\n                    } else {\n                        counts[p[k]] = counts[p[k]] + 1;\n                    }\n                });\n                if (__.flipAxes.includes(k)) {\n                    domain = Object.getOwnPropertyNames(counts).sort();\n                } else {\n                    let tempArr = Object.getOwnPropertyNames(counts).sort();\n                    for (let i = 0; i < Object.getOwnPropertyNames(counts).length; i++) {\n                        domain.push(tempArr.pop());\n                    }\n                }\n\n                //need to create an ordinal scale for categorical data\n                let categoricalRange = [];\n                if (domain.length === 1) {\n                    //edge case\n                    domain = [' ', domain[0], ' '];\n                }\n                let addBy = getRange()[0] / (domain.length - 1);\n                for (let j = 0; j < domain.length; j++) {\n                    if (categoricalRange.length === 0) {\n                        categoricalRange.push(0);\n                        continue;\n                    }\n                    categoricalRange.push(categoricalRange[j - 1] + addBy);\n                }\n                return scaleOrdinal()\n                    .domain(domain)\n                    .range(categoricalRange);\n            },\n        };\n        keys(__.dimensions).forEach(function (k) {\n            __.dimensions[k].yscale = defaultScales[__.dimensions[k].type](k);\n        });\n\n        // xscale\n        xscale.range([0, w()], 1);\n        // Retina display, etc.\n        let devicePixelRatio = window.devicePixelRatio || 1;\n\n        // canvas sizes\n        pc.selection\n            .selectAll('canvas')\n            .style('margin-top', __.margin.top + 'px')\n            .style('margin-left', __.margin.left + 'px')\n            .style('width', w() + 2 + 'px')\n            .style('height', h() + 2 + 'px')\n            .attr('width', (w() + 2) * devicePixelRatio)\n            .attr('height', (h() + 2) * devicePixelRatio);\n        // default styles, needs to be set when canvas width changes\n        ctx.foreground.strokeStyle = __.color;\n        ctx.foreground.lineWidth = 1.4;\n        ctx.foreground.globalCompositeOperation = __.composite;\n        ctx.foreground.globalAlpha = __.alpha;\n        ctx.foreground.scale(devicePixelRatio, devicePixelRatio);\n        ctx.brushed.strokeStyle = __.brushedColor;\n        ctx.brushed.lineWidth = 1.4;\n        ctx.brushed.globalCompositeOperation = __.composite;\n        ctx.brushed.globalAlpha = __.alpha;\n        ctx.brushed.scale(devicePixelRatio, devicePixelRatio);\n        ctx.highlight.lineWidth = 3;\n        ctx.highlight.scale(devicePixelRatio, devicePixelRatio);\n\n        return this;\n    };\n\n    pc.scale = function (d, domain) {\n        __.dimensions[d].yscale.domain(domain);\n\n        return this;\n    };\n\n    pc.flip = function (d) {\n        //__.dimensions[d].yscale.domain().reverse();                               // does not work\n        __.dimensions[d].yscale.domain(__.dimensions[d].yscale.domain().reverse()); // works\n\n        return this;\n    };\n\n    pc.commonScale = function (global, type) {\n        let t = type || 'number';\n        if (typeof global === 'undefined') {\n            global = true;\n        }\n\n        // try to autodetect dimensions and create scales\n        if (!keys(__.dimensions).length) {\n            pc.detectDimensions();\n        }\n        pc.autoscale();\n\n        // scales of the same type\n        let scales = keys(__.dimensions).filter(function (p) {\n            return __.dimensions[p].type == t;\n        });\n\n        if (global) {\n            let _extent = extent(\n                scales\n                    .map(function (d, i) {\n                        return __.dimensions[d].yscale.domain();\n                    })\n                    .reduce(function (a, b) {\n                        return a.concat(b);\n                    })\n            );\n\n            scales.forEach(function (d) {\n                __.dimensions[d].yscale.domain(_extent);\n            });\n        } else {\n            scales.forEach(function (d) {\n                __.dimensions[d].yscale.domain(\n                    extent(__.data, function (d) {\n                        return +d[k];\n                    })\n                );\n            });\n        }\n\n        // update centroids\n        if (__.bundleDimension !== null) {\n            pc.bundleDimension(__.bundleDimension);\n        }\n\n        return this;\n    };\n    pc.detectDimensions = function () {\n        pc.dimensions(pc.applyDimensionDefaults());\n        return this;\n    };\n\n    pc.applyDimensionDefaults = function (dims) {\n        let types = pc.detectDimensionTypes(__.data);\n        dims = dims ? dims : keys(types);\n        let newDims = {};\n        let currIndex = 0;\n        dims.forEach(function (k) {\n            newDims[k] = __.dimensions[k] ? __.dimensions[k] : {};\n            //Set up defaults\n            newDims[k].orient = newDims[k].orient ? newDims[k].orient : 'left';\n            newDims[k].ticks = newDims[k].ticks != null ? newDims[k].ticks : 5;\n            newDims[k].innerTickSize =\n                newDims[k].innerTickSize != null ? newDims[k].innerTickSize : 6;\n            newDims[k].outerTickSize =\n                newDims[k].outerTickSize != null ? newDims[k].outerTickSize : 0;\n            newDims[k].tickPadding =\n                newDims[k].tickPadding != null ? newDims[k].tickPadding : 3;\n            newDims[k].type = newDims[k].type ? newDims[k].type : types[k];\n\n            newDims[k].index =\n                newDims[k].index != null ? newDims[k].index : currIndex;\n            currIndex++;\n        });\n        return newDims;\n    };\n\n    pc.getOrderedDimensionKeys = function () {\n        return keys(__.dimensions).sort(function (x, y) {\n            return ascending(__.dimensions[x].index, __.dimensions[y].index);\n        });\n    };\n\n    // a better \"typeof\" from this post: http://stackoverflow.com/questions/7390426/better-way-to-get-type-of-a-javascript-variable\n    pc.toType = function (v) {\n        return {}.toString\n            .call(v)\n            .match(/\\s([a-zA-Z]+)/)[1]\n            .toLowerCase();\n    };\n\n    // try to coerce to number before returning type\n    pc.toTypeCoerceNumbers = function (v) {\n        if (parseFloat(v) == v && v != null) {\n            return 'number';\n        }\n        return pc.toType(v);\n    };\n\n    // attempt to determine types of each dimension based on first row of data\n    pc.detectDimensionTypes = function (data) {\n        let types = {};\n        keys(data[0]).forEach(function (col) {\n            types[isNaN(Number(col)) ? col : parseInt(col)] = pc.toTypeCoerceNumbers(\n                data[0][col]\n            );\n        });\n        return types;\n    };\n\n    pc.render = function () {\n        // try to autodetect dimensions and create scales\n        if (!keys(__.dimensions).length) {\n            pc.detectDimensions();\n        }\n        pc.autoscale();\n\n        pc.render[__.mode]();\n\n        events.call('render', this);\n        return this;\n    };\n\n    pc.renderBrushed = function () {\n        if (!keys(__.dimensions).length) pc.detectDimensions();\n\n        pc.renderBrushed[__.mode]();\n        events.call('render', this);\n        return this;\n    };\n\n    function isBrushed() {\n        if (__.brushed && __.brushed.length !== __.data.length) return true;\n\n        let object = brush.currentMode().brushState();\n\n        for (let key in object) {\n            if (object.hasOwnProperty(key)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    pc.render.default = function () {\n        pc.clear('foreground');\n        pc.clear('highlight');\n\n        pc.renderBrushed.default();\n\n        __.data.forEach(path_foreground);\n    };\n\n    let foregroundQueue = renderQueue(path_foreground)\n        .rate(50)\n        .clear(function () {\n            pc.clear('foreground');\n            pc.clear('highlight');\n        });\n\n    pc.render.queue = function () {\n        pc.renderBrushed.queue();\n\n        foregroundQueue(__.data);\n    };\n\n    pc.renderBrushed.default = function () {\n        pc.clear('brushed');\n\n        if (isBrushed()) {\n            __.brushed.forEach(path_brushed);\n        }\n    };\n\n    let brushedQueue = renderQueue(path_brushed)\n        .rate(50)\n        .clear(function () {\n            pc.clear('brushed');\n        });\n\n    pc.renderBrushed.queue = function () {\n        if (isBrushed()) {\n            brushedQueue(__.brushed);\n        } else {\n            brushedQueue([]); // This is needed to clear the currently brushed items\n        }\n    };\n\n    function compute_cluster_centroids(d) {\n        let clusterCentroids = map();\n        let clusterCounts = map();\n        // determine clusterCounts\n        __.data.forEach(function (row) {\n            let scaled = __.dimensions[d].yscale(row[d]);\n            if (!clusterCounts.has(scaled)) {\n                clusterCounts.set(scaled, 0);\n            }\n            let count = clusterCounts.get(scaled);\n            clusterCounts.set(scaled, count + 1);\n        });\n\n        __.data.forEach(function (row) {\n            keys(__.dimensions).map(function (p, i) {\n                let scaled = __.dimensions[d].yscale(row[d]);\n                if (!clusterCentroids.has(scaled)) {\n                    let _map = map();\n                    clusterCentroids.set(scaled, _map);\n                }\n                if (!clusterCentroids.get(scaled).has(p)) {\n                    clusterCentroids.get(scaled).set(p, 0);\n                }\n                let value = clusterCentroids.get(scaled).get(p);\n                value += __.dimensions[p].yscale(row[p]) / clusterCounts.get(scaled);\n                clusterCentroids.get(scaled).set(p, value);\n            });\n        });\n\n        return clusterCentroids;\n    }\n\n    function compute_centroids(row) {\n        let centroids = [];\n\n        let p = keys(__.dimensions);\n        let cols = p.length;\n        let a = 0.5; // center between axes\n        for (let i = 0; i < cols; ++i) {\n            // centroids on 'real' axes\n            let x = position(p[i]);\n            let y = __.dimensions[p[i]].yscale(row[p[i]]);\n            centroids.push($V([x, y]));\n\n            // centroids on 'virtual' axes\n            if (i < cols - 1) {\n                let cx = x + a * (position(p[i + 1]) - x);\n                let cy = y + a * (__.dimensions[p[i + 1]].yscale(row[p[i + 1]]) - y);\n                if (__.bundleDimension !== null) {\n                    let leftCentroid = __.clusterCentroids\n                        .get(\n                            __.dimensions[__.bundleDimension].yscale(row[__.bundleDimension])\n                        )\n                        .get(p[i]);\n                    let rightCentroid = __.clusterCentroids\n                        .get(\n                            __.dimensions[__.bundleDimension].yscale(row[__.bundleDimension])\n                        )\n                        .get(p[i + 1]);\n                    let centroid = 0.5 * (leftCentroid + rightCentroid);\n                    cy = centroid + (1 - __.bundlingStrength) * (cy - centroid);\n                }\n                centroids.push($V([cx, cy]));\n            }\n        }\n\n        return centroids;\n    }\n\n    pc.compute_real_centroids = function (row) {\n        let realCentroids = [];\n\n        let p = keys(__.dimensions);\n        let cols = p.length;\n        let a = 0.5;\n\n        for (let i = 0; i < cols; ++i) {\n            let x = position(p[i]);\n            let y = __.dimensions[p[i]].yscale(row[p[i]]);\n            realCentroids.push([x, y]);\n        }\n\n        return realCentroids;\n    };\n\n    function compute_control_points(centroids) {\n        let cols = centroids.length;\n        let a = __.smoothness;\n        let cps = [];\n\n        cps.push(centroids[0]);\n        cps.push(\n            $V([\n                centroids[0].e(1) + a * 2 * (centroids[1].e(1) - centroids[0].e(1)),\n                centroids[0].e(2),\n            ])\n        );\n        for (let col = 1; col < cols - 1; ++col) {\n            let mid = centroids[col];\n            let left = centroids[col - 1];\n            let right = centroids[col + 1];\n\n            let diff = left.subtract(right);\n            cps.push(mid.add(diff.x(a)));\n            cps.push(mid);\n            cps.push(mid.subtract(diff.x(a)));\n        }\n        cps.push(\n            $V([\n                centroids[cols - 1].e(1) +\n                a * 2 * (centroids[cols - 2].e(1) - centroids[cols - 1].e(1)),\n                centroids[cols - 1].e(2),\n            ])\n        );\n        cps.push(centroids[cols - 1]);\n\n        return cps;\n    }\n\n    pc.shadows = function () {\n        flags.shadows = true;\n        pc.alphaOnBrushed(0.1);\n        pc.render();\n        return this;\n    };\n\n    // draw dots with radius r on the axis line where data intersects\n    pc.axisDots = function (_r) {\n        let r = _r || 0.1;\n        let ctx = pc.ctx.marks;\n        let startAngle = 0;\n        let endAngle = 2 * Math.PI;\n        ctx.globalAlpha = min([1 / Math.pow(__.data.length, 1 / 2), 1]);\n        __.data.forEach(function (d) {\n            entries(__.dimensions).forEach(function (p, i) {\n                ctx.beginPath();\n                ctx.arc(\n                    position(p),\n                    __.dimensions[p.key].yscale(d[p]),\n                    r,\n                    startAngle,\n                    endAngle\n                );\n                ctx.stroke();\n                ctx.fill();\n            });\n        });\n        return this;\n    };\n\n    // draw single cubic bezier curve\n    function single_curve(d, ctx) {\n        let centroids = compute_centroids(d);\n        let cps = compute_control_points(centroids);\n\n        ctx.moveTo(cps[0].e(1), cps[0].e(2));\n        for (let i = 1; i < cps.length; i += 3) {\n            if (__.showControlPoints) {\n                for (let j = 0; j < 3; j++) {\n                    ctx.fillRect(cps[i + j].e(1), cps[i + j].e(2), 2, 2);\n                }\n            }\n            ctx.bezierCurveTo(\n                cps[i].e(1),\n                cps[i].e(2),\n                cps[i + 1].e(1),\n                cps[i + 1].e(2),\n                cps[i + 2].e(1),\n                cps[i + 2].e(2)\n            );\n        }\n    }\n\n    // draw single polyline\n    function color_path(d, ctx) {\n        ctx.beginPath();\n        if (\n            (__.bundleDimension !== null && __.bundlingStrength > 0) ||\n            __.smoothness > 0\n        ) {\n            single_curve(d, ctx);\n        } else {\n            single_path(d, ctx);\n        }\n        ctx.stroke();\n    }\n\n    // draw many polylines of the same color\n    function paths(data, ctx) {\n        ctx.clearRect(-1, -1, w() + 2, h() + 2);\n        ctx.beginPath();\n        data.forEach(function (d) {\n            if (\n                (__.bundleDimension !== null && __.bundlingStrength > 0) ||\n                __.smoothness > 0\n            ) {\n                single_curve(d, ctx);\n            } else {\n                single_path(d, ctx);\n            }\n        });\n        ctx.stroke();\n    }\n\n    // returns the y-position just beyond the separating null value line\n    function getNullPosition() {\n        if (__.nullValueSeparator == 'bottom') {\n            return h() + 1;\n        } else if (__.nullValueSeparator == 'top') {\n            return 1;\n        } else {\n            console.log(\n                \"A value is NULL, but nullValueSeparator is not set; set it to 'bottom' or 'top'.\"\n            );\n        }\n        return h() + 1;\n    }\n\n    function single_path(d, ctx) {\n        entries(__.dimensions).forEach(function (p, i) {\n            //p isn't really p\n            if (i == 0) {\n                ctx.moveTo(\n                    position(p.key),\n                    typeof d[p.key] == 'undefined'\n                        ? getNullPosition()\n                        : __.dimensions[p.key].yscale(d[p.key])\n                );\n            } else {\n                ctx.lineTo(\n                    position(p.key),\n                    typeof d[p.key] == 'undefined'\n                        ? getNullPosition()\n                        : __.dimensions[p.key].yscale(d[p.key])\n                );\n            }\n        });\n    }\n\n    function path_brushed(d, i) {\n        if (__.brushedColor !== null) {\n            ctx.brushed.strokeStyle = _functor(__.brushedColor)(d, i);\n        } else {\n            ctx.brushed.strokeStyle = _functor(__.color)(d, i);\n        }\n        return color_path(d, ctx.brushed);\n    }\n\n    function path_foreground(d, i) {\n        ctx.foreground.strokeStyle = _functor(__.color)(d, i);\n        return color_path(d, ctx.foreground);\n    }\n\n    function path_highlight(d, i) {\n        ctx.highlight.strokeStyle = _functor(__.color)(d, i);\n        return color_path(d, ctx.highlight);\n    }\n\n    pc.clear = function (layer) {\n        ctx[layer].clearRect(0, 0, w() + 2, h() + 2);\n\n        // This will make sure that the foreground items are transparent\n        // without the need for changing the opacity style of the foreground canvas\n        // as this would stop the css styling from working\n        if (layer === 'brushed' && isBrushed()) {\n            ctx.brushed.fillStyle = pc.selection.style('background-color');\n            ctx.brushed.globalAlpha = 1 - __.alphaOnBrushed;\n            ctx.brushed.fillRect(0, 0, w() + 2, h() + 2);\n            ctx.brushed.globalAlpha = __.alpha;\n        }\n        return this;\n    };\n    _rebind(\n        pc,\n        axis,\n        'ticks',\n        'orient',\n        'tickValues',\n        'tickSubdivide',\n        'tickSize',\n        'tickPadding',\n        'tickFormat'\n    );\n\n    function flipAxisAndUpdatePCP(dimension) {\n        let g = pc.svg.selectAll('.dimension');\n        pc.flip(dimension);\n        pc.brushReset(dimension);\n        select(this.parentElement)\n            .transition()\n            .duration(__.animationTime)\n            .call(axis.scale(__.dimensions[dimension].yscale));\n        pc.render();\n    }\n\n    function rotateLabels() {\n        if (!__.rotateLabels) return;\n\n        let delta = event.deltaY;\n        delta = delta < 0 ? -5 : delta;\n        delta = delta > 0 ? 5 : delta;\n\n        __.dimensionTitleRotation += delta;\n        pc.svg\n            .selectAll('text.label')\n            .attr(\n                'transform',\n                'translate(0,-5) rotate(' + __.dimensionTitleRotation + ')'\n            );\n        event.preventDefault();\n    }\n\n    function dimensionLabels(d) {\n        return __.dimensions[d].title ? __.dimensions[d].title : d; // dimension display names\n    }\n\n    pc.createAxes = function () {\n        if (g) pc.removeAxes();\n        // Add a group element for each dimension.\n        g = pc.svg\n            .selectAll('.dimension')\n            .data(pc.getOrderedDimensionKeys(), function (d) {\n                return d;\n            })\n            .enter()\n            .append('svg:g')\n            .attr('class', 'dimension')\n            .attr('transform', function (d) {\n                return 'translate(' + xscale(d) + ')';\n            });\n        // Add an axis and title.\n        g\n            .append('svg:g')\n            .attr('class', 'axis')\n            .attr('transform', 'translate(0,0)')\n            .each(function (d) {\n                let axisElement = select(this).call(\n                    pc.applyAxisConfig(axis, __.dimensions[d])\n                );\n\n                axisElement\n                    .selectAll('path')\n                    .style('fill', 'none')\n                    .style('stroke', '#222')\n                    .style('shape-rendering', 'crispEdges');\n\n                axisElement\n                    .selectAll('line')\n                    .style('fill', 'none')\n                    .style('stroke', '#222')\n                    .style('shape-rendering', 'crispEdges');\n            })\n\n            .append('svg:text')\n            .attr('text-anchor', 'middle')\n            .attr('y', 0)\n            .attr(\n                'transform',\n                'translate(0,-5) rotate(' + __.dimensionTitleRotation + ')'\n            )\n            .attr('x', 0)\n            .attr('class', 'label')\n            .text(dimensionLabels)\n            .on('dblclick', flipAxisAndUpdatePCP)\n            .on('wheel', rotateLabels);\n\n        if (__.nullValueSeparator == 'top') {\n            pc.svg\n                .append('line')\n                .attr('x1', 0)\n                .attr('y1', 1 + __.nullValueSeparatorPadding.top)\n                .attr('x2', w())\n                .attr('y2', 1 + __.nullValueSeparatorPadding.top)\n                .attr('stroke-width', 1)\n                .attr('stroke', '#777')\n                .attr('fill', 'none')\n                .attr('shape-rendering', 'crispEdges');\n        } else if (__.nullValueSeparator == 'bottom') {\n            pc.svg\n                .append('line')\n                .attr('x1', 0)\n                .attr('y1', h() + 1 - __.nullValueSeparatorPadding.bottom)\n                .attr('x2', w())\n                .attr('y2', h() + 1 - __.nullValueSeparatorPadding.bottom)\n                .attr('stroke-width', 1)\n                .attr('stroke', '#777')\n                .attr('fill', 'none')\n                .attr('shape-rendering', 'crispEdges');\n        }\n\n        flags.axes = true;\n        return this;\n    };\n\n    pc.removeAxes = function () {\n        g.remove();\n        g = undefined;\n        return this;\n    };\n\n    pc.updateAxes = function (animationTime) {\n        if (typeof animationTime === 'undefined') {\n            animationTime = __.animationTime;\n        }\n        let g_data = pc.svg\n            .selectAll('.dimension')\n            .data(pc.getOrderedDimensionKeys());\n        // Enter\n        g_data\n            .enter()\n            .append('svg:g')\n            .attr('class', 'dimension')\n            .attr('transform', function (p) {\n                return 'translate(' + position(p) + ')';\n            })\n            .style('opacity', 0)\n            .append('svg:g')\n            .attr('class', 'axis')\n            .attr('transform', 'translate(0,0)')\n            .each(function (d) {\n                let axisElement = select(this).call(\n                    pc.applyAxisConfig(axis, __.dimensions[d])\n                );\n\n                axisElement\n                    .selectAll('path')\n                    .style('fill', 'none')\n                    .style('stroke', '#222')\n                    .style('shape-rendering', 'crispEdges');\n\n                axisElement\n                    .selectAll('line')\n                    .style('fill', 'none')\n                    .style('stroke', '#222')\n                    .style('shape-rendering', 'crispEdges');\n            })\n            .append('svg:text')\n            .attr({\n                'text-anchor': 'middle',\n                y: 0,\n                transform: 'translate(0,-5) rotate(' + __.dimensionTitleRotation + ')',\n                x: 0,\n                class: 'label',\n            })\n            .text(dimensionLabels)\n            .on('dblclick', flipAxisAndUpdatePCP)\n            .on('wheel', rotateLabels);\n\n        // Update\n        g_data.attr('opacity', 0);\n        g_data\n            .select('.axis')\n            .transition()\n            .duration(animationTime)\n            .each(function (d) {\n                select(this).call(pc.applyAxisConfig(axis, __.dimensions[d]));\n            });\n        g_data\n            .select('.label')\n            .transition()\n            .duration(animationTime)\n            .text(dimensionLabels)\n            .attr(\n                'transform',\n                'translate(0,-5) rotate(' + __.dimensionTitleRotation + ')'\n            );\n\n        // Exit\n        g_data.exit().remove();\n\n        g = pc.svg.selectAll('.dimension');\n        g\n            .transition()\n            .duration(animationTime)\n            .attr('transform', function (p) {\n                return 'translate(' + position(p) + ')';\n            })\n            .style('opacity', 1);\n\n        pc.svg\n            .selectAll('.axis')\n            .transition()\n            .duration(animationTime)\n            .each(function (d) {\n                select(this).call(pc.applyAxisConfig(axis, __.dimensions[d]));\n            });\n\n        if (flags.brushable) pc.brushable();\n        if (flags.reorderable) pc.reorderable();\n        if (pc.brushMode() !== 'None') {\n            let mode = pc.brushMode();\n            pc.brushMode('None');\n            pc.brushMode(mode);\n        }\n        return this;\n    };\n\n    pc.applyAxisConfig = function (axis, dimension) {\n        let axisCfg;\n\n        switch (dimension.orient) {\n            case 'left':\n                axisCfg = axisLeft(dimension.yscale);\n                break;\n            case 'right':\n                axisCfg = axisRight(dimension.yscale);\n\n                break;\n            case 'top':\n                axisCfg = axisTop(dimension.yscale);\n\n                break;\n            case 'bottom':\n                axisCfg = axisBottom(dimension.yscale);\n\n                break;\n            default:\n                axisCfg = axisLeft(dimension.yscale);\n\n                break;\n        }\n\n        axisCfg\n            .ticks(dimension.ticks)\n            .tickValues(dimension.tickValues)\n            .tickSizeInner(dimension.innerTickSize)\n            .tickSizeOuter(dimension.outerTickSize)\n            .tickPadding(dimension.tickPadding)\n            .tickFormat(dimension.tickFormat);\n\n        return axisCfg;\n    };\n\n    pc.brushable = function () {\n        if (!g) pc.createAxes();\n\n        // Add and store a brush for each axis.\n        g\n            .append('svg:g')\n            .attr('class', 'brush')\n            .each(function (d) {\n                if (__.dimensions[d] !== undefined) {\n                    __.dimensions[d]['brush'] = brushY(select(this)).extent([\n                        [-15, 0],\n                        [15, __.dimensions[d].yscale.range()[0]],\n                    ]);\n                    select(this).call(\n                        __.dimensions[d]['brush']\n                            .on('start', function () {\n                                if (event.sourceEvent !== null && !event.sourceEvent.ctrlKey) {\n                                    pc.brushReset();\n                                }\n                            })\n                            .on('brush', function () {\n                                if (!event.sourceEvent.ctrlKey) {\n                                    pc.brush();\n                                }\n                            })\n                            .on('end', function () {\n                                // save brush selection is ctrl key is held\n                                // store important brush information and\n                                // the html element of the selection,\n                                // to make a dummy selection element\n                                if (event.sourceEvent.ctrlKey) {\n                                    let html = select(this)\n                                        .select('.selection')\n                                        .nodes()[0].outerHTML;\n                                    html = html.replace(\n                                        'class=\"selection\"',\n                                        'class=\"selection dummy' +\n                                        ' selection-' +\n                                        __.brushes.length +\n                                        '\"'\n                                    );\n                                    let dat = select(this).nodes()[0].__data__;\n                                    let brush = {\n                                        id: __.brushes.length,\n                                        extent: brushSelection(this),\n                                        html: html,\n                                        data: dat,\n                                    };\n                                    __.brushes.push(brush);\n                                    select(select(this).nodes()[0].parentNode)\n                                        .select('.axis')\n                                        .nodes()[0].outerHTML += html;\n                                    pc.brush();\n                                    __.dimensions[d].brush.move(select(this, null));\n                                    select(this)\n                                        .select('.selection')\n                                        .attr('style', 'display:none');\n                                    pc.brushable();\n                                } else {\n                                    pc.brush();\n                                }\n                            })\n                    );\n                    select(this).on('dblclick', function () {\n                        pc.brushReset(d);\n                    });\n                }\n            });\n\n        flags.brushable = true;\n        return this;\n    };\n\n    pc.brush = function () {\n        __.brushed = pc.selected();\n        render.call('render');\n    };\n\n    pc.brushReset = function (dimension) {\n        let brushesToKeep = [];\n        for (let j = 0; j < __.brushes.length; j++) {\n            if (__.brushes[j].data !== dimension) {\n                brushesToKeep.push(__.brushes[j]);\n            }\n        }\n\n        __.brushes = brushesToKeep;\n        __.brushed = false;\n\n        if (g) {\n            let nodes = selectAll('.brush').nodes();\n            for (let i = 0; i < nodes.length; i++) {\n                if (nodes[i].__data__ === dimension) {\n                    // remove all dummy brushes for this axis or the real brush\n                    select(select(nodes[i]).nodes()[0].parentNode)\n                        .selectAll('.dummy')\n                        .remove();\n                    __.dimensions[dimension].brush.move(select(nodes[i], null));\n                }\n            }\n        }\n\n        return this;\n    };\n\n    pc.selected = function () {\n        let actives = [];\n        let extents = [];\n        let ranges = {};\n        //get brush selections from each node, convert to actual values\n        //invert order of values in array to comply with the parcoords architecture\n        if (__.brushes.length === 0) {\n            let nodes = selectAll('.brush').nodes();\n            for (let k = 0; k < nodes.length; k++) {\n                if (brushSelection(nodes[k]) !== null) {\n                    actives.push(nodes[k].__data__);\n                    let values = [];\n                    let ranger = brushSelection(nodes[k]);\n                    if (\n                        typeof __.dimensions[nodes[k].__data__].yscale.domain()[0] ===\n                        'number'\n                    ) {\n                        for (let i = 0; i < ranger.length; i++) {\n                            if (\n                                actives.includes(nodes[k].__data__) &&\n                                __.flipAxes.includes(nodes[k].__data__)\n                            ) {\n                                values.push(\n                                    __.dimensions[nodes[k].__data__].yscale.invert(ranger[i])\n                                );\n                            } else if (__.dimensions[nodes[k].__data__].yscale() !== 1) {\n                                values.unshift(\n                                    __.dimensions[nodes[k].__data__].yscale.invert(ranger[i])\n                                );\n                            }\n                        }\n                        extents.push(values);\n                        for (let ii = 0; ii < extents.length; ii++) {\n                            if (extents[ii].length === 0) {\n                                extents[ii] = [1, 1];\n                            }\n                        }\n                    } else {\n                        ranges[nodes[k].__data__] = brushSelection(nodes[k]);\n                        let dimRange = __.dimensions[nodes[k].__data__].yscale.range();\n                        let dimDomain = __.dimensions[nodes[k].__data__].yscale.domain();\n                        for (let j = 0; j < dimRange.length; j++) {\n                            if (\n                                dimRange[j] >= ranger[0] &&\n                                dimRange[j] <= ranger[1] &&\n                                actives.includes(nodes[k].__data__) &&\n                                __.flipAxes.includes(nodes[k].__data__)\n                            ) {\n                                values.push(dimRange[j]);\n                            } else if (dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) {\n                                values.unshift(dimRange[j]);\n                            }\n                        }\n                        extents.push(values);\n                        for (let ii = 0; ii < extents.length; ii++) {\n                            if (extents[ii].length === 0) {\n                                extents[ii] = [1, 1];\n                            }\n                        }\n                    }\n                }\n            }\n            // test if within range\n            let within = {\n                date: function (d, p, dimension) {\n                    let category = d[p];\n                    let categoryIndex = __.dimensions[p].yscale\n                        .domain()\n                        .indexOf(category);\n                    let categoryRangeValue = __.dimensions[p].yscale.range()[\n                        categoryIndex\n                        ];\n                    return (\n                        categoryRangeValue >= ranges[p][0] &&\n                        categoryRangeValue <= ranges[p][1]\n                    );\n                },\n                number: function (d, p, dimension) {\n                    return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\n                },\n                string: function (d, p, dimension) {\n                    let category = d[p];\n                    let categoryIndex = __.dimensions[p].yscale\n                        .domain()\n                        .indexOf(category);\n                    let categoryRangeValue = __.dimensions[p].yscale.range()[\n                        categoryIndex\n                        ];\n                    return (\n                        categoryRangeValue >= ranges[p][0] &&\n                        categoryRangeValue <= ranges[p][1]\n                    );\n                },\n            };\n            return __.data.filter(function (d) {\n                return actives.every(function (p, dimension) {\n                    return within[__.dimensions[p].type](d, p, dimension);\n                });\n            });\n        } else {\n            // need to get data from each brush instead of each axis\n            // first must find active axes by iterating through all brushes\n            // then go through similiar process as above.\n            let multiBrushData = [];\n            for (let idx = 0; idx < __.brushes.length; idx++) {\n                let brush = __.brushes[idx];\n                let values = [];\n                let ranger = brush.extent;\n                let actives = [brush.data];\n                if (typeof __.dimensions[brush.data].yscale.domain()[0] === 'number') {\n                    for (let i = 0; i < ranger.length; i++) {\n                        if (\n                            actives.includes(brush.data) &&\n                            __.flipAxes.includes(brush.data)\n                        ) {\n                            values.push(__.dimensions[brush.data].yscale.invert(ranger[i]));\n                        } else if (__.dimensions[brush.data].yscale() !== 1) {\n                            values.unshift(\n                                __.dimensions[brush.data].yscale.invert(ranger[i])\n                            );\n                        }\n                    }\n                    extents.push(values);\n                    for (let ii = 0; ii < extents.length; ii++) {\n                        if (extents[ii].length === 0) {\n                            extents[ii] = [1, 1];\n                        }\n                    }\n                } else {\n                    ranges[brush.data] = brush.extent;\n                    let dimRange = __.dimensions[brush.data].yscale.range();\n                    let dimDomain = __.dimensions[brush.data].yscale.domain();\n                    for (let j = 0; j < dimRange.length; j++) {\n                        if (\n                            dimRange[j] >= ranger[0] &&\n                            dimRange[j] <= ranger[1] &&\n                            actives.includes(brush.data) &&\n                            __.flipAxes.includes(brush.data)\n                        ) {\n                            values.push(dimRange[j]);\n                        } else if (dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) {\n                            values.unshift(dimRange[j]);\n                        }\n                    }\n                    extents.push(values);\n                    for (let ii = 0; ii < extents.length; ii++) {\n                        if (extents[ii].length === 0) {\n                            extents[ii] = [1, 1];\n                        }\n                    }\n                }\n                let within = {\n                    date: function (d, p, dimension) {\n                        let category = d[p];\n                        let categoryIndex = __.dimensions[p].yscale\n                            .domain()\n                            .indexOf(category);\n                        let categoryRangeValue = __.dimensions[p].yscale.range()[\n                            categoryIndex\n                            ];\n                        return (\n                            categoryRangeValue >= ranges[p][0] &&\n                            categoryRangeValue <= ranges[p][1]\n                        );\n                    },\n                    number: function (d, p, dimension) {\n                        return extents[idx][0] <= d[p] && d[p] <= extents[idx][1];\n                    },\n                    string: function (d, p, dimension) {\n                        let category = d[p];\n                        let categoryIndex = __.dimensions[p].yscale\n                            .domain()\n                            .indexOf(category);\n                        let categoryRangeValue = __.dimensions[p].yscale.range()[\n                            categoryIndex\n                            ];\n                        return (\n                            categoryRangeValue >= ranges[p][0] &&\n                            categoryRangeValue <= ranges[p][1]\n                        );\n                    },\n                };\n\n                // filter data, but instead of returning it now,\n                // put it into multiBrush data which is returned after\n                // all brushes are iterated through.\n                let filtered = __.data.filter(function (d) {\n                    return actives.every(function (p, dimension) {\n                        return within[__.dimensions[p].type](d, p, dimension);\n                    });\n                });\n                for (let z = 0; z < filtered.length; z++) {\n                    multiBrushData.push(filtered[z]);\n                }\n                actives = [];\n                ranges = {};\n            }\n            return multiBrushData;\n        }\n    };\n\n    // Jason Davies, http://bl.ocks.org/1341281\n    pc.reorderable = function () {\n        if (!g) pc.createAxes();\n        g.style('cursor', 'move').call(\n            drag()\n                .on('start', function (d) {\n                    dragging[d] = this.__origin__ = xscale(d);\n                })\n                .on('drag', function (d) {\n                    dragging[d] = Math.min(\n                        w(),\n                        Math.max(0, (this.__origin__ += event.dx))\n                    );\n                    pc.sortDimensions();\n                    xscale.domain(pc.getOrderedDimensionKeys());\n                    pc.render();\n                    g.attr('transform', function (d) {\n                        return 'translate(' + position(d) + ')';\n                    });\n                })\n                .on('end', function (d) {\n                    delete this.__origin__;\n                    delete dragging[d];\n                    select(this)\n                        .transition()\n                        .attr('transform', 'translate(' + xscale(d) + ')');\n                    pc.render();\n                })\n        );\n        flags.reorderable = true;\n        return this;\n    };\n\n    // Reorder dimensions, such that the highest value (visually) is on the left and\n    // the lowest on the right. Visual values are determined by the data values in\n    // the given row.\n    pc.reorder = function (rowdata) {\n        let firstDim = pc.getOrderedDimensionKeys()[0];\n\n        pc.sortDimensionsByRowData(rowdata);\n        // NOTE: this is relatively cheap given that:\n        // number of dimensions < number of data items\n        // Thus we check equality of order to prevent rerendering when this is the case.\n        let reordered = false;\n        reordered = firstDim !== pc.getOrderedDimensionKeys()[0];\n\n        if (reordered) {\n            xscale.domain(pc.getOrderedDimensionKeys());\n            let highlighted = __.highlighted.slice(0);\n            pc.unhighlight();\n\n            g\n                .transition()\n                .duration(1500)\n                .attr('transform', function (d) {\n                    return 'translate(' + xscale(d) + ')';\n                });\n            pc.render();\n\n            // pc.highlight() does not check whether highlighted is length zero, so we do that here.\n            if (highlighted.length !== 0) {\n                pc.highlight(highlighted);\n            }\n        }\n    };\n\n    pc.sortDimensionsByRowData = function (rowdata) {\n        let copy = __.dimensions;\n        let positionSortedKeys = keys(__.dimensions).sort(function (a, b) {\n            let pixelDifference =\n                __.dimensions[a].yscale(rowdata[a]) -\n                __.dimensions[b].yscale(rowdata[b]);\n\n            // Array.sort is not necessarily stable, this means that if pixelDifference is zero\n            // the ordering of dimensions might change unexpectedly. This is solved by sorting on\n            // variable name in that case.\n            if (pixelDifference === 0) {\n                return a.localeCompare(b);\n            } // else\n            return pixelDifference;\n        });\n        __.dimensions = {};\n        positionSortedKeys.forEach(function (p, i) {\n            __.dimensions[p] = copy[p];\n            __.dimensions[p].index = i;\n        });\n    };\n\n    pc.sortDimensions = function () {\n        let copy = __.dimensions;\n        let positionSortedKeys = keys(__.dimensions).sort(function (a, b) {\n            if (position(a) - position(b) === 0) {\n                return 1;\n            } else {\n                return position(a) - position(b);\n            }\n        });\n        __.dimensions = {};\n        positionSortedKeys.forEach(function (p, i) {\n            __.dimensions[p] = copy[p];\n            __.dimensions[p].index = i;\n        });\n    };\n\n    // pairs of adjacent dimensions\n    pc.adjacent_pairs = function (arr) {\n        let ret = [];\n        for (let i = 0; i < arr.length - 1; i++) {\n            ret.push([arr[i], arr[i + 1]]);\n        }\n        return ret;\n    };\n\n    let brush = {\n        modes: {\n            None: {\n                install: function (pc) {\n                }, // Nothing to be done.\n                uninstall: function (pc) {\n                }, // Nothing to be done.\n                selected: function () {\n                    return [];\n                }, // Nothing to return\n                brushState: function () {\n                    return {};\n                },\n            },\n        },\n        mode: 'None',\n        predicate: 'AND',\n        currentMode: function () {\n            return this.modes[this.mode];\n        },\n    };\n\n    // This function can be used for 'live' updates of brushes. That is, during the\n    // specification of a brush, this method can be called to update the view.\n    //\n    // @param newSelection - The new set of data items that is currently contained\n    //                       by the brushes\n    function brushUpdated(newSelection) {\n        __.brushed = newSelection;\n        events.call('brush', pc, __.brushed);\n        pc.renderBrushed();\n    }\n\n    function brushPredicate(predicate) {\n        if (!arguments.length) {\n            return brush.predicate;\n        }\n\n        predicate = String(predicate).toUpperCase();\n        if (predicate !== 'AND' && predicate !== 'OR') {\n            throw new Error('Invalid predicate ' + predicate);\n        }\n\n        brush.predicate = predicate;\n        __.brushed = brush.currentMode().selected();\n        pc.renderBrushed();\n        return pc;\n    }\n\n    pc.brushModes = function () {\n        return Object.getOwnPropertyNames(brush.modes);\n    };\n\n    pc.brushMode = function (mode) {\n        if (arguments.length === 0) {\n            return brush.mode;\n        }\n\n        if (pc.brushModes().indexOf(mode) === -1) {\n            throw new Error('pc.brushmode: Unsupported brush mode: ' + mode);\n        }\n\n        // Make sure that we don't trigger unnecessary events by checking if the mode\n        // actually changes.\n        if (mode !== brush.mode) {\n            // When changing brush modes, the first thing we need to do is clearing any\n            // brushes from the current mode, if any.\n            if (brush.mode !== 'None') {\n                pc.brushReset();\n            }\n\n            // Next, we need to 'uninstall' the current brushMode.\n            brush.modes[brush.mode].uninstall(pc);\n            // Finally, we can install the requested one.\n            brush.mode = mode;\n            brush.modes[brush.mode].install();\n            if (mode === 'None') {\n                delete pc.brushPredicate;\n            } else {\n                pc.brushPredicate = brushPredicate;\n            }\n        }\n\n        return pc;\n    };\n\n    // brush mode: 1D-Axes\n    const install1DAxes = () => {\n        let brushes = {};\n        let brushNodes = {};\n\n        //https://github.com/d3/d3-brush/issues/10\n        function is_brushed(p) {\n            return brushSelection(brushNodes[p]) !== null;\n        }\n\n        // data within extents\n        function selected() {\n            let actives = keys(__.dimensions).filter(is_brushed),\n                extents = actives.map(function (p) {\n                    const _brushRange = brushSelection(brushNodes[p]);\n\n                    if (typeof __.dimensions[p].yscale.invert === 'function') {\n                        return [\n                            __.dimensions[p].yscale.invert(_brushRange[1]),\n                            __.dimensions[p].yscale.invert(_brushRange[0]),\n                        ];\n                    } else {\n                        return _brushRange;\n                    }\n                });\n            // We don't want to return the full data set when there are no axes brushed.\n            // Actually, when there are no axes brushed, by definition, no items are\n            // selected. So, let's avoid the filtering and just return false.\n            //if (actives.length === 0) return false;\n\n            // Resolves broken examples for now. They expect to get the full dataset back from empty brushes\n            if (actives.length === 0) return __.data;\n\n            // test if within range\n            let within = {\n                date: function (d, p, dimension) {\n                    if (typeof __.dimensions[p].yscale.bandwidth === 'function') {\n                        // if it is ordinal\n                        return (\n                            extents[dimension][0] <= __.dimensions[p].yscale(d[p]) &&\n                            __.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n                        );\n                    } else {\n                        return (\n                            extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1]\n                        );\n                    }\n                },\n                number: function (d, p, dimension) {\n                    if (typeof __.dimensions[p].yscale.bandwidth === 'function') {\n                        // if it is ordinal\n                        return (\n                            extents[dimension][0] <= __.dimensions[p].yscale(d[p]) &&\n                            __.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n                        );\n                    } else {\n                        return (\n                            extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1]\n                        );\n                    }\n                },\n                string: function (d, p, dimension) {\n                    return (\n                        extents[dimension][0] <= __.dimensions[p].yscale(d[p]) &&\n                        __.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n                    );\n                },\n            };\n\n            return __.data.filter(function (d) {\n                switch (brush.predicate) {\n                    case 'AND':\n                        return actives.every(function (p, dimension) {\n                            return within[__.dimensions[p].type](d, p, dimension);\n                        });\n                    case 'OR':\n                        return actives.some(function (p, dimension) {\n                            return within[__.dimensions[p].type](d, p, dimension);\n                        });\n                    default:\n                        throw new Error('Unknown brush predicate ' + __.brushPredicate);\n                }\n            });\n        }\n\n        function brushExtents(extents) {\n            if (typeof extents === 'undefined') {\n                let extents = {};\n                keys(__.dimensions).forEach(function (d) {\n                    let brush = brushes[d];\n                    //todo: brush check\n                    if (brush !== undefined && brushSelection(brushNodes[d]) !== null) {\n                        let extent = brush.extent();\n                        extents[d] = extent;\n                    }\n                });\n                return extents;\n            } else {\n                //first get all the brush selections\n                let brushSelections = {};\n                g.selectAll('.brush').each(function (d) {\n                    brushSelections[d] = select(this);\n                });\n\n                // loop over each dimension and update appropriately (if it was passed in through extents)\n                keys(__.dimensions).forEach(function (d) {\n                    if (extents[d] === undefined) {\n                        return;\n                    }\n\n                    let brush = brushes[d];\n                    if (brush !== undefined) {\n                        //update the extent\n                        brush.extent(extents[d]);\n\n                        //redraw the brush\n                        brushSelections[d]\n                            .transition()\n                            .duration(0)\n                            .call(brush);\n\n                        //fire some events\n                        brush.event(brushSelections[d]);\n                    }\n                });\n\n                //redraw the chart\n                pc.renderBrushed();\n\n                return pc;\n            }\n        }\n\n        function brushFor(axis, _selector) {\n            const brushRangeMax =\n                __.dimensions[axis].type === 'string'\n                    ? __.dimensions[axis].yscale.range()[\n                    __.dimensions[axis].yscale.range().length - 1\n                        ]\n                    : __.dimensions[axis].yscale.range()[0];\n\n            let _brush = brushY(_selector).extent([[-15, 0], [15, brushRangeMax]]);\n\n            _brush\n                .on('start', function () {\n                    if (event.sourceEvent !== null) {\n                        events.call('brushstart', pc, __.brushed);\n                        event.sourceEvent.stopPropagation();\n                    }\n                })\n                .on('brush', function () {\n                    brushUpdated(selected());\n                })\n                .on('end', function () {\n                    brushUpdated(selected());\n                    events.call('brushend', pc, __.brushed);\n                });\n\n            brushes[axis] = _brush;\n            brushNodes[axis] = _selector.node();\n            return _brush;\n        }\n\n        function brushReset(dimension) {\n            if (dimension === undefined) {\n                __.brushed = false;\n                if (g) {\n                    g.selectAll('.brush').each(function(d) {\n                        select(this).call(brushes[d].move, null);\n                    });\n                    pc.renderBrushed();\n                }\n            } else {\n                if (g) {\n                    g.selectAll('.brush').each(function(d) {\n                        if (d != dimension) return;\n                        select(this).call(brushes[d].move, null);\n                        brushes[d].event(select(this));\n                    });\n                    pc.renderBrushed();\n                }\n            }\n            return this;\n        }\n\n\n        function install() {\n            if (!g) pc.createAxes();\n            // Add and store a brush for each axis.\n            let brush = g\n                .append('svg:g')\n                .attr('class', 'brush')\n                .each(function (d) {\n                    select(this).call(brushFor(d, select(this)));\n                });\n            brush\n                .selectAll('rect')\n                .style('visibility', null)\n                .attr('x', -15)\n                .attr('width', 30);\n\n            brush.selectAll('rect.background').style('fill', 'transparent');\n\n            brush\n                .selectAll('rect.extent')\n                .style('fill', 'rgba(255,255,255,0.25)')\n                .style('stroke', 'rgba(0,0,0,0.6)');\n\n            brush.selectAll('.resize rect').style('fill', 'rgba(0,0,0,0.1)');\n\n            pc.brushExtents = brushExtents;\n            pc.brushReset = brushReset;\n            return pc;\n        }\n\n        brush.modes['1D-axes'] = {\n            install: install,\n            uninstall: function () {\n                g.selectAll('.brush').remove();\n                brushes = {};\n                delete pc.brushExtents;\n                delete pc.brushReset;\n            },\n            selected: selected,\n            brushState: brushExtents,\n        };\n    };\n\n    // brush mode: 2D-strums\n    // bl.ocks.org/syntagmatic/5441022\n    const install2DStrums = () => {\n        let strums = {},\n            strumRect;\n\n        function drawStrum(strum, activePoint) {\n            let _svg = pc.selection.select('svg').select('g#strums'),\n                id = strum.dims.i,\n                points = [strum.p1, strum.p2],\n                _line = _svg.selectAll('line#strum-' + id).data([strum]),\n                circles = _svg.selectAll('circle#strum-' + id).data(points),\n                _drag = drag();\n\n            _line\n                .enter()\n                .append('line')\n                .attr('id', 'strum-' + id)\n                .attr('class', 'strum');\n\n            _line\n                .attr('x1', function (d) {\n                    return d.p1[0];\n                })\n                .attr('y1', function (d) {\n                    return d.p1[1];\n                })\n                .attr('x2', function (d) {\n                    return d.p2[0];\n                })\n                .attr('y2', function (d) {\n                    return d.p2[1];\n                })\n                .attr('stroke', 'black')\n                .attr('stroke-width', 2);\n\n            _drag\n                .on('drag', function (d, i) {\n                    let ev = event;\n                    i = i + 1;\n                    strum['p' + i][0] = Math.min(\n                        Math.max(strum.minX + 1, ev.x),\n                        strum.maxX\n                    );\n                    strum['p' + i][1] = Math.min(Math.max(strum.minY, ev.y), strum.maxY);\n                    drawStrum(strum, i - 1);\n                })\n                .on('end', onDragEnd());\n\n            circles\n                .enter()\n                .append('circle')\n                .attr('id', 'strum-' + id)\n                .attr('class', 'strum');\n\n            circles\n                .attr('cx', function (d) {\n                    return d[0];\n                })\n                .attr('cy', function (d) {\n                    return d[1];\n                })\n                .attr('r', 5)\n                .style('opacity', function (d, i) {\n                    return activePoint !== undefined && i === activePoint ? 0.8 : 0;\n                })\n                .on('mouseover', function () {\n                    select(this).style('opacity', 0.8);\n                })\n                .on('mouseout', function () {\n                    select(this).style('opacity', 0);\n                })\n                .call(_drag);\n        }\n\n        function dimensionsForPoint(p) {\n            let dims = {i: -1, left: undefined, right: undefined};\n            keys(__.dimensions).some(function (dim, i) {\n                if (xscale(dim) < p[0]) {\n                    let next = keys(__.dimensions)[\n                    pc.getOrderedDimensionKeys().indexOf(dim) + 1\n                        ];\n                    dims.i = i;\n                    dims.left = dim;\n                    dims.right = next;\n                    return false;\n                }\n                return true;\n            });\n\n            if (dims.left === undefined) {\n                // Event on the left side of the first axis.\n                dims.i = 0;\n                dims.left = pc.getOrderedDimensionKeys()[0];\n                dims.right = pc.getOrderedDimensionKeys()[1];\n            } else if (dims.right === undefined) {\n                // Event on the right side of the last axis\n                dims.i = keys(__.dimensions).length - 1;\n                dims.right = dims.left;\n                dims.left = pc.getOrderedDimensionKeys()[\n                keys(__.dimensions).length - 2\n                    ];\n            }\n\n            return dims;\n        }\n\n        function onDragStart() {\n            // First we need to determine between which two axes the sturm was started.\n            // This will determine the freedom of movement, because a strum can\n            // logically only happen between two axes, so no movement outside these axes\n            // should be allowed.\n            return function () {\n                let p = mouse(strumRect.node()),\n                    dims,\n                    strum;\n\n                p[0] = p[0] - __.margin.left;\n                p[1] = p[1] - __.margin.top;\n\n                (dims = dimensionsForPoint(p)),\n                    (strum = {\n                        p1: p,\n                        dims: dims,\n                        minX: xscale(dims.left),\n                        maxX: xscale(dims.right),\n                        minY: 0,\n                        maxY: h(),\n                    });\n\n                strums[dims.i] = strum;\n                strums.active = dims.i;\n\n                // Make sure that the point is within the bounds\n                strum.p1[0] = Math.min(Math.max(strum.minX, p[0]), strum.maxX);\n                strum.p2 = strum.p1.slice();\n            };\n        }\n\n        function onDrag() {\n            return function () {\n                let ev = event,\n                    strum = strums[strums.active];\n\n                // Make sure that the point is within the bounds\n                strum.p2[0] = Math.min(\n                    Math.max(strum.minX + 1, ev.x - __.margin.left),\n                    strum.maxX\n                );\n                strum.p2[1] = Math.min(\n                    Math.max(strum.minY, ev.y - __.margin.top),\n                    strum.maxY\n                );\n                drawStrum(strum, 1);\n            };\n        }\n\n        function containmentTest(strum, width) {\n            let p1 = [strum.p1[0] - strum.minX, strum.p1[1] - strum.minX],\n                p2 = [strum.p2[0] - strum.minX, strum.p2[1] - strum.minX],\n                m1 = 1 - width / p1[0],\n                b1 = p1[1] * (1 - m1),\n                m2 = 1 - width / p2[0],\n                b2 = p2[1] * (1 - m2);\n\n            // test if point falls between lines\n            return function (p) {\n                let x = p[0],\n                    y = p[1],\n                    y1 = m1 * x + b1,\n                    y2 = m2 * x + b2;\n\n                if (y > Math.min(y1, y2) && y < Math.max(y1, y2)) {\n                    return true;\n                }\n\n                return false;\n            };\n        }\n\n        function selected() {\n            let ids = Object.getOwnPropertyNames(strums),\n                brushed = __.data;\n\n            // Get the ids of the currently active strums.\n            ids = ids.filter(function (d) {\n                return !isNaN(d);\n            });\n\n            function crossesStrum(d, id) {\n                let strum = strums[id],\n                    test = containmentTest(strum, strums.width(id)),\n                    d1 = strum.dims.left,\n                    d2 = strum.dims.right,\n                    y1 = __.dimensions[d1].yscale,\n                    y2 = __.dimensions[d2].yscale,\n                    point = [y1(d[d1]) - strum.minX, y2(d[d2]) - strum.minX];\n                return test(point);\n            }\n\n            if (ids.length === 0) {\n                return brushed;\n            }\n\n            return brushed.filter(function (d) {\n                switch (brush.predicate) {\n                    case 'AND':\n                        return ids.every(function (id) {\n                            return crossesStrum(d, id);\n                        });\n                    case 'OR':\n                        return ids.some(function (id) {\n                            return crossesStrum(d, id);\n                        });\n                    default:\n                        throw new Error('Unknown brush predicate ' + __.brushPredicate);\n                }\n            });\n        }\n\n        function removeStrum() {\n            let strum = strums[strums.active],\n                svg = pc.selection.select('svg').select('g#strums');\n\n            delete strums[strums.active];\n            strums.active = undefined;\n            svg.selectAll('line#strum-' + strum.dims.i).remove();\n            svg.selectAll('circle#strum-' + strum.dims.i).remove();\n        }\n\n        function onDragEnd() {\n            return function () {\n                let brushed = __.data,\n                    strum = strums[strums.active];\n\n                // Okay, somewhat unexpected, but not totally unsurprising, a mousclick is\n                // considered a drag without move. So we have to deal with that case\n                if (\n                    strum &&\n                    strum.p1[0] === strum.p2[0] &&\n                    strum.p1[1] === strum.p2[1]\n                ) {\n                    removeStrum(strums);\n                }\n\n                brushed = selected(strums);\n                strums.active = undefined;\n                __.brushed = brushed;\n                pc.renderBrushed();\n                events.call('brushend', pc, __.brushed);\n            };\n        }\n\n        function brushReset(strums) {\n            return function () {\n                let ids = Object.getOwnPropertyNames(strums).filter(function (d) {\n                    return !isNaN(d);\n                });\n\n                ids.forEach(function (d) {\n                    strums.active = d;\n                    removeStrum(strums);\n                });\n                onDragEnd(strums)();\n            };\n        }\n\n        function install() {\n            if (!g) pc.createAxes();\n\n            let _drag = drag();\n\n            // Map of current strums. Strums are stored per segment of the PC. A segment,\n            // being the area between two axes. The left most area is indexed at 0.\n            strums.active = undefined;\n            // Returns the width of the PC segment where currently a strum is being\n            // placed. NOTE: even though they are evenly spaced in our current\n            // implementation, we keep for when non-even spaced segments are supported as\n            // well.\n            strums.width = function (id) {\n                let strum = strums[id];\n\n                if (strum === undefined) {\n                    return undefined;\n                }\n\n                return strum.maxX - strum.minX;\n            };\n\n            pc.on('axesreorder.strums', function () {\n                let ids = Object.getOwnPropertyNames(strums).filter(function (d) {\n                    return !isNaN(d);\n                });\n\n                // Checks if the first dimension is directly left of the second dimension.\n                function consecutive(first, second) {\n                    let length = keys(__.dimensions).length;\n                    return keys(__.dimensions).some(function (d, i) {\n                        return d === first\n                            ? i + i < length && __.dimensions[i + 1] === second\n                            : false;\n                    });\n                }\n\n                if (ids.length > 0) {\n                    // We have some strums, which might need to be removed.\n                    ids.forEach(function (d) {\n                        let dims = strums[d].dims;\n                        strums.active = d;\n                        // If the two dimensions of the current strum are not next to each other\n                        // any more, than we'll need to remove the strum. Otherwise we keep it.\n                        if (!consecutive(dims.left, dims.right)) {\n                            removeStrum(strums);\n                        }\n                    });\n                    onDragEnd(strums)();\n                }\n            });\n\n            // Add a new svg group in which we draw the strums.\n            pc.selection\n                .select('svg')\n                .append('g')\n                .attr('id', 'strums')\n                .attr(\n                    'transform',\n                    'translate(' + __.margin.left + ',' + __.margin.top + ')'\n                );\n\n            // Install the required brushReset function\n            pc.brushReset = brushReset(strums);\n\n            _drag\n                .on('start', onDragStart(strums))\n                .on('drag', onDrag(strums))\n                .on('end', onDragEnd(strums));\n\n            // NOTE: The styling needs to be done here and not in the css. This is because\n            //       for 1D brushing, the canvas layers should not listen to\n            //       pointer-events._.\n            strumRect = pc.selection\n                .select('svg')\n                .insert('rect', 'g#strums')\n                .attr('id', 'strum-events')\n                .attr('x', __.margin.left)\n                .attr('y', __.margin.top)\n                .attr('width', w())\n                .attr('height', h() + 2)\n                .style('opacity', 0)\n                .call(_drag);\n        }\n\n        brush.modes['2D-strums'] = {\n            install: install,\n            uninstall: function () {\n                pc.selection\n                    .select('svg')\n                    .select('g#strums')\n                    .remove();\n                pc.selection\n                    .select('svg')\n                    .select('rect#strum-events')\n                    .remove();\n                pc.on('axesreorder.strums', undefined);\n                delete pc.brushReset;\n\n                strumRect = undefined;\n            },\n            selected: selected,\n            brushState: function () {\n                return strums;\n            },\n        };\n    };\n\n    // brush mode: angular\n    // code based on 2D.strums.js\n\n    const installAngularBrush = () => {\n        let arcs = {},\n            strumRect;\n\n        function drawStrum(arc, activePoint) {\n            let svg = pc.selection.select('svg').select('g#arcs'),\n                id = arc.dims.i,\n                points = [arc.p2, arc.p3],\n                _line = svg\n                    .selectAll('line#arc-' + id)\n                    .data([{p1: arc.p1, p2: arc.p2}, {p1: arc.p1, p2: arc.p3}]),\n                circles = svg.selectAll('circle#arc-' + id).data(points),\n                _drag = drag(),\n                _path = svg.selectAll('path#arc-' + id).data([arc]);\n\n            _path\n                .enter()\n                .append('path')\n                .attr('id', 'arc-' + id)\n                .attr('class', 'arc')\n                .style('fill', 'orange')\n                .style('opacity', 0.5);\n\n            _path\n                .attr('d', arc.arc)\n                .attr('transform', 'translate(' + arc.p1[0] + ',' + arc.p1[1] + ')');\n\n            _line\n                .enter()\n                .append('line')\n                .attr('id', 'arc-' + id)\n                .attr('class', 'arc');\n\n            _line\n                .attr('x1', function (d) {\n                    return d.p1[0];\n                })\n                .attr('y1', function (d) {\n                    return d.p1[1];\n                })\n                .attr('x2', function (d) {\n                    return d.p2[0];\n                })\n                .attr('y2', function (d) {\n                    return d.p2[1];\n                })\n                .attr('stroke', 'black')\n                .attr('stroke-width', 2);\n\n            _drag\n                .on('drag', function (d, i) {\n                    let ev = event,\n                        angle = 0;\n\n                    i = i + 2;\n\n                    arc['p' + i][0] = Math.min(Math.max(arc.minX + 1, ev.x), arc.maxX);\n                    arc['p' + i][1] = Math.min(Math.max(arc.minY, ev.y), arc.maxY);\n\n                    angle = i === 3 ? arcs.startAngle(id) : arcs.endAngle(id);\n\n                    if (\n                        (arc.startAngle < Math.PI &&\n                            arc.endAngle < Math.PI &&\n                            angle < Math.PI) ||\n                        (arc.startAngle >= Math.PI &&\n                            arc.endAngle >= Math.PI &&\n                            angle >= Math.PI)\n                    ) {\n                        if (i === 2) {\n                            arc.endAngle = angle;\n                            arc.arc.endAngle(angle);\n                        } else if (i === 3) {\n                            arc.startAngle = angle;\n                            arc.arc.startAngle(angle);\n                        }\n                    }\n\n                    drawStrum(arc, i - 2);\n                })\n                .on('end', onDragEnd());\n\n            circles\n                .enter()\n                .append('circle')\n                .attr('id', 'arc-' + id)\n                .attr('class', 'arc');\n\n            circles\n                .attr('cx', function (d) {\n                    return d[0];\n                })\n                .attr('cy', function (d) {\n                    return d[1];\n                })\n                .attr('r', 5)\n                .style('opacity', function (d, i) {\n                    return activePoint !== undefined && i === activePoint ? 0.8 : 0;\n                })\n                .on('mouseover', function () {\n                    select(this).style('opacity', 0.8);\n                })\n                .on('mouseout', function () {\n                    select(this).style('opacity', 0);\n                })\n                .call(_drag);\n        }\n\n        function dimensionsForPoint(p) {\n            let dims = {i: -1, left: undefined, right: undefined};\n            keys(__.dimensions).some(function (dim, i) {\n                if (xscale(dim) < p[0]) {\n                    let next = keys(__.dimensions)[\n                    pc.getOrderedDimensionKeys().indexOf(dim) + 1\n                        ];\n                    dims.i = i;\n                    dims.left = dim;\n                    dims.right = next;\n                    return false;\n                }\n                return true;\n            });\n\n            if (dims.left === undefined) {\n                // Event on the left side of the first axis.\n                dims.i = 0;\n                dims.left = pc.getOrderedDimensionKeys()[0];\n                dims.right = pc.getOrderedDimensionKeys()[1];\n            } else if (dims.right === undefined) {\n                // Event on the right side of the last axis\n                dims.i = keys(__.dimensions).length - 1;\n                dims.right = dims.left;\n                dims.left = pc.getOrderedDimensionKeys()[\n                keys(__.dimensions).length - 2\n                    ];\n            }\n\n            return dims;\n        }\n\n        function onDragStart() {\n            // First we need to determine between which two axes the arc was started.\n            // This will determine the freedom of movement, because a arc can\n            // logically only happen between two axes, so no movement outside these axes\n            // should be allowed.\n            return function () {\n                let p = mouse(strumRect.node()),\n                    dims,\n                    arc;\n\n                p[0] = p[0] - __.margin.left;\n                p[1] = p[1] - __.margin.top;\n\n                (dims = dimensionsForPoint(p)),\n                    (arc = {\n                        p1: p,\n                        dims: dims,\n                        minX: xscale(dims.left),\n                        maxX: xscale(dims.right),\n                        minY: 0,\n                        maxY: h(),\n                        startAngle: undefined,\n                        endAngle: undefined,\n                        arc: d3Arc().innerRadius(0),\n                    });\n\n                arcs[dims.i] = arc;\n                arcs.active = dims.i;\n\n                // Make sure that the point is within the bounds\n                arc.p1[0] = Math.min(Math.max(arc.minX, p[0]), arc.maxX);\n                arc.p2 = arc.p1.slice();\n                arc.p3 = arc.p1.slice();\n            };\n        }\n\n        function onDrag() {\n            return function () {\n                let ev = event,\n                    arc = arcs[arcs.active];\n\n                // Make sure that the point is within the bounds\n                arc.p2[0] = Math.min(\n                    Math.max(arc.minX + 1, ev.x - __.margin.left),\n                    arc.maxX\n                );\n                arc.p2[1] = Math.min(\n                    Math.max(arc.minY, ev.y - __.margin.top),\n                    arc.maxY\n                );\n                arc.p3 = arc.p2.slice();\n                // console.log(arcs.angle(arcs.active));\n                // console.log(signedAngle(arcs.unsignedAngle(arcs.active)));\n                drawStrum(arc, 1);\n            };\n        }\n\n        // some helper functions\n        function hypothenuse(a, b) {\n            return Math.sqrt(a * a + b * b);\n        }\n\n        let rad = (function () {\n            let c = Math.PI / 180;\n            return function (angle) {\n                return angle * c;\n            };\n        })();\n\n        let deg = (function () {\n            let c = 180 / Math.PI;\n            return function (angle) {\n                return angle * c;\n            };\n        })();\n\n        // [0, 2*PI] -> [-PI/2, PI/2]\n        let signedAngle = function (angle) {\n            let ret = angle;\n            if (angle > Math.PI) {\n                ret = angle - 1.5 * Math.PI;\n                ret = angle - 1.5 * Math.PI;\n            } else {\n                ret = angle - 0.5 * Math.PI;\n                ret = angle - 0.5 * Math.PI;\n            }\n            return -ret;\n        };\n\n        /**\n         * angles are stored in radians from in [0, 2*PI], where 0 in 12 o'clock.\n         * However, one can only select lines from 0 to PI, so we compute the\n         * 'signed' angle, where 0 is the horizontal line (3 o'clock), and +/- PI/2\n         * are 12 and 6 o'clock respectively.\n         */\n        function containmentTest(arc) {\n            let startAngle = signedAngle(arc.startAngle);\n            let endAngle = signedAngle(arc.endAngle);\n\n            if (startAngle > endAngle) {\n                let tmp = startAngle;\n                startAngle = endAngle;\n                endAngle = tmp;\n            }\n\n            // test if segment angle is contained in angle interval\n            return function (a) {\n                if (a >= startAngle && a <= endAngle) {\n                    return true;\n                }\n\n                return false;\n            };\n        }\n\n        function selected() {\n            let ids = Object.getOwnPropertyNames(arcs),\n                brushed = __.data;\n\n            // Get the ids of the currently active arcs.\n            ids = ids.filter(function (d) {\n                return !isNaN(d);\n            });\n\n            function crossesStrum(d, id) {\n                let arc = arcs[id],\n                    test = containmentTest(arc),\n                    d1 = arc.dims.left,\n                    d2 = arc.dims.right,\n                    y1 = __.dimensions[d1].yscale,\n                    y2 = __.dimensions[d2].yscale,\n                    a = arcs.width(id),\n                    b = y1(d[d1]) - y2(d[d2]),\n                    c = hypothenuse(a, b),\n                    angle = Math.asin(b / c); // rad in [-PI/2, PI/2]\n                return test(angle);\n            }\n\n            if (ids.length === 0) {\n                return brushed;\n            }\n\n            return brushed.filter(function (d) {\n                switch (brush.predicate) {\n                    case 'AND':\n                        return ids.every(function (id) {\n                            return crossesStrum(d, id);\n                        });\n                    case 'OR':\n                        return ids.some(function (id) {\n                            return crossesStrum(d, id);\n                        });\n                    default:\n                        throw new Error('Unknown brush predicate ' + __.brushPredicate);\n                }\n            });\n        }\n\n        function removeStrum() {\n            let arc = arcs[arcs.active],\n                svg = pc.selection.select('svg').select('g#arcs');\n\n            delete arcs[arcs.active];\n            arcs.active = undefined;\n            svg.selectAll('line#arc-' + arc.dims.i).remove();\n            svg.selectAll('circle#arc-' + arc.dims.i).remove();\n            svg.selectAll('path#arc-' + arc.dims.i).remove();\n        }\n\n        function onDragEnd() {\n            return function () {\n                let brushed = __.data,\n                    arc = arcs[arcs.active];\n\n                // Okay, somewhat unexpected, but not totally unsurprising, a mousclick is\n                // considered a drag without move. So we have to deal with that case\n                if (arc && arc.p1[0] === arc.p2[0] && arc.p1[1] === arc.p2[1]) {\n                    removeStrum(arcs);\n                }\n\n                if (arc) {\n                    let angle = arcs.startAngle(arcs.active);\n\n                    arc.startAngle = angle;\n                    arc.endAngle = angle;\n                    arc.arc\n                        .outerRadius(arcs.length(arcs.active))\n                        .startAngle(angle)\n                        .endAngle(angle);\n                }\n\n                brushed = selected(arcs);\n                arcs.active = undefined;\n                __.brushed = brushed;\n                pc.renderBrushed();\n                events.call('brushend', pc, __.brushed);\n            };\n        }\n\n        function brushReset(arcs) {\n            return function () {\n                let ids = Object.getOwnPropertyNames(arcs).filter(function (d) {\n                    return !isNaN(d);\n                });\n\n                ids.forEach(function (d) {\n                    arcs.active = d;\n                    removeStrum(arcs);\n                });\n                onDragEnd(arcs)();\n            };\n        }\n\n        function install() {\n            if (!g) pc.createAxes();\n\n            let _drag = drag();\n\n            // Map of current arcs. arcs are stored per segment of the PC. A segment,\n            // being the area between two axes. The left most area is indexed at 0.\n            arcs.active = undefined;\n            // Returns the width of the PC segment where currently a arc is being\n            // placed. NOTE: even though they are evenly spaced in our current\n            // implementation, we keep for when non-even spaced segments are supported as\n            // well.\n            arcs.width = function (id) {\n                let arc = arcs[id];\n\n                if (arc === undefined) {\n                    return undefined;\n                }\n\n                return arc.maxX - arc.minX;\n            };\n\n            // returns angles in [-PI/2, PI/2]\n            let angle = function (p1, p2) {\n                let a = p1[0] - p2[0],\n                    b = p1[1] - p2[1],\n                    c = hypothenuse(a, b);\n\n                return Math.asin(b / c);\n            };\n\n            // returns angles in [0, 2 * PI]\n            arcs.endAngle = function (id) {\n                let arc = arcs[id];\n                if (arc === undefined) {\n                    return undefined;\n                }\n                let sAngle = angle(arc.p1, arc.p2),\n                    uAngle = -sAngle + Math.PI / 2;\n\n                if (arc.p1[0] > arc.p2[0]) {\n                    uAngle = 2 * Math.PI - uAngle;\n                }\n\n                return uAngle;\n            };\n\n            arcs.startAngle = function (id) {\n                let arc = arcs[id];\n                if (arc === undefined) {\n                    return undefined;\n                }\n\n                let sAngle = angle(arc.p1, arc.p3),\n                    uAngle = -sAngle + Math.PI / 2;\n\n                if (arc.p1[0] > arc.p3[0]) {\n                    uAngle = 2 * Math.PI - uAngle;\n                }\n\n                return uAngle;\n            };\n\n            arcs.length = function (id) {\n                let arc = arcs[id];\n\n                if (arc === undefined) {\n                    return undefined;\n                }\n\n                let a = arc.p1[0] - arc.p2[0],\n                    b = arc.p1[1] - arc.p2[1],\n                    c = hypothenuse(a, b);\n\n                return c;\n            };\n\n            pc.on('axesreorder.arcs', function () {\n                let ids = Object.getOwnPropertyNames(arcs).filter(function (d) {\n                    return !isNaN(d);\n                });\n\n                // Checks if the first dimension is directly left of the second dimension.\n                function consecutive(first, second) {\n                    let length = keys(__.dimensions).length;\n                    return keys(__.dimensions).some(function (d, i) {\n                        return d === first\n                            ? i + i < length && __.dimensions[i + 1] === second\n                            : false;\n                    });\n                }\n\n                if (ids.length > 0) {\n                    // We have some arcs, which might need to be removed.\n                    ids.forEach(function (d) {\n                        let dims = arcs[d].dims;\n                        arcs.active = d;\n                        // If the two dimensions of the current arc are not next to each other\n                        // any more, than we'll need to remove the arc. Otherwise we keep it.\n                        if (!consecutive(dims.left, dims.right)) {\n                            removeStrum(arcs);\n                        }\n                    });\n                    onDragEnd(arcs)();\n                }\n            });\n\n            // Add a new svg group in which we draw the arcs.\n            pc.selection\n                .select('svg')\n                .append('g')\n                .attr('id', 'arcs')\n                .attr(\n                    'transform',\n                    'translate(' + __.margin.left + ',' + __.margin.top + ')'\n                );\n\n            // Install the required brushReset function\n            pc.brushReset = brushReset(arcs);\n\n            _drag\n                .on('start', onDragStart(arcs))\n                .on('drag', onDrag(arcs))\n                .on('end', onDragEnd(arcs));\n\n            // NOTE: The styling needs to be done here and not in the css. This is because\n            //       for 1D brushing, the canvas layers should not listen to\n            //       pointer-events._.\n            strumRect = pc.selection\n                .select('svg')\n                .insert('rect', 'g#arcs')\n                .attr('id', 'arc-events')\n                .attr('x', __.margin.left)\n                .attr('y', __.margin.top)\n                .attr('width', w())\n                .attr('height', h() + 2)\n                .style('opacity', 0)\n                .call(_drag);\n        }\n\n        brush.modes['angular'] = {\n            install: install,\n            uninstall: function () {\n                pc.selection\n                    .select('svg')\n                    .select('g#arcs')\n                    .remove();\n                pc.selection\n                    .select('svg')\n                    .select('rect#arc-events')\n                    .remove();\n                pc.on('axesreorder.arcs', undefined);\n                delete pc.brushReset;\n\n                strumRect = undefined;\n            },\n            selected: selected,\n            brushState: function () {\n                return arcs;\n            },\n        };\n    };\n\n    pc.interactive = function () {\n        flags.interactive = true;\n        return this;\n    };\n\n    // expose a few objects\n    pc.xscale = xscale;\n    pc.ctx = ctx;\n    pc.canvas = canvas;\n    pc.g = function () {\n        return g;\n    };\n\n    // rescale for height, width and margins\n    // TODO currently assumes chart is brushable, and destroys old brushes\n    pc.resize = function () {\n        // selection size\n        pc.selection\n            .select('svg')\n            .attr('width', __.width)\n            .attr('height', __.height);\n        pc.svg.attr(\n            'transform',\n            'translate(' + __.margin.left + ',' + __.margin.top + ')'\n        );\n\n        // FIXME: the current brush state should pass through\n        if (flags.brushable) pc.brushReset();\n\n        // scales\n        pc.autoscale();\n\n        // axes, destroys old brushes.\n        if (g) pc.createAxes();\n        if (flags.brushable) pc.brushable();\n        if (flags.reorderable) pc.reorderable();\n\n        events.call('resize', this, {\n            width: __.width,\n            height: __.height,\n            margin: __.margin,\n        });\n        return this;\n    };\n\n    // highlight an array of data\n    pc.highlight = function (data) {\n        if (arguments.length === 0) {\n            return __.highlighted;\n        }\n\n        __.highlighted = data;\n        pc.clear('highlight');\n        selectAll([canvas.foreground, canvas.brushed]).classed('faded', true);\n        data.forEach(path_highlight);\n        events.call('highlight', this, data);\n        return this;\n    };\n\n    // clear highlighting\n    pc.unhighlight = function () {\n        __.highlighted = [];\n        pc.clear('highlight');\n        selectAll([canvas.foreground, canvas.brushed]).classed('faded', false);\n        return this;\n    };\n\n    // calculate 2d intersection of line a->b with line c->d\n    // points are objects with x and y properties\n    pc.intersection = function (a, b, c, d) {\n        return {\n            x:\n            ((a.x * b.y - a.y * b.x) * (c.x - d.x) -\n                (a.x - b.x) * (c.x * d.y - c.y * d.x)) /\n            ((a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x)),\n            y:\n            ((a.x * b.y - a.y * b.x) * (c.y - d.y) -\n                (a.y - b.y) * (c.x * d.y - c.y * d.x)) /\n            ((a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x)),\n        };\n    };\n\n    function position(d) {\n        if (xscale.range().length === 0) {\n            xscale.range([0, w()], 1);\n        }\n        let v = dragging[d];\n        return v == null ? xscale(d) : v;\n    }\n\n    // Merges the canvases and SVG elements into one canvas element which is then passed into the callback\n    // (so you can choose to save it to disk, etc.)\n    pc.mergeParcoords = function (callback) {\n        // Retina display, etc.\n        let devicePixelRatio = window.devicePixelRatio || 1;\n\n        // Create a canvas element to store the merged canvases\n        let mergedCanvas = document.createElement('canvas');\n        mergedCanvas.width = pc.canvas.foreground.clientWidth * devicePixelRatio;\n        mergedCanvas.height =\n            (pc.canvas.foreground.clientHeight + 30) * devicePixelRatio;\n        mergedCanvas.style.width = mergedCanvas.width / devicePixelRatio + 'px';\n        mergedCanvas.style.height = mergedCanvas.height / devicePixelRatio + 'px';\n\n        // Give the canvas a white background\n        let context = mergedCanvas.getContext('2d');\n        context.fillStyle = '#ffffff';\n        context.fillRect(0, 0, mergedCanvas.width, mergedCanvas.height);\n\n        // Merge all the canvases\n        for (let key in pc.canvas) {\n            context.drawImage(\n                pc.canvas[key],\n                0,\n                24 * devicePixelRatio,\n                mergedCanvas.width,\n                mergedCanvas.height - 30 * devicePixelRatio\n            );\n        }\n\n        // Add SVG elements to canvas\n        let DOMURL = window.URL || window.webkitURL || window;\n        let serializer = new XMLSerializer();\n        let svgStr = serializer.serializeToString(\n            pc.selection.select('svg').node()\n        );\n\n        // Create a Data URI.\n        let src = 'data:image/svg+xml;base64,' + window.btoa(svgStr);\n        let img = new Image();\n        img.onload = function () {\n            context.drawImage(\n                img,\n                0,\n                0,\n                img.width * devicePixelRatio,\n                img.height * devicePixelRatio\n            );\n            if (typeof callback === 'function') {\n                callback(mergedCanvas);\n            }\n        };\n        img.src = src;\n    };\n\n    install1DAxes();\n    install2DStrums();\n    installAngularBrush();\n\n    pc.version = '1.0.3';\n    // this descriptive text should live with other introspective methods\n    pc.toString = function () {\n        return (\n            'Parallel Coordinates: ' +\n            keys(__.dimensions).length +\n            ' dimensions (' +\n            keys(__.data[0]).length +\n            ' total) , ' +\n            __.data.length +\n            ' rows'\n        );\n    };\n\n    return pc;\n};\n\nexport default ParCoords;\n"],"names":["renderQueue","func","_queue","rq","data","render","valid","invalidate","doFrame","chunk","splice","_rate","map","slice","add","concat","rate","value","arguments","length","remaining","clear","_invalidate","extend","target","source","key","without","arr","items","forEach","el","d3_rebind","method","apply","_rebind","_functor","v","InitialState","top","right","bottom","left","ParCoords","__","config","dimensionTitles","warn","d","dimensions","title","pc","selection","select","width","node","clientWidth","height","clientHeight","layer","append","attr","canvas","getContext","svg","style","margin","eventTypes","keys","events","dispatch","w","h","flags","xscale","scalePoint","dragging","_line","line","axis","axisLeft","ticks","g","clusterCentroids","side_effects","on","foreground","globalCompositeOperation","brushed","globalAlpha","strokeStyle","resize","applyDimensionDefaults","domain","getOrderedDimensionKeys","sortDimensions","interactive","updateAxes","detectDimensions","autoscale","bundleDimension","hideAxis","compute_cluster_centroids","state","getset","obj","x","Object","prototype","toString","call","old","previous","getRange","nullValueSeparator","nullValueSeparatorPadding","defaultScales","k","_extent","extent","getTime","range","flipAxes","includes","tempDate","val","unshift","scaleTime","temp","scaleLinear","counts","p","undefined","getOwnPropertyNames","sort","tempArr","i","push","pop","categoricalRange","addBy","j","scaleOrdinal","yscale","type","devicePixelRatio","window","selectAll","color","lineWidth","composite","alpha","scale","brushedColor","highlight","flip","reverse","commonScale","global","t","scales","filter","reduce","a","b","dims","types","detectDimensionTypes","newDims","currIndex","orient","innerTickSize","outerTickSize","tickPadding","index","y","ascending","toType","match","toLowerCase","toTypeCoerceNumbers","parseFloat","col","isNaN","Number","parseInt","mode","renderBrushed","isBrushed","object","brush","currentMode","brushState","hasOwnProperty","default","path_foreground","foregroundQueue","queue","path_brushed","brushedQueue","clusterCounts","row","scaled","has","set","count","get","_map","compute_centroids","centroids","cols","position","$V","cx","cy","leftCentroid","rightCentroid","centroid","bundlingStrength","compute_real_centroids","realCentroids","compute_control_points","smoothness","cps","e","mid","diff","subtract","shadows","alphaOnBrushed","axisDots","_r","r","ctx","marks","startAngle","endAngle","Math","PI","min","pow","beginPath","arc","stroke","fill","single_curve","moveTo","showControlPoints","fillRect","bezierCurveTo","color_path","getNullPosition","log","single_path","lineTo","path_highlight","clearRect","fillStyle","flipAxisAndUpdatePCP","dimension","brushReset","parentElement","transition","duration","animationTime","rotateLabels","delta","event","deltaY","dimensionTitleRotation","preventDefault","dimensionLabels","createAxes","removeAxes","enter","each","axisElement","applyAxisConfig","text","axes","remove","g_data","exit","brushable","reorderable","brushMode","axisCfg","axisRight","axisTop","axisBottom","tickValues","tickSizeInner","tickSizeOuter","tickFormat","brushY","sourceEvent","ctrlKey","html","nodes","outerHTML","replace","brushes","dat","__data__","brushSelection","parentNode","move","selected","brushesToKeep","actives","extents","ranges","values","ranger","invert","ii","dimRange","dimDomain","within","category","categoryIndex","indexOf","categoryRangeValue","every","multiBrushData","idx","filtered","z","drag","__origin__","max","dx","reorder","rowdata","firstDim","sortDimensionsByRowData","reordered","highlighted","unhighlight","copy","positionSortedKeys","pixelDifference","localeCompare","adjacent_pairs","ret","modes","brushUpdated","newSelection","brushPredicate","predicate","String","toUpperCase","Error","brushModes","uninstall","install","install1DAxes","brushNodes","is_brushed","_brushRange","bandwidth","some","brushExtents","brushSelections","brushFor","_selector","brushRangeMax","_brush","stopPropagation","install2DStrums","strums","strumRect","drawStrum","strum","activePoint","_svg","id","points","p1","p2","circles","_drag","ev","minX","maxX","minY","maxY","onDragEnd","dimensionsForPoint","dim","next","onDragStart","mouse","active","onDrag","containmentTest","m1","b1","m2","b2","y1","y2","ids","crossesStrum","test","d1","d2","point","removeStrum","consecutive","first","second","insert","installAngularBrush","arcs","p3","_path","angle","d3Arc","innerRadius","hypothenuse","sqrt","rad","c","deg","signedAngle","tmp","asin","outerRadius","sAngle","uAngle","classed","intersection","mergeParcoords","callback","mergedCanvas","document","createElement","context","drawImage","DOMURL","URL","webkitURL","serializer","XMLSerializer","svgStr","serializeToString","src","btoa","img","Image","onload","version"],"mappings":"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"}