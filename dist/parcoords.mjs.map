{"version":3,"file":"parcoords.mjs","sources":["../src/util/renderQueue.js","../src/util/width.js","../src/brush/1d/brushExtents.js","../src/brush/1d/brushReset.js","../src/brush/1d/selected.js","../src/brush/1d/brushFor.js","../src/brush/1d/install.js","../src/brush/1d/uninstall.js","../src/brush/1d/index.js","../src/brush/strums/uninstall.js","../src/brush/strums/selected.js","../src/brush/strums/removeStrum.js","../src/brush/strums/onDragEnd.js","../src/brush/strums/onDrag.js","../src/util/height.js","../src/brush/dimensionsForPoint.js","../src/brush/strums/onDragStart.js","../src/brush/strums/brushReset.js","../src/brush/consecutive.js","../src/brush/strums/install.js","../src/brush/strums/index.js","../src/brush/angular/uninstall.js","../src/brush/angular/util/hypothenuse.js","../src/brush/angular/selected.js","../src/brush/angular/removeStrum.js","../src/brush/angular/onDragEnd.js","../src/brush/angular/onDrag.js","../src/brush/angular/onDragStart.js","../src/brush/angular/brushReset.js","../src/brush/angular/install.js","../src/brush/angular/index.js","../src/api/intersection.js","../src/api/mergeParcoords.js","../src/api/selected.js","../src/api/brushMode.js","../src/util/dimensionLabels.js","../src/util/flipAxisAndUpdatePCP.js","../src/util/rotateLabels.js","../src/api/updateAxes.js","../src/util/getRange.js","../src/api/autoscale.js","../src/api/brushable.js","../src/api/commonScale.js","../src/api/computeRealCentroids.js","../src/api/applyDimensionDefaults.js","../src/api/createAxes.js","../src/api/axisDots.js","../src/api/applyAxisConfig.js","../src/api/reorderable.js","../src/api/resize.js","../src/api/reorder.js","../src/api/sortDimensions.js","../src/api/sortDimensionsByRowData.js","../src/util/isBrushed.js","../src/api/clear.js","../src/util/computeCentroids.js","../src/util/computeControlPoints.js","../src/util/colorPath.js","../src/util/functor.js","../src/api/renderBrushed.js","../src/api/brushReset.js","../src/api/toType.js","../src/api/toString.js","../src/api/adjacentPairs.js","../src/api/highlight.js","../src/api/unhighlight.js","../src/api/removeAxes.js","../src/api/render.js","../src/api/renderDefault.js","../src/api/toTypeCoerceNumbers.js","../src/api/detectDimensionTypes.js","../src/api/getOrderedDimensionKeys.js","../src/api/interactive.js","../src/api/shadows.js","../src/api/init.js","../src/api/flip.js","../src/api/detectDimensions.js","../src/api/scale.js","../src/state/defaultConfig.js","../src/state/index.js","../src/util/computeClusterCentroids.js","../src/state/sideEffects.js","../src/util/getset.js","../src/bindEvents.js","../src/index.js"],"sourcesContent":["import 'requestanimationframe';\n\nconst renderQueue = function(func) {\n  let _queue = [], // data to be rendered\n    _rate = 1000, // number of calls per frame\n    _invalidate = function() {}, // invalidate last render queue\n    _clear = function() {}; // clearing function\n\n  let rq = function(data) {\n    if (data) rq.data(data);\n    _invalidate();\n    _clear();\n    rq.render();\n  };\n\n  rq.render = function() {\n    let valid = true;\n    _invalidate = rq.invalidate = function() {\n      valid = false;\n    };\n\n    function doFrame() {\n      if (!valid) return true;\n      let chunk = _queue.splice(0, _rate);\n      chunk.map(func);\n      requestAnimationFrame(doFrame);\n    }\n\n    doFrame();\n  };\n\n  rq.data = function(data) {\n    _invalidate();\n    _queue = data.slice(0); // creates a copy of the data\n    return rq;\n  };\n\n  rq.add = function(data) {\n    _queue = _queue.concat(data);\n  };\n\n  rq.rate = function(value) {\n    if (!arguments.length) return _rate;\n    _rate = value;\n    return rq;\n  };\n\n  rq.remaining = function() {\n    return _queue.length;\n  };\n\n  // clear the canvas\n  rq.clear = function(func) {\n    if (!arguments.length) {\n      _clear();\n      return rq;\n    }\n    _clear = func;\n    return rq;\n  };\n\n  rq.invalidate = _invalidate;\n\n  return rq;\n};\n\nexport default renderQueue;\n","const w = config => config.width - config.margin.right - config.margin.left;\n\nexport default w;\n","import { keys } from 'd3-collection';\nimport { select } from 'd3-selection';\nimport { brushSelection } from 'd3-brush';\n\nconst brushExtents = (state, config, pc) => extents => {\n  const { brushes, brushNodes } = state;\n\n  if (typeof extents === 'undefined') {\n    return keys(config.dimensions).reduce((acc, cur) => {\n      const brush = brushes[cur];\n      //todo: brush check\n      if (brush !== undefined && brushSelection(brushNodes[cur]) !== null) {\n        acc[d] = brush.extent();\n      }\n\n      return acc;\n    }, {});\n  } else {\n    //first get all the brush selections\n    const brushSelections = {};\n    pc\n      .g()\n      .selectAll('.brush')\n      .each(function(d) {\n        brushSelections[d] = select(this);\n      });\n\n    // loop over each dimension and update appropriately (if it was passed in through extents)\n    keys(config.dimensions).forEach(d => {\n      if (extents[d] === undefined) {\n        return;\n      }\n\n      const brush = brushes[d];\n      if (brush !== undefined) {\n        const dim = config.dimensions[d];\n        const yExtent = extents[d].map(dim.yscale);\n\n        //update the extent\n        //sets the brushable extent to the specified array of points [[x0, y0], [x1, y1]]\n        brush.extent([[-15, yExtent[1]], [15, yExtent[0]]]);\n\n        //redraw the brush\n        //https://github.com/d3/d3-brush#brush_move\n        // For an x-brush, it must be defined as [x0, x1]; for a y-brush, it must be defined as [y0, y1].\n        brushSelections[d].call(brush).call(brush.move, yExtent.reverse());\n\n        //fire some events\n        // brush.event(brushSelections[d]);\n      }\n    });\n\n    //redraw the chart\n    pc.renderBrushed();\n\n    return pc;\n  }\n};\n\nexport default brushExtents;\n","import { select } from 'd3-selection';\n\nconst brushReset = (state, config, pc) => dimension => {\n  const { brushes } = state;\n\n  if (dimension === undefined) {\n    config.brushed = false;\n    if (pc.g() !== undefined && pc.g() !== null) {\n      pc\n        .g()\n        .selectAll('.brush')\n        .each(function(d) {\n          select(this).call(brushes[d].move, null);\n        });\n      pc.renderBrushed();\n    }\n  } else {\n    if (pc.g() !== undefined && pc.g() !== null) {\n      pc\n        .g()\n        .selectAll('.brush')\n        .each(function(d) {\n          if (d != dimension) return;\n          select(this).call(brushes[d].move, null);\n          brushes[d].event(select(this));\n        });\n      pc.renderBrushed();\n    }\n  }\n  return this;\n};\n\nexport default brushReset;\n","import { brushSelection } from 'd3-brush';\n//https://github.com/d3/d3-brush/issues/10\nimport { keys } from 'd3-collection';\n\n// data within extents\nconst selected = (state, config, brushGroup) => () => {\n  const { brushNodes } = state;\n  const is_brushed = p => brushSelection(brushNodes[p]) !== null;\n\n  const actives = keys(config.dimensions).filter(is_brushed);\n  const extents = actives.map(p => {\n    const _brushRange = brushSelection(brushNodes[p]);\n\n    if (typeof config.dimensions[p].yscale.invert === 'function') {\n      return [\n        config.dimensions[p].yscale.invert(_brushRange[1]),\n        config.dimensions[p].yscale.invert(_brushRange[0]),\n      ];\n    } else {\n      return _brushRange;\n    }\n  });\n  // We don't want to return the full data set when there are no axes brushed.\n  // Actually, when there are no axes brushed, by definition, no items are\n  // selected. So, let's avoid the filtering and just return false.\n  //if (actives.length === 0) return false;\n\n  // Resolves broken examples for now. They expect to get the full dataset back from empty brushes\n  if (actives.length === 0) return config.data;\n\n  // test if within range\n  const within = {\n    date: (d, p, dimension) => {\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\n        // if it is ordinal\n        return (\n          extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\n          config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n        );\n      } else {\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\n      }\n    },\n    number: (d, p, dimension) => {\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\n        // if it is ordinal\n        return (\n          extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\n          config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n        );\n      } else {\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\n      }\n    },\n    string: (d, p, dimension) => {\n      return (\n        extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\n        config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\n      );\n    },\n  };\n\n  return config.data.filter(d => {\n    switch (brushGroup.predicate) {\n      case 'AND':\n        return actives.every(function(p, dimension) {\n          return within[config.dimensions[p].type](d, p, dimension);\n        });\n      case 'OR':\n        return actives.some(function(p, dimension) {\n          return within[config.dimensions[p].type](d, p, dimension);\n        });\n      default:\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\n    }\n  });\n};\n\nexport default selected;\n","import { brushY } from 'd3-brush';\nimport { event } from 'd3-selection';\n\nimport selected from './selected';\n\nconst brushUpdated = (config, pc, events) => newSelection => {\n  config.brushed = newSelection;\n  events.call('brush', pc, config.brushed);\n  pc.renderBrushed();\n};\n\nconst brushFor = (state, config, pc, events, brushGroup) => (\n  axis,\n  _selector\n) => {\n  const brushRangeMax =\n    config.dimensions[axis].type === 'string'\n      ? config.dimensions[axis].yscale.range()[\n          config.dimensions[axis].yscale.range().length - 1\n        ]\n      : config.dimensions[axis].yscale.range()[0];\n\n  const _brush = brushY(_selector).extent([[-15, 0], [15, brushRangeMax]]);\n\n  _brush\n    .on('start', function() {\n      if (event.sourceEvent !== null) {\n        events.call('brushstart', pc, config.brushed);\n        event.sourceEvent.stopPropagation();\n      }\n    })\n    .on('brush', function() {\n      brushUpdated(config, pc, events)(selected(state, config, brushGroup)());\n    })\n    .on('end', function() {\n      brushUpdated(config, pc, events)(selected(state, config, brushGroup)());\n      events.call('brushend', pc, config.brushed);\n    });\n\n  state.brushes[axis] = _brush;\n  state.brushNodes[axis] = _selector.node();\n\n  return _brush;\n};\n\nexport default brushFor;\n","import { select } from 'd3-selection';\nimport brushExtents from './brushExtents';\nimport brushReset from './brushReset';\nimport brushFor from './brushFor';\n\nconst install = (state, config, pc, events, brushGroup) => () => {\n  if (!pc.g()) {\n    pc.createAxes();\n  }\n\n  // Add and store a brush for each axis.\n  const brush = pc\n    .g()\n    .append('svg:g')\n    .attr('class', 'brush')\n    .each(function(d) {\n      select(this).call(\n        brushFor(state, config, pc, events, brushGroup)(d, select(this))\n      );\n    });\n  brush\n    .selectAll('rect')\n    .style('visibility', null)\n    .attr('x', -15)\n    .attr('width', 30);\n\n  brush.selectAll('rect.background').style('fill', 'transparent');\n\n  brush\n    .selectAll('rect.extent')\n    .style('fill', 'rgba(255,255,255,0.25)')\n    .style('stroke', 'rgba(0,0,0,0.6)');\n\n  brush.selectAll('.resize rect').style('fill', 'rgba(0,0,0,0.1)');\n\n  pc.brushExtents = brushExtents(state, config, pc);\n  pc.brushReset = brushReset(state, config, pc);\n  return pc;\n};\n\nexport default install;\n","const uninstall = (state, pc) => () => {\n  if (pc.g() !== undefined && pc.g() !== null)\n    pc\n      .g()\n      .selectAll('.brush')\n      .remove();\n\n  state.brushes = {};\n  delete pc.brushExtents;\n  delete pc.brushReset;\n};\n\nexport default uninstall;\n","import brushExtents from './brushExtents';\nimport install from './install';\nimport selected from './selected';\nimport uninstall from './uninstall';\n\nconst BrushState = {\n  brushes: {},\n  brushNodes: {},\n};\n\nconst install1DAxes = (brushGroup, config, pc, events) => {\n  const state = Object.assign({}, BrushState);\n\n  brushGroup.modes['1D-axes'] = {\n    install: install(state, config, pc, events, brushGroup),\n    uninstall: uninstall(state, pc),\n    selected: selected(state, config, brushGroup),\n    brushState: brushExtents(state, config, pc),\n  };\n};\n\nexport default install1DAxes;\n","const uninstall = (state, pc) => () => {\n  pc.selection\n    .select('svg')\n    .select('g#strums')\n    .remove();\n  pc.selection\n    .select('svg')\n    .select('rect#strum-events')\n    .remove();\n  pc.on('axesreorder.strums', undefined);\n  delete pc.brushReset;\n\n  state.strumRect = undefined;\n};\n\nexport default uninstall;\n","// test if point falls between lines\nconst containmentTest = (strum, width) => p => {\n  const p1 = [strum.p1[0] - strum.minX, strum.p1[1] - strum.minX],\n    p2 = [strum.p2[0] - strum.minX, strum.p2[1] - strum.minX],\n    m1 = 1 - width / p1[0],\n    b1 = p1[1] * (1 - m1),\n    m2 = 1 - width / p2[0],\n    b2 = p2[1] * (1 - m2);\n\n  const x = p[0],\n    y = p[1],\n    y1 = m1 * x + b1,\n    y2 = m2 * x + b2;\n\n  return y > Math.min(y1, y2) && y < Math.max(y1, y2);\n};\n\nconst crossesStrum = (state, config) => (d, id) => {\n  let strum = state.strums[id],\n    test = containmentTest(strum, state.strums.width(id)),\n    d1 = strum.dims.left,\n    d2 = strum.dims.right,\n    y1 = config.dimensions[d1].yscale,\n    y2 = config.dimensions[d2].yscale,\n    point = [y1(d[d1]) - strum.minX, y2(d[d2]) - strum.minX];\n  return test(point);\n};\n\nconst selected = (brushGroup, state, config) => {\n  // Get the ids of the currently active strums.\n  const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d)),\n    brushed = config.data;\n\n  if (ids.length === 0) {\n    return brushed;\n  }\n\n  const crossTest = crossesStrum(state, config);\n\n  return brushed.filter(d => {\n    switch (brushGroup.predicate) {\n      case 'AND':\n        return ids.every(id => crossTest(d, id));\n      case 'OR':\n        return ids.some(id => crossTest(d, id));\n      default:\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\n    }\n  });\n};\n\nexport default selected;\n","const removeStrum = (state, pc) => {\n  const strum = state.strums[state.strums.active],\n    svg = pc.selection.select('svg').select('g#strums');\n\n  delete state.strums[state.strums.active];\n  svg.selectAll('line#strum-' + strum.dims.i).remove();\n  svg.selectAll('circle#strum-' + strum.dims.i).remove();\n};\n\nexport default removeStrum;\n","import selected from './selected';\nimport removeStrum from './removeStrum';\n\nconst onDragEnd = (brushGroup, state, config, pc, events) => () => {\n  const strum = state.strums[state.strums.active];\n\n  // Okay, somewhat unexpected, but not totally unsurprising, a mousclick is\n  // considered a drag without move. So we have to deal with that case\n  if (strum && strum.p1[0] === strum.p2[0] && strum.p1[1] === strum.p2[1]) {\n    removeStrum(state, pc);\n  }\n\n  const brushed = selected(brushGroup, state, config);\n  state.strums.active = undefined;\n  config.brushed = brushed;\n  pc.renderBrushed();\n  events.call('brushend', pc, config.brushed);\n};\n\nexport default onDragEnd;\n","import { event, select } from 'd3-selection';\nimport { drag } from 'd3-drag';\nimport onDragEnd from './onDragEnd';\n\nconst drawStrum = (\n  brushGroup,\n  state,\n  config,\n  pc,\n  events,\n  strum,\n  activePoint\n) => {\n  let _svg = pc.selection.select('svg').select('g#strums'),\n    id = strum.dims.i,\n    points = [strum.p1, strum.p2],\n    _line = _svg.selectAll('line#strum-' + id).data([strum]),\n    circles = _svg.selectAll('circle#strum-' + id).data(points),\n    _drag = drag();\n\n  _line\n    .enter()\n    .append('line')\n    .attr('id', 'strum-' + id)\n    .attr('class', 'strum');\n\n  _line\n    .attr('x1', d => d.p1[0])\n    .attr('y1', d => d.p1[1])\n    .attr('x2', d => d.p2[0])\n    .attr('y2', d => d.p2[1])\n    .attr('stroke', 'black')\n    .attr('stroke-width', 2);\n\n  _drag\n    .on('drag', function(d, i) {\n      const ev = event;\n      i = i + 1;\n      strum['p' + i][0] = Math.min(Math.max(strum.minX + 1, ev.x), strum.maxX);\n      strum['p' + i][1] = Math.min(Math.max(strum.minY, ev.y), strum.maxY);\n      drawStrum(brushGroup, state, config, pc, events, strum, i - 1);\n    })\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\n\n  circles\n    .enter()\n    .append('circle')\n    .attr('id', 'strum-' + id)\n    .attr('class', 'strum');\n\n  circles\n    .attr('cx', d => d[0])\n    .attr('cy', d => d[1])\n    .attr('r', 5)\n    .style(\n      'opacity',\n      (d, i) => (activePoint !== undefined && i === activePoint ? 0.8 : 0)\n    )\n    .on('mouseover', function() {\n      select(this).style('opacity', 0.8);\n    })\n    .on('mouseout', function() {\n      select(this).style('opacity', 0);\n    })\n    .call(_drag);\n};\n\nconst onDrag = (brushGroup, state, config, pc, events) => () => {\n  const ev = event,\n    strum = state.strums[state.strums.active];\n\n  // Make sure that the point is within the bounds\n  strum.p2[0] = Math.min(\n    Math.max(strum.minX + 1, ev.x - config.margin.left),\n    strum.maxX\n  );\n  strum.p2[1] = Math.min(\n    Math.max(strum.minY, ev.y - config.margin.top),\n    strum.maxY\n  );\n\n  drawStrum(brushGroup, state, config, pc, events, strum, 1);\n};\n\nexport default onDrag;\n","const h = config => config.height - config.margin.top - config.margin.bottom;\n\nexport default h;\n","import { keys } from 'd3-collection';\n\nconst dimensionsForPoint = (config, pc, xscale, p) => {\n  const dims = { i: -1, left: undefined, right: undefined };\n  keys(config.dimensions).some((dim, i) => {\n    if (xscale(dim) < p[0]) {\n      dims.i = i;\n      dims.left = dim;\n      dims.right = keys(config.dimensions)[\n        pc.getOrderedDimensionKeys().indexOf(dim) + 1\n      ];\n      return false;\n    }\n    return true;\n  });\n\n  if (dims.left === undefined) {\n    // Event on the left side of the first axis.\n    dims.i = 0;\n    dims.left = pc.getOrderedDimensionKeys()[0];\n    dims.right = pc.getOrderedDimensionKeys()[1];\n  } else if (dims.right === undefined) {\n    // Event on the right side of the last axis\n    dims.i = keys(config.dimensions).length - 1;\n    dims.right = dims.left;\n    dims.left = pc.getOrderedDimensionKeys()[\n      keys(config.dimensions).length - 2\n    ];\n  }\n\n  return dims;\n};\n\nexport default dimensionsForPoint;\n","import { mouse } from 'd3-selection';\nimport h from '../../util/height';\nimport dimensionsForPoint from '../dimensionsForPoint';\n\n// First we need to determine between which two axes the sturm was started.\n// This will determine the freedom of movement, because a strum can\n// logically only happen between two axes, so no movement outside these axes\n// should be allowed.\nconst onDragStart = (state, config, pc, xscale) => () => {\n  let p = mouse(state.strumRect.node());\n\n  p[0] = p[0] - config.margin.left;\n  p[1] = p[1] - config.margin.top;\n\n  const dims = dimensionsForPoint(config, pc, xscale, p);\n  const strum = {\n    p1: p,\n    dims: dims,\n    minX: xscale(dims.left),\n    maxX: xscale(dims.right),\n    minY: 0,\n    maxY: h(config),\n  };\n\n  // Make sure that the point is within the bounds\n  strum.p1[0] = Math.min(Math.max(strum.minX, p[0]), strum.maxX);\n  strum.p2 = strum.p1.slice();\n\n  state.strums[dims.i] = strum;\n  state.strums.active = dims.i;\n};\n\nexport default onDragStart;\n","import onDragEnd from './onDragEnd';\nimport removeStrum from './removeStrum';\n\nconst brushReset = (brushGroup, state, config, pc, events) => () => {\n  const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d));\n\n  ids.forEach(d => {\n    state.strums.active = d;\n    removeStrum(state, pc);\n  });\n  onDragEnd(brushGroup, state, config, pc, events)();\n};\n\nexport default brushReset;\n","// Checks if the first dimension is directly left of the second dimension.\nimport { keys } from 'd3-collection';\n\nconst consecutive = dimensions => (first, second) => {\n  const keys = keys(dimensions);\n\n  return keys.some(\n    (d, i) =>\n      d === first ? i + i < keys.length && dimensions[i + 1] === second : false\n  );\n};\n\nexport default consecutive;\n","import { drag } from 'd3-drag';\nimport onDragEnd from './onDragEnd';\nimport onDrag from './onDrag';\nimport onDragStart from './onDragStart';\nimport removeStrum from './removeStrum';\nimport brushReset from './brushReset';\nimport w from '../../util/width';\nimport h from '../../util/height';\nimport consecutive from '../consecutive';\n\nconst install = (brushGroup, state, config, pc, events, xscale) => () => {\n  if (pc.g() === undefined || pc.g() === null) {\n    pc.createAxes();\n  }\n\n  const _drag = drag();\n\n  // Map of current strums. Strums are stored per segment of the PC. A segment,\n  // being the area between two axes. The left most area is indexed at 0.\n  state.strums.active = undefined;\n  // Returns the width of the PC segment where currently a strum is being\n  // placed. NOTE: even though they are evenly spaced in our current\n  // implementation, we keep for when non-even spaced segments are supported as\n  // well.\n  state.strums.width = id =>\n    state.strums[id] === undefined\n      ? undefined\n      : state.strums[id].maxX - state.strums[id].minX;\n\n  pc.on('axesreorder.strums', () => {\n    const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d));\n\n    if (ids.length > 0) {\n      // We have some strums, which might need to be removed.\n      ids.forEach(d => {\n        const dims = state.strums[d].dims;\n        state.strums.active = d;\n        // If the two dimensions of the current strum are not next to each other\n        // any more, than we'll need to remove the strum. Otherwise we keep it.\n        if (!consecutive(config.dimensions)(dims.left, dims.right)) {\n          removeStrum(state, pc);\n        }\n      });\n      onDragEnd(brushGroup, state, config, pc, events)();\n    }\n  });\n\n  // Add a new svg group in which we draw the strums.\n  pc.selection\n    .select('svg')\n    .append('g')\n    .attr('id', 'strums')\n    .attr(\n      'transform',\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\n    );\n\n  // Install the required brushReset function\n  pc.brushReset = brushReset(brushGroup, state, config, pc, events);\n\n  _drag\n    .on('start', onDragStart(state, config, pc, xscale))\n    .on('drag', onDrag(brushGroup, state, config, pc, events))\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\n\n  // NOTE: The styling needs to be done here and not in the css. This is because\n  //       for 1D brushing, the canvas layers should not listen to\n  //       pointer-events._.\n  state.strumRect = pc.selection\n    .select('svg')\n    .insert('rect', 'g#strums')\n    .attr('id', 'strum-events')\n    .attr('x', config.margin.left)\n    .attr('y', config.margin.top)\n    .attr('width', w(config))\n    .attr('height', h(config) + 2)\n    .style('opacity', 0)\n    .call(_drag);\n};\n\nexport default install;\n","import uninstall from './uninstall';\nimport install from './install';\nimport selected from './selected';\n\nconst BrushState = {\n  strums: {},\n  strumRect: {},\n};\n\nconst install2DStrums = (brushGroup, config, pc, events, xscale) => {\n  const state = Object.assign({}, BrushState);\n\n  brushGroup.modes['2D-strums'] = {\n    install: install(brushGroup, state, config, pc, events, xscale),\n    uninstall: uninstall(state, pc),\n    selected: selected(brushGroup, state, config),\n    brushState: () => state.strums,\n  };\n};\n\nexport default install2DStrums;\n","const uninstall = (state, pc) => () => {\n  pc.selection\n    .select('svg')\n    .select('g#arcs')\n    .remove();\n  pc.selection\n    .select('svg')\n    .select('rect#arc-events')\n    .remove();\n  pc.on('axesreorder.arcs', undefined);\n\n  delete pc.brushReset;\n\n  state.strumRect = undefined;\n};\n\nexport default uninstall;\n","const hypothenuse = (a, b) => Math.sqrt(a * a + b * b);\n\nexport default hypothenuse;\n","import hypothenuse from './util/hypothenuse';\n\n// [0, 2*PI] -> [-PI/2, PI/2]\nconst signedAngle = angle =>\n  angle > Math.PI ? 1.5 * Math.PI - angle : 0.5 * Math.PI - angle;\n\n/**\n * angles are stored in radians from in [0, 2*PI], where 0 in 12 o'clock.\n * However, one can only select lines from 0 to PI, so we compute the\n * 'signed' angle, where 0 is the horizontal line (3 o'clock), and +/- PI/2\n * are 12 and 6 o'clock respectively.\n */\nconst containmentTest = arc => a => {\n  let startAngle = signedAngle(arc.startAngle);\n  let endAngle = signedAngle(arc.endAngle);\n\n  if (startAngle > endAngle) {\n    const tmp = startAngle;\n    startAngle = endAngle;\n    endAngle = tmp;\n  }\n\n  // test if segment angle is contained in angle interval\n  return a >= startAngle && a <= endAngle;\n};\n\nconst crossesStrum = (state, config) => (d, id) => {\n  const arc = state.arcs[id],\n    test = containmentTest(arc),\n    d1 = arc.dims.left,\n    d2 = arc.dims.right,\n    y1 = config.dimensions[d1].yscale,\n    y2 = config.dimensions[d2].yscale,\n    a = state.arcs.width(id),\n    b = y1(d[d1]) - y2(d[d2]),\n    c = hypothenuse(a, b),\n    angle = Math.asin(b / c); // rad in [-PI/2, PI/2]\n  return test(angle);\n};\n\nconst selected = (brushGroup, state, config) => {\n  const ids = Object.getOwnPropertyNames(state.arcs).filter(d => !isNaN(d));\n  const brushed = config.data;\n\n  if (ids.length === 0) {\n    return brushed;\n  }\n\n  const crossTest = crossesStrum(state, config);\n\n  return brushed.filter(d => {\n    switch (brushGroup.predicate) {\n      case 'AND':\n        return ids.every(id => crossTest(d, id));\n      case 'OR':\n        return ids.some(id => crossTest(d, id));\n      default:\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\n    }\n  });\n};\n\nexport default selected;\n","const removeStrum = (state, pc) => {\n  const arc = state.arcs[state.arcs.active],\n    svg = pc.selection.select('svg').select('g#arcs');\n\n  delete state.arcs[state.arcs.active];\n  state.arcs.active = undefined;\n  svg.selectAll('line#arc-' + arc.dims.i).remove();\n  svg.selectAll('circle#arc-' + arc.dims.i).remove();\n  svg.selectAll('path#arc-' + arc.dims.i).remove();\n};\n\nexport default removeStrum;\n","import selected from './selected';\nimport removeStrum from './removeStrum';\n\nconst onDragEnd = (brushGroup, state, config, pc, events) => () => {\n  const arc = state.arcs[state.arcs.active];\n\n  // Okay, somewhat unexpected, but not totally unsurprising, a mousclick is\n  // considered a drag without move. So we have to deal with that case\n  if (arc && arc.p1[0] === arc.p2[0] && arc.p1[1] === arc.p2[1]) {\n    removeStrum(state, pc);\n  }\n\n  if (arc) {\n    const angle = state.arcs.startAngle(state.arcs.active);\n\n    arc.startAngle = angle;\n    arc.endAngle = angle;\n    arc.arc\n      .outerRadius(state.arcs.length(state.arcs.active))\n      .startAngle(angle)\n      .endAngle(angle);\n  }\n\n  state.arcs.active = undefined;\n  config.brushed = selected(brushGroup, state, config);\n  pc.renderBrushed();\n  events.call('brushend', pc, config.brushed);\n};\n\nexport default onDragEnd;\n","import { event, select } from 'd3-selection';\nimport { drag } from 'd3-drag';\nimport onDragEnd from './onDragEnd';\n\nconst drawStrum = (brushGroup, state, config, pc, events, arc, activePoint) => {\n  const svg = pc.selection.select('svg').select('g#arcs'),\n    id = arc.dims.i,\n    points = [arc.p2, arc.p3],\n    _line = svg\n      .selectAll('line#arc-' + id)\n      .data([{ p1: arc.p1, p2: arc.p2 }, { p1: arc.p1, p2: arc.p3 }]),\n    circles = svg.selectAll('circle#arc-' + id).data(points),\n    _drag = drag(),\n    _path = svg.selectAll('path#arc-' + id).data([arc]);\n\n  _path\n    .enter()\n    .append('path')\n    .attr('id', 'arc-' + id)\n    .attr('class', 'arc')\n    .style('fill', 'orange')\n    .style('opacity', 0.5);\n\n  _path\n    .attr('d', arc.arc)\n    .attr('transform', 'translate(' + arc.p1[0] + ',' + arc.p1[1] + ')');\n\n  _line\n    .enter()\n    .append('line')\n    .attr('id', 'arc-' + id)\n    .attr('class', 'arc');\n\n  _line\n    .attr('x1', d => d.p1[0])\n    .attr('y1', d => d.p1[1])\n    .attr('x2', d => d.p2[0])\n    .attr('y2', d => d.p2[1])\n    .attr('stroke', 'black')\n    .attr('stroke-width', 2);\n\n  _drag\n    .on('drag', (d, i) => {\n      const ev = event;\n      i = i + 2;\n\n      arc['p' + i][0] = Math.min(Math.max(arc.minX + 1, ev.x), arc.maxX);\n      arc['p' + i][1] = Math.min(Math.max(arc.minY, ev.y), arc.maxY);\n\n      const angle =\n        i === 3 ? state.arcs.startAngle(id) : state.arcs.endAngle(id);\n\n      if (\n        (arc.startAngle < Math.PI &&\n          arc.endAngle < Math.PI &&\n          angle < Math.PI) ||\n        (arc.startAngle >= Math.PI &&\n          arc.endAngle >= Math.PI &&\n          angle >= Math.PI)\n      ) {\n        if (i === 2) {\n          arc.endAngle = angle;\n          arc.arc.endAngle(angle);\n        } else if (i === 3) {\n          arc.startAngle = angle;\n          arc.arc.startAngle(angle);\n        }\n      }\n\n      drawStrum(brushGroup, state, config, pc, events, arc, i - 2);\n    })\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\n\n  circles\n    .enter()\n    .append('circle')\n    .attr('id', 'arc-' + id)\n    .attr('class', 'arc');\n\n  circles\n    .attr('cx', d => d[0])\n    .attr('cy', d => d[1])\n    .attr('r', 5)\n    .style(\n      'opacity',\n      (d, i) => (activePoint !== undefined && i === activePoint ? 0.8 : 0)\n    )\n    .on('mouseover', function() {\n      select(this).style('opacity', 0.8);\n    })\n    .on('mouseout', function() {\n      select(this).style('opacity', 0);\n    })\n    .call(_drag);\n};\n\nconst onDrag = (brushGroup, state, config, pc, events) => () => {\n  const ev = event,\n    arc = state.arcs[state.arcs.active];\n\n  // Make sure that the point is within the bounds\n  arc.p2[0] = Math.min(\n    Math.max(arc.minX + 1, ev.x - config.margin.left),\n    arc.maxX\n  );\n  arc.p2[1] = Math.min(Math.max(arc.minY, ev.y - config.margin.top), arc.maxY);\n  arc.p3 = arc.p2.slice();\n  drawStrum(brushGroup, state, config, pc, events, arc, 1);\n};\n\nexport default onDrag;\n","import { mouse } from 'd3-selection';\nimport h from '../../util/height';\nimport { arc as d3Arc } from 'd3-shape';\nimport dimensionsForPoint from '../dimensionsForPoint';\n\n// First we need to determine between which two axes the arc was started.\n// This will determine the freedom of movement, because a arc can\n// logically only happen between two axes, so no movement outside these axes\n// should be allowed.\nconst onDragStart = (state, config, pc, xscale) => () => {\n  const p = mouse(state.strumRect.node());\n\n  p[0] = p[0] - config.margin.left;\n  p[1] = p[1] - config.margin.top;\n\n  const dims = dimensionsForPoint(config, pc, xscale, p);\n  const arc = {\n    p1: p,\n    dims: dims,\n    minX: xscale(dims.left),\n    maxX: xscale(dims.right),\n    minY: 0,\n    maxY: h(config),\n    startAngle: undefined,\n    endAngle: undefined,\n    arc: d3Arc().innerRadius(0),\n  };\n\n  // Make sure that the point is within the bounds\n  arc.p1[0] = Math.min(Math.max(arc.minX, p[0]), arc.maxX);\n  arc.p2 = arc.p1.slice();\n  arc.p3 = arc.p1.slice();\n\n  state.arcs[dims.i] = arc;\n  state.arcs.active = dims.i;\n};\n\nexport default onDragStart;\n","import onDragEnd from './onDragEnd';\nimport removeStrum from './removeStrum';\n\nconst brushReset = (brushGroup, state, config, pc, events) => () => {\n  const ids = Object.getOwnPropertyNames(state.arcs).filter(d => !isNaN(d));\n\n  ids.forEach(d => {\n    state.arcs.active = d;\n    removeStrum(state, pc);\n  });\n  onDragEnd(brushGroup, state, config, pc, events)();\n};\n\nexport default brushReset;\n","import { drag } from 'd3-drag';\nimport onDragEnd from './onDragEnd';\nimport onDrag from './onDrag';\nimport onDragStart from './onDragStart';\nimport removeStrum from './removeStrum';\nimport brushReset from './brushReset';\nimport w from '../../util/width';\nimport h from '../../util/height';\n\nimport hypothenuse from './util/hypothenuse';\nimport consecutive from '../consecutive';\n\n// returns angles in [-PI/2, PI/2]\nconst angle = (p1, p2) => {\n  const a = p1[0] - p2[0],\n    b = p1[1] - p2[1],\n    c = hypothenuse(a, b);\n\n  return Math.asin(b / c);\n};\n\nconst endAngle = state => id => {\n  const arc = state.arcs[id];\n  if (arc === undefined) {\n    return undefined;\n  }\n  let sAngle = angle(arc.p1, arc.p2),\n    uAngle = -sAngle + Math.PI / 2;\n\n  if (arc.p1[0] > arc.p2[0]) {\n    uAngle = 2 * Math.PI - uAngle;\n  }\n\n  return uAngle;\n};\n\nconst startAngle = state => id => {\n  const arc = state.arcs[id];\n  if (arc === undefined) {\n    return undefined;\n  }\n\n  let sAngle = angle(arc.p1, arc.p3),\n    uAngle = -sAngle + Math.PI / 2;\n\n  if (arc.p1[0] > arc.p3[0]) {\n    uAngle = 2 * Math.PI - uAngle;\n  }\n\n  return uAngle;\n};\n\nconst length = state => id => {\n  const arc = state.arcs[id];\n\n  if (arc === undefined) {\n    return undefined;\n  }\n\n  const a = arc.p1[0] - arc.p2[0],\n    b = arc.p1[1] - arc.p2[1];\n\n  return hypothenuse(a, b);\n};\n\nconst install = (brushGroup, state, config, pc, events, xscale) => () => {\n  if (!pc.g()) {\n    pc.createAxes();\n  }\n\n  const _drag = drag();\n\n  // Map of current arcs. arcs are stored per segment of the PC. A segment,\n  // being the area between two axes. The left most area is indexed at 0.\n  state.arcs.active = undefined;\n  // Returns the width of the PC segment where currently a arc is being\n  // placed. NOTE: even though they are evenly spaced in our current\n  // implementation, we keep for when non-even spaced segments are supported as\n  // well.\n  state.arcs.width = id => {\n    const arc = state.arcs[id];\n    return arc === undefined ? undefined : arc.maxX - arc.minX;\n  };\n\n  // returns angles in [0, 2 * PI]\n  state.arcs.endAngle = endAngle(state);\n  state.arcs.startAngle = startAngle(state);\n  state.arcs.length = length(state);\n\n  pc.on('axesreorder.arcs', () => {\n    const ids = Object.getOwnPropertyNames(arcs).filter(d => !isNaN(d));\n\n    if (ids.length > 0) {\n      // We have some arcs, which might need to be removed.\n      ids.forEach(d => {\n        const dims = arcs[d].dims;\n        state.arcs.active = d;\n        // If the two dimensions of the current arc are not next to each other\n        // any more, than we'll need to remove the arc. Otherwise we keep it.\n        if (!consecutive(dims)(dims.left, dims.right)) {\n          removeStrum(state, pc);\n        }\n      });\n      onDragEnd(brushGroup, state, config, pc, events)();\n    }\n  });\n\n  // Add a new svg group in which we draw the arcs.\n  pc.selection\n    .select('svg')\n    .append('g')\n    .attr('id', 'arcs')\n    .attr(\n      'transform',\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\n    );\n\n  // Install the required brushReset function\n  pc.brushReset = brushReset(brushGroup, state, config, pc, events);\n\n  _drag\n    .on('start', onDragStart(state, config, pc, xscale))\n    .on('drag', onDrag(brushGroup, state, config, pc, events))\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\n\n  // NOTE: The styling needs to be done here and not in the css. This is because\n  //       for 1D brushing, the canvas layers should not listen to\n  //       pointer-events._.\n  state.strumRect = pc.selection\n    .select('svg')\n    .insert('rect', 'g#arcs')\n    .attr('id', 'arc-events')\n    .attr('x', config.margin.left)\n    .attr('y', config.margin.top)\n    .attr('width', w(config))\n    .attr('height', h(config) + 2)\n    .style('opacity', 0)\n    .call(_drag);\n};\n\nexport default install;\n","import uninstall from './uninstall';\nimport install from './install';\nimport selected from './selected';\n\nconst BrushState = {\n  arcs: {},\n  strumRect: {},\n};\n\nconst installAngularBrush = (brushGroup, config, pc, events, xscale) => {\n  const state = Object.assign({}, BrushState);\n\n  brushGroup.modes['angular'] = {\n    install: install(brushGroup, state, config, pc, events, xscale),\n    uninstall: uninstall(state, pc),\n    selected: selected(brushGroup, state, config),\n    brushState: () => state.arcs,\n  };\n};\n\nexport default installAngularBrush;\n","// calculate 2d intersection of line a->b with line c->d\n// points are objects with x and y properties\nconst intersection = (a, b, c, d) => {\n  return {\n    x:\n      ((a.x * b.y - a.y * b.x) * (c.x - d.x) -\n        (a.x - b.x) * (c.x * d.y - c.y * d.x)) /\n      ((a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x)),\n    y:\n      ((a.x * b.y - a.y * b.x) * (c.y - d.y) -\n        (a.y - b.y) * (c.x * d.y - c.y * d.x)) /\n      ((a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x)),\n  };\n};\n\nexport default intersection;\n","// Merges the canvases and SVG elements into one canvas element which is then passed into the callback\n// (so you can choose to save it to disk, etc.)\nconst mergeParcoords = pc => callback => {\n  // Retina display, etc.\n  const devicePixelRatio = window.devicePixelRatio || 1;\n\n  // Create a canvas element to store the merged canvases\n  const mergedCanvas = document.createElement('canvas');\n  mergedCanvas.width = pc.canvas.foreground.clientWidth * devicePixelRatio;\n  mergedCanvas.height =\n    (pc.canvas.foreground.clientHeight + 30) * devicePixelRatio;\n  mergedCanvas.style.width = mergedCanvas.width / devicePixelRatio + 'px';\n  mergedCanvas.style.height = mergedCanvas.height / devicePixelRatio + 'px';\n\n  // Give the canvas a white background\n  const context = mergedCanvas.getContext('2d');\n  context.fillStyle = '#ffffff';\n  context.fillRect(0, 0, mergedCanvas.width, mergedCanvas.height);\n\n  // Merge all the canvases\n  for (const key in pc.canvas) {\n    context.drawImage(\n      pc.canvas[key],\n      0,\n      24 * devicePixelRatio,\n      mergedCanvas.width,\n      mergedCanvas.height - 30 * devicePixelRatio\n    );\n  }\n\n  // Add SVG elements to canvas\n  const DOMURL = window.URL || window.webkitURL || window;\n  const serializer = new XMLSerializer();\n  const svgStr = serializer.serializeToString(\n    pc.selection.select('svg').node()\n  );\n\n  // Create a Data URI.\n  const src = 'data:image/svg+xml;base64,' + window.btoa(svgStr);\n  const img = new Image();\n  img.onload = () => {\n    context.drawImage(\n      img,\n      0,\n      0,\n      img.width * devicePixelRatio,\n      img.height * devicePixelRatio\n    );\n    if (typeof callback === 'function') {\n      callback(mergedCanvas);\n    }\n  };\n  img.src = src;\n};\n\nexport default mergeParcoords;\n","import { brushSelection } from 'd3-brush';\nimport { selectAll } from 'd3-selection';\n\nconst selected = config => {\n  let actives = [];\n  let extents = [];\n  let ranges = {};\n  //get brush selections from each node, convert to actual values\n  //invert order of values in array to comply with the parcoords architecture\n  if (config.brushes.length === 0) {\n    let nodes = selectAll('.brush').nodes();\n    for (let k = 0; k < nodes.length; k++) {\n      if (brushSelection(nodes[k]) !== null) {\n        actives.push(nodes[k].__data__);\n        let values = [];\n        let ranger = brushSelection(nodes[k]);\n        if (\n          typeof config.dimensions[nodes[k].__data__].yscale.domain()[0] ===\n          'number'\n        ) {\n          for (let i = 0; i < ranger.length; i++) {\n            if (\n              actives.includes(nodes[k].__data__) &&\n              config.flipAxes.includes(nodes[k].__data__)\n            ) {\n              values.push(\n                config.dimensions[nodes[k].__data__].yscale.invert(ranger[i])\n              );\n            } else if (config.dimensions[nodes[k].__data__].yscale() !== 1) {\n              values.unshift(\n                config.dimensions[nodes[k].__data__].yscale.invert(ranger[i])\n              );\n            }\n          }\n          extents.push(values);\n          for (let ii = 0; ii < extents.length; ii++) {\n            if (extents[ii].length === 0) {\n              extents[ii] = [1, 1];\n            }\n          }\n        } else {\n          ranges[nodes[k].__data__] = brushSelection(nodes[k]);\n          let dimRange = config.dimensions[nodes[k].__data__].yscale.range();\n          let dimDomain = config.dimensions[nodes[k].__data__].yscale.domain();\n          for (let j = 0; j < dimRange.length; j++) {\n            if (\n              dimRange[j] >= ranger[0] &&\n              dimRange[j] <= ranger[1] &&\n              actives.includes(nodes[k].__data__) &&\n              config.flipAxes.includes(nodes[k].__data__)\n            ) {\n              values.push(dimRange[j]);\n            } else if (dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) {\n              values.unshift(dimRange[j]);\n            }\n          }\n          extents.push(values);\n          for (let ii = 0; ii < extents.length; ii++) {\n            if (extents[ii].length === 0) {\n              extents[ii] = [1, 1];\n            }\n          }\n        }\n      }\n    }\n    // test if within range\n    const within = {\n      date: function(d, p, dimension) {\n        let category = d[p];\n        let categoryIndex = config.dimensions[p].yscale\n          .domain()\n          .indexOf(category);\n        let categoryRangeValue = config.dimensions[p].yscale.range()[\n          categoryIndex\n        ];\n        return (\n          categoryRangeValue >= ranges[p][0] &&\n          categoryRangeValue <= ranges[p][1]\n        );\n      },\n      number: function(d, p, dimension) {\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\n      },\n      string: function(d, p, dimension) {\n        let category = d[p];\n        let categoryIndex = config.dimensions[p].yscale\n          .domain()\n          .indexOf(category);\n        let categoryRangeValue = config.dimensions[p].yscale.range()[\n          categoryIndex\n        ];\n        return (\n          categoryRangeValue >= ranges[p][0] &&\n          categoryRangeValue <= ranges[p][1]\n        );\n      },\n    };\n    return config.data.filter(d =>\n      actives.every((p, dimension) =>\n        within[config.dimensions[p].type](d, p, dimension)\n      )\n    );\n  } else {\n    // need to get data from each brush instead of each axis\n    // first must find active axes by iterating through all brushes\n    // then go through similiar process as above.\n    let multiBrushData = [];\n    for (let idx = 0; idx < config.brushes.length; idx++) {\n      let brush = config.brushes[idx];\n      let values = [];\n      let ranger = brush.extent;\n      let actives = [brush.data];\n      if (\n        typeof config.dimensions[brush.data].yscale.domain()[0] === 'number'\n      ) {\n        for (let i = 0; i < ranger.length; i++) {\n          if (\n            actives.includes(brush.data) &&\n            config.flipAxes.includes(brush.data)\n          ) {\n            values.push(config.dimensions[brush.data].yscale.invert(ranger[i]));\n          } else if (config.dimensions[brush.data].yscale() !== 1) {\n            values.unshift(\n              config.dimensions[brush.data].yscale.invert(ranger[i])\n            );\n          }\n        }\n        extents.push(values);\n        for (let ii = 0; ii < extents.length; ii++) {\n          if (extents[ii].length === 0) {\n            extents[ii] = [1, 1];\n          }\n        }\n      } else {\n        ranges[brush.data] = brush.extent;\n        let dimRange = config.dimensions[brush.data].yscale.range();\n        let dimDomain = config.dimensions[brush.data].yscale.domain();\n        for (let j = 0; j < dimRange.length; j++) {\n          if (\n            dimRange[j] >= ranger[0] &&\n            dimRange[j] <= ranger[1] &&\n            actives.includes(brush.data) &&\n            config.flipAxes.includes(brush.data)\n          ) {\n            values.push(dimRange[j]);\n          } else if (dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) {\n            values.unshift(dimRange[j]);\n          }\n        }\n        extents.push(values);\n        for (let ii = 0; ii < extents.length; ii++) {\n          if (extents[ii].length === 0) {\n            extents[ii] = [1, 1];\n          }\n        }\n      }\n      let within = {\n        date: function(d, p, dimension) {\n          let category = d[p];\n          let categoryIndex = config.dimensions[p].yscale\n            .domain()\n            .indexOf(category);\n          let categoryRangeValue = config.dimensions[p].yscale.range()[\n            categoryIndex\n          ];\n          return (\n            categoryRangeValue >= ranges[p][0] &&\n            categoryRangeValue <= ranges[p][1]\n          );\n        },\n        number: function(d, p, dimension) {\n          return extents[idx][0] <= d[p] && d[p] <= extents[idx][1];\n        },\n        string: function(d, p, dimension) {\n          let category = d[p];\n          let categoryIndex = config.dimensions[p].yscale\n            .domain()\n            .indexOf(category);\n          let categoryRangeValue = config.dimensions[p].yscale.range()[\n            categoryIndex\n          ];\n          return (\n            categoryRangeValue >= ranges[p][0] &&\n            categoryRangeValue <= ranges[p][1]\n          );\n        },\n      };\n\n      // filter data, but instead of returning it now,\n      // put it into multiBrush data which is returned after\n      // all brushes are iterated through.\n      let filtered = config.data.filter(d =>\n        actives.every((p, dimension) =>\n          within[config.dimensions[p].type](d, p, dimension)\n        )\n      );\n      for (let z = 0; z < filtered.length; z++) {\n        multiBrushData.push(filtered[z]);\n      }\n      actives = [];\n      ranges = {};\n    }\n    return multiBrushData;\n  }\n};\n\nexport default selected;\n","const brushPredicate = (brushGroup, config, pc) => (predicate = null) => {\n  if (predicate === null) {\n    return brushGroup.predicate;\n  }\n\n  predicate = String(predicate).toUpperCase();\n  if (predicate !== 'AND' && predicate !== 'OR') {\n    throw new Error('Invalid predicate ' + predicate);\n  }\n\n  brushGroup.predicate = predicate;\n  config.brushed = brushGroup.currentMode().selected();\n  pc.renderBrushed();\n  return pc;\n};\n\nconst brushMode = (brushGroup, config, pc) => (mode = null) => {\n  if (mode === null) {\n    return brushGroup.mode;\n  }\n\n  if (pc.brushModes().indexOf(mode) === -1) {\n    throw new Error('pc.brushmode: Unsupported brush mode: ' + mode);\n  }\n\n  // Make sure that we don't trigger unnecessary events by checking if the mode\n  // actually changes.\n  if (mode !== brushGroup.mode) {\n    // When changing brush modes, the first thing we need to do is clearing any\n    // brushes from the current mode, if any.\n    if (brushGroup.mode !== 'None') {\n      pc.brushReset();\n    }\n\n    // Next, we need to 'uninstall' the current brushMode.\n    brushGroup.modes[brushGroup.mode].uninstall(pc);\n    // Finally, we can install the requested one.\n    brushGroup.mode = mode;\n    brushGroup.modes[brushGroup.mode].install();\n    if (mode === 'None') {\n      delete pc.brushPredicate;\n    } else {\n      pc.brushPredicate = brushPredicate(brushGroup, config, pc);\n    }\n  }\n\n  return pc;\n};\n\nexport default brushMode;\n","/**\n * dimension display names\n *\n * @param config\n * @param d\n * @returns {*}\n */\nconst dimensionLabels = config => d =>\n  config.dimensions[d].title ? config.dimensions[d].title : d;\n\nexport default dimensionLabels;\n","import { select } from 'd3-selection';\n\nconst flipAxisAndUpdatePCP = (config, pc, axis) =>\n  function(dimension) {\n    pc.flip(dimension);\n    pc.brushReset(dimension);\n    select(this.parentElement)\n      .transition()\n      .duration(config.animationTime)\n      .call(axis.scale(config.dimensions[dimension].yscale));\n    pc.render();\n  };\n\nexport default flipAxisAndUpdatePCP;\n","import { event } from 'd3-selection';\n\nconst rotateLabels = (config, pc) => {\n  if (!config.rotateLabels) return;\n\n  let delta = event.deltaY;\n  delta = delta < 0 ? -5 : delta;\n  delta = delta > 0 ? 5 : delta;\n\n  config.dimensionTitleRotation += delta;\n  pc.svg\n    .selectAll('text.label')\n    .attr(\n      'transform',\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\n    );\n  event.preventDefault();\n};\n\nexport default rotateLabels;\n","import { select } from 'd3-selection';\n\nimport dimensionLabels from '../util/dimensionLabels';\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\nimport rotateLabels from '../util/rotateLabels';\n\nconst updateAxes = (config, pc, position, axis, flags) => (\n  animationTime = null\n) => {\n  if (animationTime === null) {\n    animationTime = config.animationTime;\n  }\n\n  const g_data = pc.svg\n    .selectAll('.dimension')\n    .data(pc.getOrderedDimensionKeys());\n  // Enter\n  g_data\n    .enter()\n    .append('svg:g')\n    .attr('class', 'dimension')\n    .attr('transform', p => 'translate(' + position(p) + ')')\n    .style('opacity', 0)\n    .append('svg:g')\n    .attr('class', 'axis')\n    .attr('transform', 'translate(0,0)')\n    .each(function(d) {\n      const axisElement = select(this).call(\n        pc.applyAxisConfig(axis, config.dimensions[d])\n      );\n\n      axisElement\n        .selectAll('path')\n        .style('fill', 'none')\n        .style('stroke', '#222')\n        .style('shape-rendering', 'crispEdges');\n\n      axisElement\n        .selectAll('line')\n        .style('fill', 'none')\n        .style('stroke', '#222')\n        .style('shape-rendering', 'crispEdges');\n    })\n    .append('svg:text')\n    .attr({\n      'text-anchor': 'middle',\n      y: 0,\n      transform:\n        'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')',\n      x: 0,\n      class: 'label',\n    })\n    .text(dimensionLabels(config))\n    .on('dblclick', flipAxisAndUpdatePCP(config, pc, axis))\n    .on('wheel', rotateLabels(config, pc));\n\n  // Update\n  g_data.attr('opacity', 0);\n  g_data\n    .select('.axis')\n    .transition()\n    .duration(animationTime)\n    .each(function(d) {\n      select(this).call(pc.applyAxisConfig(axis, config.dimensions[d]));\n    });\n  g_data\n    .select('.label')\n    .transition()\n    .duration(animationTime)\n    .text(dimensionLabels(config))\n    .attr(\n      'transform',\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\n    );\n\n  // Exit\n  g_data.exit().remove();\n\n  g = pc.svg.selectAll('.dimension');\n  g\n    .transition()\n    .duration(animationTime)\n    .attr('transform', p => 'translate(' + position(p) + ')')\n    .style('opacity', 1);\n\n  pc.svg\n    .selectAll('.axis')\n    .transition()\n    .duration(animationTime)\n    .each(function(d) {\n      select(this).call(pc.applyAxisConfig(axis, config.dimensions[d]));\n    });\n\n  if (flags.brushable) pc.brushable();\n  if (flags.reorderable) pc.reorderable();\n  if (pc.brushMode() !== 'None') {\n    let mode = pc.brushMode();\n    pc.brushMode('None');\n    pc.brushMode(mode);\n  }\n  return this;\n};\n\nexport default updateAxes;\n","/** adjusts an axis' default range [h()+1, 1] if a NullValueSeparator is set */\nconst getRange = config => {\n  const h = config.height - config.margin.top - config.margin.bottom;\n\n  if (config.nullValueSeparator == 'bottom') {\n    return [\n      h +\n        1 -\n        config.nullValueSeparatorPadding.bottom -\n        config.nullValueSeparatorPadding.top,\n      1,\n    ];\n  } else if (config.nullValueSeparator == 'top') {\n    return [\n      h + 1,\n      1 +\n        config.nullValueSeparatorPadding.bottom +\n        config.nullValueSeparatorPadding.top,\n    ];\n  }\n  return [h + 1, 1];\n};\n\nexport default getRange;\n","import { scaleLinear, scaleOrdinal, scalePoint, scaleTime } from 'd3-scale';\nimport { keys } from 'd3-collection';\nimport { extent } from 'd3-array';\n\nimport getRange from '../util/getRange';\nimport w from '../util/width';\nimport h from '../util/height';\n\nconst autoscale = (config, pc, xscale, ctx) =>\n  function() {\n    // yscale\n    const defaultScales = {\n      date: function(k) {\n        let _extent = extent(config.data, d => (d[k] ? d[k].getTime() : null));\n        // special case if single value\n        if (_extent[0] === _extent[1]) {\n          return scalePoint()\n            .domain(_extent)\n            .range(getRange(config));\n        }\n        if (config.flipAxes.includes(k)) {\n          _extent = _extent.map(val => tempDate.unshift(val));\n        }\n        return scaleTime()\n          .domain(_extent)\n          .range(getRange(config));\n      },\n      number: function(k) {\n        let _extent = extent(config.data, d => +d[k]);\n        // special case if single value\n        if (_extent[0] === _extent[1]) {\n          return scalePoint()\n            .domain(_extent)\n            .range(getRange(config));\n        }\n        if (config.flipAxes.includes(k)) {\n          _extent = _extent.map(val => tempDate.unshift(val));\n        }\n        return scaleLinear()\n          .domain(_extent)\n          .range(getRange(config));\n      },\n      string: function(k) {\n        let counts = {},\n          domain = [];\n        // Let's get the count for each value so that we can sort the domain based\n        // on the number of items for each value.\n        config.data.map(p => {\n          if (p[k] === undefined && config.nullValueSeparator !== 'undefined') {\n            return null; // null values will be drawn beyond the horizontal null value separator!\n          }\n          if (counts[p[k]] === undefined) {\n            counts[p[k]] = 1;\n          } else {\n            counts[p[k]] = counts[p[k]] + 1;\n          }\n        });\n        if (config.flipAxes.includes(k)) {\n          domain = Object.getOwnPropertyNames(counts).sort();\n        } else {\n          let tempArr = Object.getOwnPropertyNames(counts).sort();\n          for (let i = 0; i < Object.getOwnPropertyNames(counts).length; i++) {\n            domain.push(tempArr.pop());\n          }\n        }\n\n        //need to create an ordinal scale for categorical data\n        let categoricalRange = [];\n        if (domain.length === 1) {\n          //edge case\n          domain = [' ', domain[0], ' '];\n        }\n        let addBy = getRange(config)[0] / (domain.length - 1);\n        for (let j = 0; j < domain.length; j++) {\n          if (categoricalRange.length === 0) {\n            categoricalRange.push(0);\n            continue;\n          }\n          categoricalRange.push(categoricalRange[j - 1] + addBy);\n        }\n        return scaleOrdinal()\n          .domain(domain)\n          .range(categoricalRange);\n      },\n    };\n    keys(config.dimensions).forEach(function(k) {\n      config.dimensions[k].yscale = defaultScales[config.dimensions[k].type](k);\n    });\n\n    // xscale\n    xscale.range([0, w(config)], 1);\n    // Retina display, etc.\n    const devicePixelRatio = window.devicePixelRatio || 1;\n\n    // canvas sizes\n    pc.selection\n      .selectAll('canvas')\n      .style('margin-top', config.margin.top + 'px')\n      .style('margin-left', config.margin.left + 'px')\n      .style('width', w(config) + 2 + 'px')\n      .style('height', h(config) + 2 + 'px')\n      .attr('width', (w(config) + 2) * devicePixelRatio)\n      .attr('height', (h(config) + 2) * devicePixelRatio);\n    // default styles, needs to be set when canvas width changes\n    ctx.foreground.strokeStyle = config.color;\n    ctx.foreground.lineWidth = 1.4;\n    ctx.foreground.globalCompositeOperation = config.composite;\n    ctx.foreground.globalAlpha = config.alpha;\n    ctx.foreground.scale(devicePixelRatio, devicePixelRatio);\n    ctx.brushed.strokeStyle = config.brushedColor;\n    ctx.brushed.lineWidth = 1.4;\n    ctx.brushed.globalCompositeOperation = config.composite;\n    ctx.brushed.globalAlpha = config.alpha;\n    ctx.brushed.scale(devicePixelRatio, devicePixelRatio);\n    ctx.highlight.lineWidth = 3;\n    ctx.highlight.scale(devicePixelRatio, devicePixelRatio);\n\n    return this;\n  };\n\nexport default autoscale;\n","import { brushSelection, brushY } from 'd3-brush';\nimport { event, select } from 'd3-selection';\n\nconst brushable = (config, pc, flags) =>\n  function() {\n    if (!pc.g()) {\n      pc.createAxes();\n    }\n\n    const g = pc.g();\n\n    // Add and store a brush for each axis.\n    g\n      .append('svg:g')\n      .attr('class', 'brush')\n      .each(function(d) {\n        if (config.dimensions[d] !== undefined) {\n          config.dimensions[d]['brush'] = brushY(select(this)).extent([\n            [-15, 0],\n            [15, config.dimensions[d].yscale.range()[0]],\n          ]);\n          select(this).call(\n            config.dimensions[d]['brush']\n              .on('start', function() {\n                if (event.sourceEvent !== null && !event.sourceEvent.ctrlKey) {\n                  pc.brushReset();\n                }\n              })\n              .on('brush', function() {\n                if (!event.sourceEvent.ctrlKey) {\n                  pc.brush();\n                }\n              })\n              .on('end', function() {\n                // save brush selection is ctrl key is held\n                // store important brush information and\n                // the html element of the selection,\n                // to make a dummy selection element\n                if (event.sourceEvent.ctrlKey) {\n                  let html = select(this)\n                    .select('.selection')\n                    .nodes()[0].outerHTML;\n                  html = html.replace(\n                    'class=\"selection\"',\n                    'class=\"selection dummy' +\n                      ' selection-' +\n                      config.brushes.length +\n                      '\"'\n                  );\n                  let dat = select(this).nodes()[0].__data__;\n                  let brush = {\n                    id: config.brushes.length,\n                    extent: brushSelection(this),\n                    html: html,\n                    data: dat,\n                  };\n                  config.brushes.push(brush);\n                  select(select(this).nodes()[0].parentNode)\n                    .select('.axis')\n                    .nodes()[0].outerHTML += html;\n                  pc.brush();\n                  config.dimensions[d].brush.move(select(this, null));\n                  select(this)\n                    .select('.selection')\n                    .attr('style', 'display:none');\n                  pc.brushable();\n                } else {\n                  pc.brush();\n                }\n              })\n          );\n          select(this).on('dblclick', function() {\n            pc.brushReset(d);\n          });\n        }\n      });\n\n    flags.brushable = true;\n    return this;\n  };\n\nexport default brushable;\n","import { keys } from 'd3-collection';\nimport { extent } from 'd3-array';\n\nconst commonScale = (config, pc) =>\n  function(global, type) {\n    const t = type || 'number';\n    if (typeof global === 'undefined') {\n      global = true;\n    }\n\n    // try to autodetect dimensions and create scales\n    if (!keys(config.dimensions).length) {\n      pc.detectDimensions();\n    }\n    pc.autoscale();\n\n    // scales of the same type\n    const scales = keys(config.dimensions).filter(\n      p => config.dimensions[p].type == t\n    );\n\n    if (global) {\n      let _extent = extent(\n        scales\n          .map(d => config.dimensions[d].yscale.domain())\n          .reduce((cur, acc) => cur.concat(acc))\n      );\n\n      scales.forEach(d => {\n        config.dimensions[d].yscale.domain(_extent);\n      });\n    } else {\n      scales.forEach(d => {\n        config.dimensions[d].yscale.domain(extent(config.data, d => +d[k]));\n      });\n    }\n\n    // update centroids\n    if (config.bundleDimension !== null) {\n      pc.bundleDimension(config.bundleDimension);\n    }\n\n    return this;\n  };\n\nexport default commonScale;\n","import { keys } from 'd3-collection';\n\nconst computeRealCentroids = (dimensions, position) => row =>\n  keys(dimensions).map(d => {\n    const x = position(d);\n    const y = dimensions[d].yscale(row[d]);\n    return [x, y];\n  });\n\nexport default computeRealCentroids;\n","import { keys } from 'd3-collection';\n\nconst applyDimensionDefaults = (config, pc) =>\n  function(dims) {\n    const types = pc.detectDimensionTypes(config.data);\n    dims = dims ? dims : keys(types);\n\n    return dims.reduce((acc, cur, i) => {\n      const k = config.dimensions[cur] ? config.dimensions[cur] : {};\n\n      acc[cur] = {\n        ...k,\n        orient: k.orient ? k.orient : 'left',\n        ticks: k.ticks != null ? k.ticks : 5,\n        innerTickSize: k.innerTickSize != null ? k.innerTickSize : 6,\n        outerTickSize: k.outerTickSize != null ? k.outerTickSize : 0,\n        tickPadding: k.tickPadding != null ? k.tickPadding : 3,\n        type: k.type ? k.type : types[cur],\n        index: k.index != null ? k.index : i,\n      };\n\n      return acc;\n    }, {});\n  };\n\nexport default applyDimensionDefaults;\n","import { select } from 'd3-selection';\n\nimport dimensionLabels from '../util/dimensionLabels';\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\nimport rotateLabels from '../util/rotateLabels';\n\nimport w from '../util/width';\nimport h from '../util/height';\n\n/**\n * Create static SVG axes with dimension names, ticks, and labels.\n *\n * @param config\n * @param pc\n * @param xscale\n * @param flags\n * @param axis\n * @returns {Function}\n */\nconst createAxes = (config, pc, xscale, flags, axis) =>\n  function() {\n    if (pc.g() !== undefined) {\n      pc.removeAxes();\n    }\n    // Add a group element for each dimension.\n    pc._g = pc.svg\n      .selectAll('.dimension')\n      .data(pc.getOrderedDimensionKeys(), function(d) {\n        return d;\n      })\n      .enter()\n      .append('svg:g')\n      .attr('class', 'dimension')\n      .attr('transform', function(d) {\n        return 'translate(' + xscale(d) + ')';\n      });\n    // Add an axis and title.\n    pc._g\n      .append('svg:g')\n      .attr('class', 'axis')\n      .attr('transform', 'translate(0,0)')\n      .each(function(d) {\n        let axisElement = select(this).call(\n          pc.applyAxisConfig(axis, config.dimensions[d])\n        );\n\n        axisElement\n          .selectAll('path')\n          .style('fill', 'none')\n          .style('stroke', '#222')\n          .style('shape-rendering', 'crispEdges');\n\n        axisElement\n          .selectAll('line')\n          .style('fill', 'none')\n          .style('stroke', '#222')\n          .style('shape-rendering', 'crispEdges');\n      })\n\n      .append('svg:text')\n      .attr('text-anchor', 'middle')\n      .attr('y', 0)\n      .attr(\n        'transform',\n        'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\n      )\n      .attr('x', 0)\n      .attr('class', 'label')\n      .text(dimensionLabels(config))\n      .on('dblclick', flipAxisAndUpdatePCP(config, pc, axis))\n      .on('wheel', rotateLabels(config, pc));\n\n    if (config.nullValueSeparator == 'top') {\n      pc.svg\n        .append('line')\n        .attr('x1', 0)\n        .attr('y1', 1 + config.nullValueSeparatorPadding.top)\n        .attr('x2', w(config))\n        .attr('y2', 1 + config.nullValueSeparatorPadding.top)\n        .attr('stroke-width', 1)\n        .attr('stroke', '#777')\n        .attr('fill', 'none')\n        .attr('shape-rendering', 'crispEdges');\n    } else if (config.nullValueSeparator == 'bottom') {\n      pc.svg\n        .append('line')\n        .attr('x1', 0)\n        .attr('y1', h(config) + 1 - config.nullValueSeparatorPadding.bottom)\n        .attr('x2', w(config))\n        .attr('y2', h(config) + 1 - config.nullValueSeparatorPadding.bottom)\n        .attr('stroke-width', 1)\n        .attr('stroke', '#777')\n        .attr('fill', 'none')\n        .attr('shape-rendering', 'crispEdges');\n    }\n\n    flags.axes = true;\n    return this;\n  };\n\nexport default createAxes;\n","import { entries } from 'd3-collection';\nimport { min } from 'd3-array';\n\n//draw dots with radius r on the axis line where data intersects\nconst axisDots = (config, pc, position) => _r => {\n  const r = _r || 0.1;\n  const ctx = pc.ctx.marks;\n  const startAngle = 0;\n  const endAngle = 2 * Math.PI;\n  ctx.globalAlpha = min([1 / Math.pow(config.data.length, 1 / 2), 1]);\n  config.data.forEach(d => {\n    entries(config.dimensions).forEach((p, i) => {\n      ctx.beginPath();\n      ctx.arc(\n        position(p),\n        config.dimensions[p.key].yscale(d[p]),\n        r,\n        startAngle,\n        endAngle\n      );\n      ctx.stroke();\n      ctx.fill();\n    });\n  });\n  return this;\n};\n\nexport default axisDots;\n","import { axisBottom, axisLeft, axisRight, axisTop } from 'd3-axis';\n\nconst applyAxisConfig = (axis, dimension) => {\n  let axisCfg;\n\n  switch (dimension.orient) {\n    case 'left':\n      axisCfg = axisLeft(dimension.yscale);\n      break;\n    case 'right':\n      axisCfg = axisRight(dimension.yscale);\n      break;\n    case 'top':\n      axisCfg = axisTop(dimension.yscale);\n      break;\n    case 'bottom':\n      axisCfg = axisBottom(dimension.yscale);\n      break;\n    default:\n      axisCfg = axisLeft(dimension.yscale);\n      break;\n  }\n\n  axisCfg\n    .ticks(dimension.ticks)\n    .tickValues(dimension.tickValues)\n    .tickSizeInner(dimension.innerTickSize)\n    .tickSizeOuter(dimension.outerTickSize)\n    .tickPadding(dimension.tickPadding)\n    .tickFormat(dimension.tickFormat);\n\n  return axisCfg;\n};\n\nexport default applyAxisConfig;\n","import { drag } from 'd3-drag';\nimport { event, select } from 'd3-selection';\n\nimport w from '../util/width';\n\n// Jason Davies, http://bl.ocks.org/1341281\nconst reorderable = (config, pc, xscale, position, dragging, flags) =>\n  function() {\n    if (pc.g() === undefined) pc.createAxes();\n    const g = pc.g();\n\n    g.style('cursor', 'move').call(\n      drag()\n        .on('start', function(d) {\n          dragging[d] = this.__origin__ = xscale(d);\n        })\n        .on('drag', function(d) {\n          dragging[d] = Math.min(\n            w(__),\n            Math.max(0, (this.__origin__ += event.dx))\n          );\n          pc.sortDimensions();\n          xscale.domain(pc.getOrderedDimensionKeys());\n          pc.render();\n          g.attr('transform', d => 'translate(' + position(d) + ')');\n        })\n        .on('end', function(d) {\n          delete this.__origin__;\n          delete dragging[d];\n          select(this)\n            .transition()\n            .attr('transform', 'translate(' + xscale(d) + ')');\n          pc.render();\n        })\n    );\n    flags.reorderable = true;\n    return this;\n  };\n\nexport default reorderable;\n","// rescale for height, width and margins\n// TODO currently assumes chart is brushable, and destroys old brushes\nconst resize = (config, pc, flags, events) => {\n  return function() {\n    // selection size\n    pc.selection\n      .select('svg')\n      .attr('width', config.width)\n      .attr('height', config.height);\n    pc.svg.attr(\n      'transform',\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\n    );\n\n    // FIXME: the current brush state should pass through\n    if (flags.brushable) pc.brushReset();\n\n    // scales\n    pc.autoscale();\n\n    // axes, destroys old brushes.\n    if (pc.g()) pc.createAxes();\n    if (flags.brushable) pc.brushable();\n    if (flags.reorderable) pc.reorderable();\n\n    events.call('resize', this, {\n      width: config.width,\n      height: config.height,\n      margin: config.margin,\n    });\n\n    return this;\n  };\n};\n\nexport default resize;\n","// Reorder dimensions, such that the highest value (visually) is on the left and\n// the lowest on the right. Visual values are determined by the data values in\n// the given row.\nconst reorder = (config, pc, xscale) => rowdata => {\n  const firstDim = pc.getOrderedDimensionKeys()[0];\n\n  pc.sortDimensionsByRowData(rowdata);\n  // NOTE: this is relatively cheap given that:\n  // number of dimensions < number of data items\n  // Thus we check equality of order to prevent rerendering when this is the case.\n  const reordered = firstDim !== pc.getOrderedDimensionKeys()[0];\n\n  if (reordered) {\n    xscale.domain(pc.getOrderedDimensionKeys());\n    const highlighted = config.highlighted.slice(0);\n    pc.unhighlight();\n\n    const g = pc.g();\n    g\n      .transition()\n      .duration(1500)\n      .attr('transform', d => 'translate(' + xscale(d) + ')');\n    pc.render();\n\n    // pc.highlight() does not check whether highlighted is length zero, so we do that here.\n    if (highlighted.length !== 0) {\n      pc.highlight(highlighted);\n    }\n  }\n};\n\nexport default reorder;\n","import { keys } from 'd3-collection';\n\nconst sortDimensions = (config, position) => () => {\n  const copy = Object.assign({}, config.dimensions);\n  const positionSortedKeys = keys(config.dimensions).sort(\n    (a, b) => (position(a) - position(b) === 0 ? 1 : position(a) - position(b))\n  );\n  config.dimensions = {};\n  positionSortedKeys.forEach((p, i) => {\n    config.dimensions[p] = copy[p];\n    config.dimensions[p].index = i;\n  });\n};\n\nexport default sortDimensions;\n","import { keys } from 'd3-collection';\n\nconst sortDimensionsByRowData = config => rowdata => {\n  const copy = Object.assign({}, config.dimensions);\n  const positionSortedKeys = keys(config.dimensions).sort((a, b) => {\n    const pixelDifference =\n      config.dimensions[a].yscale(rowdata[a]) -\n      config.dimensions[b].yscale(rowdata[b]);\n\n    // Array.sort is not necessarily stable, this means that if pixelDifference is zero\n    // the ordering of dimensions might change unexpectedly. This is solved by sorting on\n    // variable name in that case.\n    return pixelDifference === 0 ? a.localeCompare(b) : pixelDifference;\n  });\n  config.dimensions = {};\n  positionSortedKeys.forEach((p, i) => {\n    config.dimensions[p] = copy[p];\n    config.dimensions[p].index = i;\n  });\n};\n\nexport default sortDimensionsByRowData;\n","const isBrushed = (config, brushGroup) => {\n  if (config.brushed && config.brushed.length !== config.data.length)\n    return true;\n\n  const object = brushGroup.currentMode().brushState();\n\n  for (let key in object) {\n    if (object.hasOwnProperty(key)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport default isBrushed;\n","import h from '../util/height';\nimport w from '../util/width';\nimport isBrushed from '../util/isBrushed';\n\nconst clear = (config, pc, ctx, brushGroup) =>\n  function(layer) {\n    ctx[layer].clearRect(0, 0, w(config) + 2, h(config) + 2);\n\n    // This will make sure that the foreground items are transparent\n    // without the need for changing the opacity style of the foreground canvas\n    // as this would stop the css styling from working\n    if (layer === 'brushed' && isBrushed(config, brushGroup)) {\n      ctx.brushed.fillStyle = pc.selection.style('background-color');\n      ctx.brushed.globalAlpha = 1 - config.alphaOnBrushed;\n      ctx.brushed.fillRect(0, 0, w(config) + 2, h(config) + 2);\n      ctx.brushed.globalAlpha = config.alpha;\n    }\n    return this;\n  };\n\nexport default clear;\n","import { keys } from 'd3-collection';\n\nconst computeCentroids = (config, position, row) => {\n  const centroids = [];\n\n  const p = keys(config.dimensions);\n  const cols = p.length;\n  const a = 0.5; // center between axes\n  for (let i = 0; i < cols; ++i) {\n    // centroids on 'real' axes\n    const x = position(p[i]);\n    const y = config.dimensions[p[i]].yscale(row[p[i]]);\n    centroids.push($V([x, y]));\n\n    // centroids on 'virtual' axes\n    if (i < cols - 1) {\n      const cx = x + a * (position(p[i + 1]) - x);\n      let cy = y + a * (config.dimensions[p[i + 1]].yscale(row[p[i + 1]]) - y);\n      if (config.bundleDimension !== null) {\n        const leftCentroid = config.clusterCentroids\n          .get(\n            config.dimensions[config.bundleDimension].yscale(\n              row[config.bundleDimension]\n            )\n          )\n          .get(p[i]);\n        const rightCentroid = config.clusterCentroids\n          .get(\n            config.dimensions[config.bundleDimension].yscale(\n              row[config.bundleDimension]\n            )\n          )\n          .get(p[i + 1]);\n        let centroid = 0.5 * (leftCentroid + rightCentroid);\n        cy = centroid + (1 - config.bundlingStrength) * (cy - centroid);\n      }\n      centroids.push($V([cx, cy]));\n    }\n  }\n\n  return centroids;\n};\n\nexport default computeCentroids;\n","const computeControlPoints = (smoothness, centroids) => {\n  const cols = centroids.length;\n  const a = smoothness;\n  const cps = [];\n\n  cps.push(centroids[0]);\n  cps.push(\n    $V([\n      centroids[0].e(1) + a * 2 * (centroids[1].e(1) - centroids[0].e(1)),\n      centroids[0].e(2),\n    ])\n  );\n  for (let col = 1; col < cols - 1; ++col) {\n    let mid = centroids[col];\n    let left = centroids[col - 1];\n    let right = centroids[col + 1];\n\n    let diff = left.subtract(right);\n    cps.push(mid.add(diff.x(a)));\n    cps.push(mid);\n    cps.push(mid.subtract(diff.x(a)));\n  }\n  cps.push(\n    $V([\n      centroids[cols - 1].e(1) +\n        a * 2 * (centroids[cols - 2].e(1) - centroids[cols - 1].e(1)),\n      centroids[cols - 1].e(2),\n    ])\n  );\n  cps.push(centroids[cols - 1]);\n\n  return cps;\n};\n\nexport default computeControlPoints;\n","// draw single cubic bezier curve\nimport { entries } from 'd3-collection';\nimport computeCentroids from './computeCentroids';\nimport computeControlPoints from './computeControlPoints';\nimport h from './height';\n\nconst singleCurve = (config, position, d, ctx) => {\n  const centroids = computeCentroids(config, position, d);\n  const cps = computeControlPoints(config.smoothness, centroids);\n\n  ctx.moveTo(cps[0].e(1), cps[0].e(2));\n\n  for (let i = 1; i < cps.length; i += 3) {\n    if (config.showControlPoints) {\n      for (let j = 0; j < 3; j++) {\n        ctx.fillRect(cps[i + j].e(1), cps[i + j].e(2), 2, 2);\n      }\n    }\n    ctx.bezierCurveTo(\n      cps[i].e(1),\n      cps[i].e(2),\n      cps[i + 1].e(1),\n      cps[i + 1].e(2),\n      cps[i + 2].e(1),\n      cps[i + 2].e(2)\n    );\n  }\n};\n\n// returns the y-position just beyond the separating null value line\nconst getNullPosition = config => {\n  if (config.nullValueSeparator == 'bottom') {\n    return h(config) + 1;\n  } else if (config.nullValueSeparator == 'top') {\n    return 1;\n  } else {\n    console.log(\n      \"A value is NULL, but nullValueSeparator is not set; set it to 'bottom' or 'top'.\"\n    );\n  }\n  return h(config) + 1;\n};\n\nconst singlePath = (config, position, d, ctx) => {\n  entries(config.dimensions).forEach((p, i) => {\n    //p isn't really p\n    if (i == 0) {\n      ctx.moveTo(\n        position(p.key),\n        typeof d[p.key] == 'undefined'\n          ? getNullPosition(config)\n          : config.dimensions[p.key].yscale(d[p.key])\n      );\n    } else {\n      ctx.lineTo(\n        position(p.key),\n        typeof d[p.key] == 'undefined'\n          ? getNullPosition(config)\n          : config.dimensions[p.key].yscale(d[p.key])\n      );\n    }\n  });\n};\n\n// draw single polyline\nconst colorPath = (config, position, d, ctx) => {\n  ctx.beginPath();\n  if (\n    (config.bundleDimension !== null && config.bundlingStrength > 0) ||\n    config.smoothness > 0\n  ) {\n    singleCurve(config, position, d, ctx);\n  } else {\n    singlePath(config, position, d, ctx);\n  }\n  ctx.stroke();\n};\n\nexport default colorPath;\n","const _functor = v => (typeof v === 'function' ? v : () => v);\n\nexport default _functor;\n","import { keys } from 'd3-collection';\n\nimport isBrushed from '../util/isBrushed';\nimport colorPath from '../util/colorPath';\nimport functor from '../util/functor';\n\nconst pathBrushed = (config, ctx, position) => (d, i) => {\n  if (config.brushedColor !== null) {\n    ctx.brushed.strokeStyle = functor(config.brushedColor)(d, i);\n  } else {\n    ctx.brushed.strokeStyle = functor(config.color)(d, i);\n  }\n  return colorPath(config, position, d, ctx.brushed);\n};\n\nconst renderBrushedDefault = (config, ctx, position, pc, brushGroup) => () => {\n  pc.clear('brushed');\n\n  if (isBrushed(config, brushGroup)) {\n    config.brushed.forEach(pathBrushed(config, ctx, position));\n  }\n};\n\nconst renderBrushedQueue = (config, brushGroup, brushedQueue) => () => {\n  if (isBrushed(config, brushGroup)) {\n    brushedQueue(config.brushed);\n  } else {\n    brushedQueue([]); // This is needed to clear the currently brushed items\n  }\n};\n\nconst renderBrushed = (config, pc, events) =>\n  function() {\n    if (!keys(config.dimensions).length) pc.detectDimensions();\n\n    pc.renderBrushed[config.mode]();\n    events.call('render', this);\n    return this;\n  };\n\nexport { pathBrushed, renderBrushed, renderBrushedDefault, renderBrushedQueue };\n","import { select, selectAll } from 'd3-selection';\n\nconst brushReset = config =>\n  function(dimension) {\n    const brushesToKeep = [];\n    for (let j = 0; j < config.brushes.length; j++) {\n      if (config.brushes[j].data !== dimension) {\n        brushesToKeep.push(config.brushes[j]);\n      }\n    }\n\n    config.brushes = brushesToKeep;\n    config.brushed = false;\n\n    if (pc.g() !== undefined) {\n      const nodes = selectAll('.brush').nodes();\n      for (let i = 0; i < nodes.length; i++) {\n        if (nodes[i].__data__ === dimension) {\n          // remove all dummy brushes for this axis or the real brush\n          select(select(nodes[i]).nodes()[0].parentNode)\n            .selectAll('.dummy')\n            .remove();\n          config.dimensions[dimension].brush.move(select(nodes[i], null));\n        }\n      }\n    }\n\n    return this;\n  };\n\nexport default brushReset;\n","// a better \"typeof\" from this post: http://stackoverflow.com/questions/7390426/better-way-to-get-type-of-a-javascript-variable\nconst toType = v => {\n  return {}.toString\n    .call(v)\n    .match(/\\s([a-zA-Z]+)/)[1]\n    .toLowerCase();\n};\n\nexport default toType;\n","import { keys } from 'd3-collection';\n\n// this descriptive text should live with other introspective methods\nconst toString = config => () => {\n  return (\n    'Parallel Coordinates: ' +\n    keys(config.dimensions).length +\n    ' dimensions (' +\n    keys(config.data[0]).length +\n    ' total) , ' +\n    config.data.length +\n    ' rows'\n  );\n};\n\nexport default toString;\n","// pairs of adjacent dimensions\nconst adjacentPairs = arr => {\n  let ret = [];\n  for (let i = 0; i < arr.length - 1; i++) {\n    ret.push([arr[i], arr[i + 1]]);\n  }\n  return ret;\n};\n\nexport default adjacentPairs;\n","import { selectAll } from 'd3-selection';\n\nimport colorPath from '../util/colorPath';\nimport functor from '../util/functor';\n\nconst pathHighlight = (config, ctx, position) => (d, i) => {\n  ctx.highlight.strokeStyle = functor(config.color)(d, i);\n  return colorPath(config, position, d, ctx.highlight);\n};\n\n// highlight an array of data\nconst highlight = (config, pc, canvas, events, ctx, position) =>\n  function(data = null) {\n    if (data === null) {\n      return config.highlighted;\n    }\n\n    config.highlighted = data;\n    pc.clear('highlight');\n    selectAll([canvas.foreground, canvas.brushed]).classed('faded', true);\n    data.forEach(pathHighlight(config, ctx, position));\n    events.call('highlight', this, data);\n    return this;\n  };\n\nexport default highlight;\n","import { selectAll } from 'd3-selection';\n\n// clear highlighting\nconst unhighlight = (config, pc, canvas) =>\n  function() {\n    config.highlighted = [];\n    pc.clear('highlight');\n    selectAll([canvas.foreground, canvas.brushed]).classed('faded', false);\n    return this;\n  };\n\nexport default unhighlight;\n","const removeAxes = pc =>\n  function() {\n    pc._g.remove();\n\n    delete pc._g;\n    return this;\n  };\n\nexport default removeAxes;\n","import { keys } from 'd3-collection';\n\n/**\n * Renders the polylines.\n * If no dimensions have been specified, it will attempt to detect quantitative\n * dimensions based on the first data entry. If scales haven't been set, it will\n * autoscale based on the extent for each dimension.\n *\n * @param config\n * @param pc\n * @param events\n * @returns {Function}\n */\nconst render = (config, pc, events) =>\n  function() {\n    // try to autodetect dimensions and create scales\n    if (!keys(config.dimensions).length) {\n      pc.detectDimensions();\n    }\n    pc.autoscale();\n\n    pc.render[config.mode]();\n\n    events.call('render', this);\n    return this;\n  };\n\nexport default render;\n","import colorPath from '../util/colorPath';\nimport functor from '../util/functor';\n\nconst pathForeground = (config, ctx, position) => (d, i) => {\n  ctx.foreground.strokeStyle = functor(config.color)(d, i);\n  return colorPath(config, position, d, ctx.foreground);\n};\n\nconst renderDefault = (config, pc, ctx, position) => () => {\n  pc.clear('foreground');\n  pc.clear('highlight');\n\n  pc.renderBrushed.default();\n\n  config.data.forEach(pathForeground(config, ctx, position));\n};\n\nconst renderDefaultQueue = (config, pc, foregroundQueue) => () => {\n  pc.renderBrushed.queue();\n  foregroundQueue(config.data);\n};\n\nexport default renderDefault;\n\nexport { pathForeground, renderDefaultQueue };\n","import toType from './toType';\n\n// try to coerce to number before returning type\nconst toTypeCoerceNumbers = v =>\n  parseFloat(v) == v && v != null ? 'number' : toType(v);\n\nexport default toTypeCoerceNumbers;\n","import { keys } from 'd3-collection';\n\nimport toTypeCoerceNumbers from './toTypeCoerceNumbers';\n\n// attempt to determine types of each dimension based on first row of data\nconst detectDimensionTypes = data =>\n  keys(data[0]).reduce((acc, cur) => {\n    const key = isNaN(Number(cur)) ? cur : parseInt(cur);\n    acc[key] = toTypeCoerceNumbers(data[0][cur]);\n\n    return acc;\n  }, {});\n\nexport default detectDimensionTypes;\n","import { ascending } from 'd3-array';\nimport { keys } from 'd3-collection';\n\nconst getOrderedDimensionKeys = config => () =>\n  keys(config.dimensions).sort((x, y) =>\n    ascending(config.dimensions[x].index, config.dimensions[y].index)\n  );\n\nexport default getOrderedDimensionKeys;\n","const interactive = flags =>\n  function() {\n    flags.interactive = true;\n    return this;\n  };\n\nexport default interactive;\n","const shadows = (flags, pc) =>\n  function() {\n    flags.shadows = true;\n    pc.alphaOnBrushed(0.1);\n    pc.render();\n    return this;\n  };\n\nexport default shadows;\n","import { select } from 'd3-selection';\n\n/**\n * Setup a new parallel coordinates chart.\n *\n * @param config\n * @param canvas\n * @param ctx\n * @returns {pc} a parcoords closure\n */\nconst init = (config, canvas, ctx) => {\n  /**\n   * Create the chart within a container. The selector can also be a d3 selection.\n   *\n   * @param selection a d3 selection\n   * @returns {pc} instance for chained api\n   */\n  const pc = function(selection) {\n    selection = pc.selection = select(selection);\n\n    config.width = selection.node().clientWidth;\n    config.height = selection.node().clientHeight;\n    // canvas data layers\n    ['marks', 'foreground', 'brushed', 'highlight'].forEach(layer => {\n      canvas[layer] = selection\n        .append('canvas')\n        .attr('class', layer)\n        .node();\n      ctx[layer] = canvas[layer].getContext('2d');\n    });\n\n    // svg tick and brush layers\n    pc.svg = selection\n      .append('svg')\n      .attr('width', config.width)\n      .attr('height', config.height)\n      .style('font', '14px sans-serif')\n      .style('position', 'absolute')\n\n      .append('svg:g')\n      .attr(\n        'transform',\n        'translate(' + config.margin.left + ',' + config.margin.top + ')'\n      );\n    // for chained api\n    return pc;\n  };\n\n  // for partial-application style programming\n  return pc;\n};\n\nexport default init;\n","const flip = config =>\n  function(d) {\n    //__.dimensions[d].yscale.domain().reverse();                               // does not work\n    config.dimensions[d].yscale.domain(\n      config.dimensions[d].yscale.domain().reverse()\n    ); // works\n\n    return this;\n  };\n\nexport default flip;\n","const detectDimensions = pc =>\n  function() {\n    pc.dimensions(pc.applyDimensionDefaults());\n    return this;\n  };\n\nexport default detectDimensions;\n","const scale = config =>\n  function(d, domain) {\n    config.dimensions[d].yscale.domain(domain);\n\n    return this;\n  };\n\nexport default scale;\n","const DefaultConfig = {\n  data: [],\n  highlighted: [],\n  dimensions: {},\n  dimensionTitleRotation: 0,\n  brushes: [],\n  brushed: false,\n  brushedColor: null,\n  alphaOnBrushed: 0.0,\n  mode: 'default',\n  rate: 20,\n  width: 600,\n  height: 300,\n  margin: { top: 24, right: 20, bottom: 12, left: 20 },\n  nullValueSeparator: 'undefined', // set to \"top\" or \"bottom\"\n  nullValueSeparatorPadding: { top: 8, right: 0, bottom: 8, left: 0 },\n  color: '#069',\n  composite: 'source-over',\n  alpha: 0.7,\n  bundlingStrength: 0.5,\n  bundleDimension: null,\n  smoothness: 0.0,\n  showControlPoints: false,\n  hideAxis: [],\n  flipAxes: [],\n  animationTime: 1100, // How long it takes to flip the axis when you double click\n  rotateLabels: false,\n};\n\nexport default DefaultConfig;\n","import { entries, keys } from 'd3-collection';\nimport { axisLeft } from 'd3-axis';\nimport { dispatch } from 'd3-dispatch';\nimport { scalePoint } from 'd3-scale';\n\nimport DefaultConfig from './defaultConfig';\n\nconst initState = userConfig => {\n  const config = Object.assign({}, DefaultConfig, userConfig);\n\n  if (userConfig && userConfig.dimensionTitles) {\n    console.warn(\n      'dimensionTitles passed in userConfig is deprecated. Add title to dimension object.'\n    );\n    entries(userConfig.dimensionTitles).forEach(d => {\n      if (config.dimensions[d.key]) {\n        config.dimensions[d.key].title = config.dimensions[d.key].title\n          ? config.dimensions[d.key].title\n          : d.value;\n      } else {\n        config.dimensions[d.key] = {\n          title: d.value,\n        };\n      }\n    });\n  }\n\n  const eventTypes = [\n    'render',\n    'resize',\n    'highlight',\n    'brush',\n    'brushend',\n    'brushstart',\n    'axesreorder',\n  ].concat(keys(config));\n\n  const events = dispatch.apply(this, eventTypes),\n    flags = {\n      brushable: false,\n      reorderable: false,\n      axes: false,\n      interactive: false,\n      debug: false,\n    },\n    xscale = scalePoint(),\n    dragging = {},\n    axis = axisLeft().ticks(5),\n    ctx = {},\n    canvas = {};\n\n  const brush = {\n    modes: {\n      None: {\n        install: function(pc) {}, // Nothing to be done.\n        uninstall: function(pc) {}, // Nothing to be done.\n        selected: function() {\n          return [];\n        }, // Nothing to return\n        brushState: function() {\n          return {};\n        },\n      },\n    },\n    mode: 'None',\n    predicate: 'AND',\n    currentMode: function() {\n      return this.modes[this.mode];\n    },\n  };\n\n  return {\n    config,\n    events,\n    eventTypes,\n    flags,\n    xscale,\n    dragging,\n    axis,\n    ctx,\n    canvas,\n    brush,\n  };\n};\n\nexport default initState;\n","import { keys, map } from 'd3-collection';\n\nconst computeClusterCentroids = (config, d) => {\n  const clusterCentroids = map();\n  const clusterCounts = map();\n  // determine clusterCounts\n  config.data.forEach(function(row) {\n    let scaled = config.dimensions[d].yscale(row[d]);\n    if (!clusterCounts.has(scaled)) {\n      clusterCounts.set(scaled, 0);\n    }\n    let count = clusterCounts.get(scaled);\n    clusterCounts.set(scaled, count + 1);\n  });\n\n  config.data.forEach(function(row) {\n    keys(config.dimensions).map(p => {\n      let scaled = config.dimensions[d].yscale(row[d]);\n      if (!clusterCentroids.has(scaled)) {\n        let _map = map();\n        clusterCentroids.set(scaled, _map);\n      }\n      if (!clusterCentroids.get(scaled).has(p)) {\n        clusterCentroids.get(scaled).set(p, 0);\n      }\n      let value = clusterCentroids.get(scaled).get(p);\n      value += config.dimensions[p].yscale(row[p]) / clusterCounts.get(scaled);\n      clusterCentroids.get(scaled).set(p, value);\n    });\n  });\n\n  return clusterCentroids;\n};\n\nexport default computeClusterCentroids;\n","// side effects for setters\nimport { keys } from 'd3-collection';\nimport { dispatch } from 'd3-dispatch';\nimport computeClusterCentroids from '../util/computeClusterCentroids';\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\n\nconst without = (arr, items) => {\n  items.forEach(el => {\n    delete arr[el];\n  });\n  return arr;\n};\n\nconst sideEffects = (\n  config,\n  ctx,\n  pc,\n  xscale,\n  flags,\n  brushedQueue,\n  foregroundQueue\n) =>\n  dispatch\n    .apply(this, keys(config))\n    .on('composite', d => {\n      ctx.foreground.globalCompositeOperation = d.value;\n      ctx.brushed.globalCompositeOperation = d.value;\n    })\n    .on('alpha', d => {\n      ctx.foreground.globalAlpha = d.value;\n      ctx.brushed.globalAlpha = d.value;\n    })\n    .on('brushedColor', d => {\n      ctx.brushed.strokeStyle = d.value;\n    })\n    .on('width', d => pc.resize())\n    .on('height', d => pc.resize())\n    .on('margin', d => pc.resize())\n    .on('rate', d => {\n      brushedQueue.rate(d.value);\n      foregroundQueue.rate(d.value);\n    })\n    .on('dimensions', d => {\n      config.dimensions = pc.applyDimensionDefaults(keys(d.value));\n      xscale.domain(pc.getOrderedDimensionKeys());\n      pc.sortDimensions();\n      if (flags.interactive) {\n        pc.render().updateAxes();\n      }\n    })\n    .on('bundleDimension', d => {\n      if (!keys(config.dimensions).length) pc.detectDimensions();\n      pc.autoscale();\n      if (typeof d.value === 'number') {\n        if (d.value < keys(config.dimensions).length) {\n          config.bundleDimension = config.dimensions[d.value];\n        } else if (d.value < config.hideAxis.length) {\n          config.bundleDimension = config.hideAxis[d.value];\n        }\n      } else {\n        config.bundleDimension = d.value;\n      }\n\n      config.clusterCentroids = computeClusterCentroids(\n        config,\n        config.bundleDimension\n      );\n      if (flags.interactive) {\n        pc.render();\n      }\n    })\n    .on('hideAxis', d => {\n      pc.dimensions(pc.applyDimensionDefaults());\n      pc.dimensions(without(config.dimensions, d.value));\n    })\n    .on('flipAxes', d => {\n      if (d.value && d.value.length) {\n        d.value.forEach(function(axis) {\n          flipAxisAndUpdatePCP(config, pc, axis);\n        });\n        pc.updateAxes(0);\n      }\n    });\n\nexport default sideEffects;\n","import { keys } from 'd3-collection';\n\nconst getset = (obj, state, events, side_effects, pc) => {\n  keys(state).forEach(function(key) {\n    obj[key] = function(x) {\n      if (!arguments.length) {\n        return state[key];\n      }\n      if (\n        key === 'dimensions' &&\n        Object.prototype.toString.call(x) === '[object Array]'\n      ) {\n        console.warn('pc.dimensions([]) is deprecated, use pc.dimensions({})');\n        x = obj.applyDimensionDefaults(x);\n      }\n      let old = state[key];\n      state[key] = x;\n      side_effects.call(key, obj, { value: x, previous: old });\n      events.call(key, obj, { value: x, previous: old });\n      return obj;\n    };\n  });\n};\n\nexport default getset;\n","// side effects for setters\nimport sideEffects from './state/sideEffects';\nimport getset from './util/getset';\n\nconst d3_rebind = (target, source, method) =>\n  function() {\n    const value = method.apply(source, arguments);\n    return value === source ? target : value;\n  };\n\nconst _rebind = (target, source, method) => {\n  target[method] = d3_rebind(target, source, source[method]);\n  return target;\n};\n\nconst bindEvents = (\n  __,\n  ctx,\n  pc,\n  xscale,\n  flags,\n  brushedQueue,\n  foregroundQueue,\n  events,\n  axis\n) => {\n  const side_effects = sideEffects(\n    __,\n    ctx,\n    pc,\n    xscale,\n    flags,\n    brushedQueue,\n    foregroundQueue\n  );\n\n  // create getter/setters\n  getset(pc, __, events, side_effects, pc);\n\n  // expose events\n  // getter/setter with event firing\n  _rebind(pc, events, 'on');\n\n  _rebind(\n    pc,\n    axis,\n    'ticks',\n    'orient',\n    'tickValues',\n    'tickSubdivide',\n    'tickSize',\n    'tickPadding',\n    'tickFormat'\n  );\n};\n\nexport default bindEvents;\n","// misc\nimport renderQueue from './util/renderQueue';\nimport w from './util/width';\n\n// brush\nimport install1DAxes from './brush/1d';\nimport install2DStrums from './brush/strums';\nimport installAngularBrush from './brush/angular';\n\n// api\nimport intersection from './api/intersection';\nimport mergeParcoords from './api/mergeParcoords';\nimport selected from './api/selected';\nimport brushMode from './api/brushMode';\nimport updateAxes from './api/updateAxes';\nimport autoscale from './api/autoscale';\nimport brushable from './api/brushable';\nimport commonScale from './api/commonScale';\nimport computeRealCentroids from './api/computeRealCentroids';\nimport applyDimensionDefaults from './api/applyDimensionDefaults';\nimport createAxes from './api/createAxes';\nimport axisDots from './api/axisDots';\nimport applyAxisConfig from './api/applyAxisConfig';\nimport reorderable from './api/reorderable';\nimport resize from './api/resize';\nimport reorder from './api/reorder';\nimport sortDimensions from './api/sortDimensions';\nimport sortDimensionsByRowData from './api/sortDimensionsByRowData';\nimport clear from './api/clear';\nimport {\n  pathBrushed,\n  renderBrushed,\n  renderBrushedDefault,\n  renderBrushedQueue,\n} from './api/renderBrushed';\nimport brushReset from './api/brushReset';\nimport toType from './api/toType';\nimport toString from './api/toString';\nimport adjacentPairs from './api/adjacentPairs';\nimport highlight from './api/highlight';\nimport unhighlight from './api/unhighlight';\nimport removeAxes from './api/removeAxes';\nimport render from './api/render';\nimport renderDefault, {\n  pathForeground,\n  renderDefaultQueue,\n} from './api/renderDefault';\nimport toTypeCoerceNumbers from './api/toTypeCoerceNumbers';\nimport detectDimensionTypes from './api/detectDimensionTypes';\nimport getOrderedDimensionKeys from './api/getOrderedDimensionKeys';\nimport interactive from './api/interactive';\nimport shadows from './api/shadows';\nimport init from './api/init';\nimport flip from './api/flip';\nimport detectDimensions from './api/detectDimensions';\nimport scale from './api/scale';\n\nimport { version } from '../package.json';\nimport initState from './state';\nimport bindEvents from './bindEvents';\n\n//css\nimport './parallel-coordinates.css';\n\nconst ParCoords = userConfig => {\n  const state = initState(userConfig);\n  const {\n    config,\n    events,\n    flags,\n    xscale,\n    dragging,\n    axis,\n    ctx,\n    canvas,\n    brush,\n  } = state;\n\n  const pc = init(config, canvas, ctx);\n\n  const position = d => {\n    if (xscale.range().length === 0) {\n      xscale.range([0, w(config)], 1);\n    }\n    return dragging[d] == null ? xscale(d) : dragging[d];\n  };\n\n  const brushedQueue = renderQueue(pathBrushed(config, ctx, position))\n    .rate(50)\n    .clear(() => pc.clear('brushed'));\n\n  const foregroundQueue = renderQueue(pathForeground(config, ctx, position))\n    .rate(50)\n    .clear(function() {\n      pc.clear('foreground');\n      pc.clear('highlight');\n    });\n\n  bindEvents(\n    config,\n    ctx,\n    pc,\n    xscale,\n    flags,\n    brushedQueue,\n    foregroundQueue,\n    events,\n    axis\n  );\n\n  // expose the state of the chart\n  pc.state = config;\n  pc.flags = flags;\n\n  pc.autoscale = autoscale(config, pc, xscale, ctx);\n  pc.scale = scale(config);\n  pc.flip = flip(config);\n  pc.commonScale = commonScale(config, pc);\n  pc.detectDimensions = detectDimensions(pc);\n  // attempt to determine types of each dimension based on first row of data\n  pc.detectDimensionTypes = detectDimensionTypes;\n  pc.applyDimensionDefaults = applyDimensionDefaults(config, pc);\n  pc.getOrderedDimensionKeys = getOrderedDimensionKeys(config);\n\n  //Renders the polylines.\n  pc.render = render(config, pc, events);\n  pc.renderBrushed = renderBrushed(config, pc, events);\n  pc.render.default = renderDefault(config, pc, ctx, position);\n  pc.render.queue = renderDefaultQueue(config, pc, foregroundQueue);\n  pc.renderBrushed.default = renderBrushedDefault(\n    config,\n    ctx,\n    position,\n    pc,\n    brush\n  );\n  pc.renderBrushed.queue = renderBrushedQueue(config, brush, brushedQueue);\n\n  pc.compute_real_centroids = computeRealCentroids(config.dimensions, position);\n  pc.shadows = shadows(flags, pc);\n  pc.axisDots = axisDots(config, pc, position);\n  pc.clear = clear(config, pc, ctx, brush);\n  pc.createAxes = createAxes(config, pc, xscale, flags, axis);\n  pc.removeAxes = removeAxes(pc);\n  pc.updateAxes = updateAxes(config, pc, position, axis, flags);\n  pc.applyAxisConfig = applyAxisConfig;\n  pc.brushable = brushable(config, pc, flags);\n  pc.brushReset = brushReset(config);\n  pc.selected = selected(config);\n  pc.reorderable = reorderable(config, pc, xscale, position, dragging, flags);\n\n  // Reorder dimensions, such that the highest value (visually) is on the left and\n  // the lowest on the right. Visual values are determined by the data values in\n  // the given row.\n  pc.reorder = reorder(config, pc, xscale);\n  pc.sortDimensionsByRowData = sortDimensionsByRowData(config);\n  pc.sortDimensions = sortDimensions(config, position);\n\n  // pairs of adjacent dimensions\n  pc.adjacent_pairs = adjacentPairs;\n  pc.interactive = interactive(flags);\n\n  // expose internal state\n  pc.xscale = xscale;\n  pc.ctx = ctx;\n  pc.canvas = canvas;\n  pc.g = () => pc._g;\n\n  // rescale for height, width and margins\n  // TODO currently assumes chart is brushable, and destroys old brushes\n  pc.resize = resize(config, pc, flags, events);\n\n  // highlight an array of data\n  pc.highlight = highlight(config, pc, canvas, events, ctx, position);\n  // clear highlighting\n  pc.unhighlight = unhighlight(config, pc, canvas);\n\n  // calculate 2d intersection of line a->b with line c->d\n  // points are objects with x and y properties\n  pc.intersection = intersection;\n\n  // Merges the canvases and SVG elements into one canvas element which is then passed into the callback\n  // (so you can choose to save it to disk, etc.)\n  pc.mergeParcoords = mergeParcoords(pc);\n  pc.brushModes = () => Object.getOwnPropertyNames(brush.modes);\n  pc.brushMode = brushMode(brush, config, pc);\n\n  // install brushes\n  install1DAxes(brush, config, pc, events);\n  install2DStrums(brush, config, pc, events, xscale);\n  installAngularBrush(brush, config, pc, events, xscale);\n\n  pc.version = version;\n  // this descriptive text should live with other introspective methods\n  pc.toString = toString(config);\n  pc.toType = toType;\n  // try to coerce to number before returning type\n  pc.toTypeCoerceNumbers = toTypeCoerceNumbers;\n\n  return pc;\n};\n\nexport default ParCoords;\n"],"names":["renderQueue","func","_queue","rq","data","render","valid","invalidate","doFrame","chunk","splice","_rate","map","slice","add","concat","rate","value","arguments","length","remaining","clear","_invalidate","w","config","width","margin","right","left","brushExtents","state","pc","brushes","brushNodes","extents","keys","dimensions","reduce","acc","cur","brush","undefined","brushSelection","d","extent","brushSelections","g","selectAll","each","select","forEach","dim","yExtent","yscale","call","move","reverse","renderBrushed","brushReset","dimension","brushed","event","selected","brushGroup","is_brushed","p","actives","filter","_brushRange","invert","within","bandwidth","predicate","every","type","some","Error","brushPredicate","brushUpdated","events","newSelection","brushFor","axis","_selector","brushRangeMax","range","_brush","brushY","on","sourceEvent","stopPropagation","node","install","createAxes","append","attr","style","uninstall","remove","BrushState","install1DAxes","Object","assign","modes","selection","strumRect","containmentTest","strum","p1","minX","p2","m1","b1","m2","b2","x","y","y1","y2","Math","min","max","crossesStrum","id","strums","test","d1","dims","d2","point","ids","getOwnPropertyNames","isNaN","crossTest","removeStrum","active","svg","i","onDragEnd","drawStrum","activePoint","_svg","points","_line","circles","_drag","drag","enter","ev","maxX","minY","maxY","onDrag","top","h","height","bottom","dimensionsForPoint","xscale","getOrderedDimensionKeys","indexOf","onDragStart","mouse","consecutive","first","second","insert","install2DStrums","hypothenuse","a","b","sqrt","signedAngle","angle","PI","startAngle","arc","endAngle","tmp","arcs","c","asin","outerRadius","p3","_path","d3Arc","innerRadius","sAngle","uAngle","installAngularBrush","intersection","mergeParcoords","devicePixelRatio","window","mergedCanvas","document","createElement","canvas","foreground","clientWidth","clientHeight","context","getContext","fillStyle","fillRect","key","drawImage","DOMURL","URL","webkitURL","serializer","XMLSerializer","svgStr","serializeToString","src","btoa","img","Image","onload","callback","ranges","nodes","k","push","__data__","values","ranger","domain","includes","flipAxes","unshift","ii","dimRange","dimDomain","j","category","categoryIndex","categoryRangeValue","multiBrushData","idx","filtered","z","String","toUpperCase","currentMode","brushMode","mode","brushModes","dimensionLabels","title","flipAxisAndUpdatePCP","flip","parentElement","transition","duration","animationTime","scale","rotateLabels","delta","deltaY","dimensionTitleRotation","preventDefault","updateAxes","position","flags","g_data","axisElement","applyAxisConfig","text","exit","brushable","reorderable","getRange","nullValueSeparator","nullValueSeparatorPadding","autoscale","ctx","defaultScales","_extent","getTime","scalePoint","tempDate","val","scaleTime","scaleLinear","counts","sort","tempArr","pop","categoricalRange","addBy","scaleOrdinal","strokeStyle","color","lineWidth","globalCompositeOperation","composite","globalAlpha","alpha","brushedColor","highlight","ctrlKey","html","outerHTML","replace","dat","parentNode","commonScale","global","t","detectDimensions","scales","bundleDimension","computeRealCentroids","row","applyDimensionDefaults","types","detectDimensionTypes","orient","ticks","innerTickSize","outerTickSize","tickPadding","index","removeAxes","_g","axes","axisDots","r","_r","marks","pow","beginPath","stroke","fill","axisCfg","axisLeft","axisRight","axisTop","axisBottom","tickValues","tickSizeInner","tickSizeOuter","tickFormat","dragging","__origin__","__","dx","sortDimensions","resize","reorder","firstDim","sortDimensionsByRowData","rowdata","reordered","highlighted","unhighlight","copy","positionSortedKeys","pixelDifference","localeCompare","isBrushed","object","brushState","hasOwnProperty","layer","clearRect","alphaOnBrushed","computeCentroids","centroids","cols","$V","cx","cy","leftCentroid","clusterCentroids","get","rightCentroid","centroid","bundlingStrength","computeControlPoints","smoothness","cps","e","col","mid","diff","subtract","singleCurve","moveTo","showControlPoints","bezierCurveTo","getNullPosition","log","singlePath","lineTo","colorPath","_functor","v","pathBrushed","functor","renderBrushedDefault","renderBrushedQueue","brushedQueue","brushesToKeep","toType","toString","match","toLowerCase","adjacentPairs","ret","arr","pathHighlight","classed","pathForeground","renderDefault","default","renderDefaultQueue","foregroundQueue","queue","toTypeCoerceNumbers","parseFloat","Number","parseInt","ascending","interactive","shadows","init","DefaultConfig","initState","userConfig","dimensionTitles","warn","eventTypes","dispatch","apply","computeClusterCentroids","clusterCounts","scaled","has","set","count","_map","without","items","el","sideEffects","hideAxis","getset","obj","side_effects","prototype","old","previous","d3_rebind","target","source","method","_rebind","bindEvents","ParCoords","compute_real_centroids","adjacent_pairs","version"],"mappings":"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"}